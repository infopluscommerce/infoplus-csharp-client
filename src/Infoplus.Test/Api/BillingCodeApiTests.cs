/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing BillingCodeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class BillingCodeApiTests
    {
        private BillingCodeApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new BillingCodeApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BillingCodeApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' BillingCodeApi
            //Assert.IsInstanceOfType(typeof(BillingCodeApi), instance, "instance is a BillingCodeApi");
        }

        
        /// <summary>
        /// Test AddBillingCode
        /// </summary>
        [Test]
        public void AddBillingCodeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BillingCode body = null;
            //var response = instance.AddBillingCode(body);
            //Assert.IsInstanceOf<BillingCode> (response, "response is BillingCode");
        }
        
        /// <summary>
        /// Test AddBillingCodeAudit
        /// </summary>
        [Test]
        public void AddBillingCodeAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? billingCodeId = null;
            //string billingCodeAudit = null;
            //instance.AddBillingCodeAudit(billingCodeId, billingCodeAudit);
            
        }
        
        /// <summary>
        /// Test AddBillingCodeFile
        /// </summary>
        [Test]
        public void AddBillingCodeFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? billingCodeId = null;
            //string fileName = null;
            //instance.AddBillingCodeFile(billingCodeId, fileName);
            
        }
        
        /// <summary>
        /// Test AddBillingCodeFileByURL
        /// </summary>
        [Test]
        public void AddBillingCodeFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? billingCodeId = null;
            //instance.AddBillingCodeFileByURL(body, billingCodeId);
            
        }
        
        /// <summary>
        /// Test AddBillingCodeTag
        /// </summary>
        [Test]
        public void AddBillingCodeTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? billingCodeId = null;
            //string billingCodeTag = null;
            //instance.AddBillingCodeTag(billingCodeId, billingCodeTag);
            
        }
        
        /// <summary>
        /// Test DeleteBillingCode
        /// </summary>
        [Test]
        public void DeleteBillingCodeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? billingCodeId = null;
            //instance.DeleteBillingCode(billingCodeId);
            
        }
        
        /// <summary>
        /// Test DeleteBillingCodeFile
        /// </summary>
        [Test]
        public void DeleteBillingCodeFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? billingCodeId = null;
            //int? fileId = null;
            //instance.DeleteBillingCodeFile(billingCodeId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteBillingCodeTag
        /// </summary>
        [Test]
        public void DeleteBillingCodeTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? billingCodeId = null;
            //string billingCodeTag = null;
            //instance.DeleteBillingCodeTag(billingCodeId, billingCodeTag);
            
        }
        
        /// <summary>
        /// Test GetBillingCodeByFilter
        /// </summary>
        [Test]
        public void GetBillingCodeByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetBillingCodeByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<BillingCode>> (response, "response is List<BillingCode>");
        }
        
        /// <summary>
        /// Test GetBillingCodeById
        /// </summary>
        [Test]
        public void GetBillingCodeByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? billingCodeId = null;
            //var response = instance.GetBillingCodeById(billingCodeId);
            //Assert.IsInstanceOf<BillingCode> (response, "response is BillingCode");
        }
        
        /// <summary>
        /// Test GetBillingCodeFiles
        /// </summary>
        [Test]
        public void GetBillingCodeFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? billingCodeId = null;
            //instance.GetBillingCodeFiles(billingCodeId);
            
        }
        
        /// <summary>
        /// Test GetBillingCodeTags
        /// </summary>
        [Test]
        public void GetBillingCodeTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? billingCodeId = null;
            //instance.GetBillingCodeTags(billingCodeId);
            
        }
        
        /// <summary>
        /// Test GetDuplicateBillingCodeById
        /// </summary>
        [Test]
        public void GetDuplicateBillingCodeByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? billingCodeId = null;
            //var response = instance.GetDuplicateBillingCodeById(billingCodeId);
            //Assert.IsInstanceOf<BillingCode> (response, "response is BillingCode");
        }
        
        /// <summary>
        /// Test UpdateBillingCode
        /// </summary>
        [Test]
        public void UpdateBillingCodeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BillingCode body = null;
            //instance.UpdateBillingCode(body);
            
        }
        
        /// <summary>
        /// Test UpdateBillingCodeCustomFields
        /// </summary>
        [Test]
        public void UpdateBillingCodeCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BillingCode body = null;
            //instance.UpdateBillingCodeCustomFields(body);
            
        }
        
    }

}
