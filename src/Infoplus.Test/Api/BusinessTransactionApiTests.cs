/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing BusinessTransactionApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class BusinessTransactionApiTests
    {
        private BusinessTransactionApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new BusinessTransactionApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BusinessTransactionApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' BusinessTransactionApi
            //Assert.IsInstanceOfType(typeof(BusinessTransactionApi), instance, "instance is a BusinessTransactionApi");
        }

        
        /// <summary>
        /// Test AddBusinessTransaction
        /// </summary>
        [Test]
        public void AddBusinessTransactionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BusinessTransaction body = null;
            //var response = instance.AddBusinessTransaction(body);
            //Assert.IsInstanceOf<BusinessTransaction> (response, "response is BusinessTransaction");
        }
        
        /// <summary>
        /// Test AddBusinessTransactionAudit
        /// </summary>
        [Test]
        public void AddBusinessTransactionAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? businessTransactionId = null;
            //string businessTransactionAudit = null;
            //instance.AddBusinessTransactionAudit(businessTransactionId, businessTransactionAudit);
            
        }
        
        /// <summary>
        /// Test AddBusinessTransactionFile
        /// </summary>
        [Test]
        public void AddBusinessTransactionFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? businessTransactionId = null;
            //string fileName = null;
            //instance.AddBusinessTransactionFile(businessTransactionId, fileName);
            
        }
        
        /// <summary>
        /// Test AddBusinessTransactionFileByURL
        /// </summary>
        [Test]
        public void AddBusinessTransactionFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? businessTransactionId = null;
            //instance.AddBusinessTransactionFileByURL(body, businessTransactionId);
            
        }
        
        /// <summary>
        /// Test AddBusinessTransactionTag
        /// </summary>
        [Test]
        public void AddBusinessTransactionTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? businessTransactionId = null;
            //string businessTransactionTag = null;
            //instance.AddBusinessTransactionTag(businessTransactionId, businessTransactionTag);
            
        }
        
        /// <summary>
        /// Test DeleteBusinessTransactionFile
        /// </summary>
        [Test]
        public void DeleteBusinessTransactionFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? businessTransactionId = null;
            //int? fileId = null;
            //instance.DeleteBusinessTransactionFile(businessTransactionId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteBusinessTransactionTag
        /// </summary>
        [Test]
        public void DeleteBusinessTransactionTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? businessTransactionId = null;
            //string businessTransactionTag = null;
            //instance.DeleteBusinessTransactionTag(businessTransactionId, businessTransactionTag);
            
        }
        
        /// <summary>
        /// Test GetBusinessTransactionByFilter
        /// </summary>
        [Test]
        public void GetBusinessTransactionByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetBusinessTransactionByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<BusinessTransaction>> (response, "response is List<BusinessTransaction>");
        }
        
        /// <summary>
        /// Test GetBusinessTransactionById
        /// </summary>
        [Test]
        public void GetBusinessTransactionByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? businessTransactionId = null;
            //var response = instance.GetBusinessTransactionById(businessTransactionId);
            //Assert.IsInstanceOf<BusinessTransaction> (response, "response is BusinessTransaction");
        }
        
        /// <summary>
        /// Test GetBusinessTransactionFiles
        /// </summary>
        [Test]
        public void GetBusinessTransactionFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? businessTransactionId = null;
            //instance.GetBusinessTransactionFiles(businessTransactionId);
            
        }
        
        /// <summary>
        /// Test GetBusinessTransactionTags
        /// </summary>
        [Test]
        public void GetBusinessTransactionTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? businessTransactionId = null;
            //instance.GetBusinessTransactionTags(businessTransactionId);
            
        }
        
        /// <summary>
        /// Test GetDuplicateBusinessTransactionById
        /// </summary>
        [Test]
        public void GetDuplicateBusinessTransactionByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? businessTransactionId = null;
            //var response = instance.GetDuplicateBusinessTransactionById(businessTransactionId);
            //Assert.IsInstanceOf<BusinessTransaction> (response, "response is BusinessTransaction");
        }
        
        /// <summary>
        /// Test UpdateBusinessTransaction
        /// </summary>
        [Test]
        public void UpdateBusinessTransactionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BusinessTransaction body = null;
            //instance.UpdateBusinessTransaction(body);
            
        }
        
        /// <summary>
        /// Test UpdateBusinessTransactionCustomFields
        /// </summary>
        [Test]
        public void UpdateBusinessTransactionCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BusinessTransaction body = null;
            //instance.UpdateBusinessTransactionCustomFields(body);
            
        }
        
    }

}
