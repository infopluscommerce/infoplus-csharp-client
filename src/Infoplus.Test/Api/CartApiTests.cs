/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing CartApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CartApiTests
    {
        private CartApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CartApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CartApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CartApi
            //Assert.IsInstanceOfType(typeof(CartApi), instance, "instance is a CartApi");
        }

        
        /// <summary>
        /// Test AddCart
        /// </summary>
        [Test]
        public void AddCartTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Cart body = null;
            //var response = instance.AddCart(body);
            //Assert.IsInstanceOf<Cart> (response, "response is Cart");
        }
        
        /// <summary>
        /// Test AddCartAudit
        /// </summary>
        [Test]
        public void AddCartAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartId = null;
            //string cartAudit = null;
            //instance.AddCartAudit(cartId, cartAudit);
            
        }
        
        /// <summary>
        /// Test AddCartFile
        /// </summary>
        [Test]
        public void AddCartFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartId = null;
            //string fileName = null;
            //instance.AddCartFile(cartId, fileName);
            
        }
        
        /// <summary>
        /// Test AddCartFileByURL
        /// </summary>
        [Test]
        public void AddCartFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? cartId = null;
            //instance.AddCartFileByURL(body, cartId);
            
        }
        
        /// <summary>
        /// Test AddCartTag
        /// </summary>
        [Test]
        public void AddCartTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartId = null;
            //string cartTag = null;
            //instance.AddCartTag(cartId, cartTag);
            
        }
        
        /// <summary>
        /// Test DeleteCart
        /// </summary>
        [Test]
        public void DeleteCartTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartId = null;
            //instance.DeleteCart(cartId);
            
        }
        
        /// <summary>
        /// Test DeleteCartFile
        /// </summary>
        [Test]
        public void DeleteCartFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartId = null;
            //int? fileId = null;
            //instance.DeleteCartFile(cartId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteCartTag
        /// </summary>
        [Test]
        public void DeleteCartTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartId = null;
            //string cartTag = null;
            //instance.DeleteCartTag(cartId, cartTag);
            
        }
        
        /// <summary>
        /// Test GetCartByFilter
        /// </summary>
        [Test]
        public void GetCartByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetCartByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<Cart>> (response, "response is List<Cart>");
        }
        
        /// <summary>
        /// Test GetCartById
        /// </summary>
        [Test]
        public void GetCartByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartId = null;
            //var response = instance.GetCartById(cartId);
            //Assert.IsInstanceOf<Cart> (response, "response is Cart");
        }
        
        /// <summary>
        /// Test GetCartFiles
        /// </summary>
        [Test]
        public void GetCartFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartId = null;
            //instance.GetCartFiles(cartId);
            
        }
        
        /// <summary>
        /// Test GetCartTags
        /// </summary>
        [Test]
        public void GetCartTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartId = null;
            //instance.GetCartTags(cartId);
            
        }
        
        /// <summary>
        /// Test GetDuplicateCartById
        /// </summary>
        [Test]
        public void GetDuplicateCartByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartId = null;
            //var response = instance.GetDuplicateCartById(cartId);
            //Assert.IsInstanceOf<Cart> (response, "response is Cart");
        }
        
        /// <summary>
        /// Test UpdateCart
        /// </summary>
        [Test]
        public void UpdateCartTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Cart body = null;
            //instance.UpdateCart(body);
            
        }
        
    }

}
