/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing CartonContentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CartonContentApiTests
    {
        private CartonContentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CartonContentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CartonContentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CartonContentApi
            //Assert.IsInstanceOfType(typeof(CartonContentApi), instance, "instance is a CartonContentApi");
        }

        
        /// <summary>
        /// Test AddCartonContent
        /// </summary>
        [Test]
        public void AddCartonContentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartonContent body = null;
            //var response = instance.AddCartonContent(body);
            //Assert.IsInstanceOf<CartonContent> (response, "response is CartonContent");
        }
        
        /// <summary>
        /// Test AddCartonContentAudit
        /// </summary>
        [Test]
        public void AddCartonContentAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartonContentId = null;
            //string cartonContentAudit = null;
            //instance.AddCartonContentAudit(cartonContentId, cartonContentAudit);
            
        }
        
        /// <summary>
        /// Test AddCartonContentFile
        /// </summary>
        [Test]
        public void AddCartonContentFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartonContentId = null;
            //string fileName = null;
            //instance.AddCartonContentFile(cartonContentId, fileName);
            
        }
        
        /// <summary>
        /// Test AddCartonContentFileByURL
        /// </summary>
        [Test]
        public void AddCartonContentFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? cartonContentId = null;
            //instance.AddCartonContentFileByURL(body, cartonContentId);
            
        }
        
        /// <summary>
        /// Test AddCartonContentTag
        /// </summary>
        [Test]
        public void AddCartonContentTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartonContentId = null;
            //string cartonContentTag = null;
            //instance.AddCartonContentTag(cartonContentId, cartonContentTag);
            
        }
        
        /// <summary>
        /// Test DeleteCartonContent
        /// </summary>
        [Test]
        public void DeleteCartonContentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartonContentId = null;
            //instance.DeleteCartonContent(cartonContentId);
            
        }
        
        /// <summary>
        /// Test DeleteCartonContentFile
        /// </summary>
        [Test]
        public void DeleteCartonContentFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartonContentId = null;
            //int? fileId = null;
            //instance.DeleteCartonContentFile(cartonContentId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteCartonContentTag
        /// </summary>
        [Test]
        public void DeleteCartonContentTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartonContentId = null;
            //string cartonContentTag = null;
            //instance.DeleteCartonContentTag(cartonContentId, cartonContentTag);
            
        }
        
        /// <summary>
        /// Test GetCartonContentByFilter
        /// </summary>
        [Test]
        public void GetCartonContentByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetCartonContentByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<CartonContent>> (response, "response is List<CartonContent>");
        }
        
        /// <summary>
        /// Test GetCartonContentById
        /// </summary>
        [Test]
        public void GetCartonContentByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartonContentId = null;
            //var response = instance.GetCartonContentById(cartonContentId);
            //Assert.IsInstanceOf<CartonContent> (response, "response is CartonContent");
        }
        
        /// <summary>
        /// Test GetCartonContentFiles
        /// </summary>
        [Test]
        public void GetCartonContentFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartonContentId = null;
            //instance.GetCartonContentFiles(cartonContentId);
            
        }
        
        /// <summary>
        /// Test GetCartonContentTags
        /// </summary>
        [Test]
        public void GetCartonContentTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartonContentId = null;
            //instance.GetCartonContentTags(cartonContentId);
            
        }
        
        /// <summary>
        /// Test GetDuplicateCartonContentById
        /// </summary>
        [Test]
        public void GetDuplicateCartonContentByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cartonContentId = null;
            //var response = instance.GetDuplicateCartonContentById(cartonContentId);
            //Assert.IsInstanceOf<CartonContent> (response, "response is CartonContent");
        }
        
        /// <summary>
        /// Test UpdateCartonContent
        /// </summary>
        [Test]
        public void UpdateCartonContentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartonContent body = null;
            //instance.UpdateCartonContent(body);
            
        }
        
        /// <summary>
        /// Test UpdateCartonContentCustomFields
        /// </summary>
        [Test]
        public void UpdateCartonContentCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartonContent body = null;
            //instance.UpdateCartonContentCustomFields(body);
            
        }
        
    }

}
