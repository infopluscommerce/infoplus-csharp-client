/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing CustomFieldApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CustomFieldApiTests
    {
        private CustomFieldApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CustomFieldApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CustomFieldApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CustomFieldApi
            //Assert.IsInstanceOfType(typeof(CustomFieldApi), instance, "instance is a CustomFieldApi");
        }

        
        /// <summary>
        /// Test AddCustomField
        /// </summary>
        [Test]
        public void AddCustomFieldTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CustomField body = null;
            //var response = instance.AddCustomField(body);
            //Assert.IsInstanceOf<CustomField> (response, "response is CustomField");
        }
        
        /// <summary>
        /// Test AddCustomFieldAudit
        /// </summary>
        [Test]
        public void AddCustomFieldAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customFieldId = null;
            //string customFieldAudit = null;
            //instance.AddCustomFieldAudit(customFieldId, customFieldAudit);
            
        }
        
        /// <summary>
        /// Test AddCustomFieldFile
        /// </summary>
        [Test]
        public void AddCustomFieldFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customFieldId = null;
            //string fileName = null;
            //instance.AddCustomFieldFile(customFieldId, fileName);
            
        }
        
        /// <summary>
        /// Test AddCustomFieldFileByURL
        /// </summary>
        [Test]
        public void AddCustomFieldFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? customFieldId = null;
            //instance.AddCustomFieldFileByURL(body, customFieldId);
            
        }
        
        /// <summary>
        /// Test AddCustomFieldTag
        /// </summary>
        [Test]
        public void AddCustomFieldTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customFieldId = null;
            //string customFieldTag = null;
            //instance.AddCustomFieldTag(customFieldId, customFieldTag);
            
        }
        
        /// <summary>
        /// Test DeleteCustomFieldFile
        /// </summary>
        [Test]
        public void DeleteCustomFieldFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customFieldId = null;
            //int? fileId = null;
            //instance.DeleteCustomFieldFile(customFieldId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteCustomFieldTag
        /// </summary>
        [Test]
        public void DeleteCustomFieldTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customFieldId = null;
            //string customFieldTag = null;
            //instance.DeleteCustomFieldTag(customFieldId, customFieldTag);
            
        }
        
        /// <summary>
        /// Test GetCustomFieldByFilter
        /// </summary>
        [Test]
        public void GetCustomFieldByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetCustomFieldByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<CustomField>> (response, "response is List<CustomField>");
        }
        
        /// <summary>
        /// Test GetCustomFieldById
        /// </summary>
        [Test]
        public void GetCustomFieldByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customFieldId = null;
            //var response = instance.GetCustomFieldById(customFieldId);
            //Assert.IsInstanceOf<CustomField> (response, "response is CustomField");
        }
        
        /// <summary>
        /// Test GetCustomFieldFiles
        /// </summary>
        [Test]
        public void GetCustomFieldFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customFieldId = null;
            //instance.GetCustomFieldFiles(customFieldId);
            
        }
        
        /// <summary>
        /// Test GetCustomFieldTags
        /// </summary>
        [Test]
        public void GetCustomFieldTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customFieldId = null;
            //instance.GetCustomFieldTags(customFieldId);
            
        }
        
        /// <summary>
        /// Test GetDuplicateCustomFieldById
        /// </summary>
        [Test]
        public void GetDuplicateCustomFieldByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customFieldId = null;
            //var response = instance.GetDuplicateCustomFieldById(customFieldId);
            //Assert.IsInstanceOf<CustomField> (response, "response is CustomField");
        }
        
        /// <summary>
        /// Test UpdateCustomField
        /// </summary>
        [Test]
        public void UpdateCustomFieldTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CustomField body = null;
            //instance.UpdateCustomField(body);
            
        }
        
    }

}
