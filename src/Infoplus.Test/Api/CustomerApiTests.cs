/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing CustomerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CustomerApiTests
    {
        private CustomerApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CustomerApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CustomerApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CustomerApi
            //Assert.IsInstanceOfType(typeof(CustomerApi), instance, "instance is a CustomerApi");
        }

        
        /// <summary>
        /// Test AddCustomer
        /// </summary>
        [Test]
        public void AddCustomerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Customer body = null;
            //var response = instance.AddCustomer(body);
            //Assert.IsInstanceOf<Customer> (response, "response is Customer");
        }
        
        /// <summary>
        /// Test AddCustomerAudit
        /// </summary>
        [Test]
        public void AddCustomerAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customerId = null;
            //string customerAudit = null;
            //instance.AddCustomerAudit(customerId, customerAudit);
            
        }
        
        /// <summary>
        /// Test AddCustomerFile
        /// </summary>
        [Test]
        public void AddCustomerFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customerId = null;
            //string fileName = null;
            //instance.AddCustomerFile(customerId, fileName);
            
        }
        
        /// <summary>
        /// Test AddCustomerFileByURL
        /// </summary>
        [Test]
        public void AddCustomerFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? customerId = null;
            //instance.AddCustomerFileByURL(body, customerId);
            
        }
        
        /// <summary>
        /// Test AddCustomerTag
        /// </summary>
        [Test]
        public void AddCustomerTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customerId = null;
            //string customerTag = null;
            //instance.AddCustomerTag(customerId, customerTag);
            
        }
        
        /// <summary>
        /// Test DeleteCustomer
        /// </summary>
        [Test]
        public void DeleteCustomerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customerId = null;
            //instance.DeleteCustomer(customerId);
            
        }
        
        /// <summary>
        /// Test DeleteCustomerFile
        /// </summary>
        [Test]
        public void DeleteCustomerFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customerId = null;
            //int? fileId = null;
            //instance.DeleteCustomerFile(customerId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteCustomerTag
        /// </summary>
        [Test]
        public void DeleteCustomerTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customerId = null;
            //string customerTag = null;
            //instance.DeleteCustomerTag(customerId, customerTag);
            
        }
        
        /// <summary>
        /// Test GetByCustomerNo
        /// </summary>
        [Test]
        public void GetByCustomerNoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? lobId = null;
            //string customerNo = null;
            //var response = instance.GetByCustomerNo(lobId, customerNo);
            //Assert.IsInstanceOf<Customer> (response, "response is Customer");
        }
        
        /// <summary>
        /// Test GetCustomerByFilter
        /// </summary>
        [Test]
        public void GetCustomerByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetCustomerByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<Customer>> (response, "response is List<Customer>");
        }
        
        /// <summary>
        /// Test GetCustomerById
        /// </summary>
        [Test]
        public void GetCustomerByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customerId = null;
            //var response = instance.GetCustomerById(customerId);
            //Assert.IsInstanceOf<Customer> (response, "response is Customer");
        }
        
        /// <summary>
        /// Test GetCustomerFiles
        /// </summary>
        [Test]
        public void GetCustomerFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customerId = null;
            //instance.GetCustomerFiles(customerId);
            
        }
        
        /// <summary>
        /// Test GetCustomerTags
        /// </summary>
        [Test]
        public void GetCustomerTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customerId = null;
            //instance.GetCustomerTags(customerId);
            
        }
        
        /// <summary>
        /// Test GetDuplicateCustomerById
        /// </summary>
        [Test]
        public void GetDuplicateCustomerByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customerId = null;
            //var response = instance.GetDuplicateCustomerById(customerId);
            //Assert.IsInstanceOf<Customer> (response, "response is Customer");
        }
        
        /// <summary>
        /// Test UpdateCustomer
        /// </summary>
        [Test]
        public void UpdateCustomerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Customer body = null;
            //instance.UpdateCustomer(body);
            
        }
        
        /// <summary>
        /// Test UpdateCustomerCustomFields
        /// </summary>
        [Test]
        public void UpdateCustomerCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Customer body = null;
            //instance.UpdateCustomerCustomFields(body);
            
        }
        
    }

}
