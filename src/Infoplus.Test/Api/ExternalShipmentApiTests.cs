/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing ExternalShipmentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ExternalShipmentApiTests
    {
        private ExternalShipmentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ExternalShipmentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ExternalShipmentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ExternalShipmentApi
            //Assert.IsInstanceOfType(typeof(ExternalShipmentApi), instance, "instance is a ExternalShipmentApi");
        }

        
        /// <summary>
        /// Test AddExternalShipment
        /// </summary>
        [Test]
        public void AddExternalShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ExternalShipment body = null;
            //var response = instance.AddExternalShipment(body);
            //Assert.IsInstanceOf<ExternalShipment> (response, "response is ExternalShipment");
        }
        
        /// <summary>
        /// Test AddExternalShipmentAudit
        /// </summary>
        [Test]
        public void AddExternalShipmentAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? externalShipmentId = null;
            //string externalShipmentAudit = null;
            //instance.AddExternalShipmentAudit(externalShipmentId, externalShipmentAudit);
            
        }
        
        /// <summary>
        /// Test AddExternalShipmentFile
        /// </summary>
        [Test]
        public void AddExternalShipmentFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? externalShipmentId = null;
            //string fileName = null;
            //instance.AddExternalShipmentFile(externalShipmentId, fileName);
            
        }
        
        /// <summary>
        /// Test AddExternalShipmentFileByURL
        /// </summary>
        [Test]
        public void AddExternalShipmentFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? externalShipmentId = null;
            //instance.AddExternalShipmentFileByURL(body, externalShipmentId);
            
        }
        
        /// <summary>
        /// Test AddExternalShipmentTag
        /// </summary>
        [Test]
        public void AddExternalShipmentTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? externalShipmentId = null;
            //string externalShipmentTag = null;
            //instance.AddExternalShipmentTag(externalShipmentId, externalShipmentTag);
            
        }
        
        /// <summary>
        /// Test DeleteExternalShipment
        /// </summary>
        [Test]
        public void DeleteExternalShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? externalShipmentId = null;
            //instance.DeleteExternalShipment(externalShipmentId);
            
        }
        
        /// <summary>
        /// Test DeleteExternalShipmentFile
        /// </summary>
        [Test]
        public void DeleteExternalShipmentFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? externalShipmentId = null;
            //int? fileId = null;
            //instance.DeleteExternalShipmentFile(externalShipmentId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteExternalShipmentTag
        /// </summary>
        [Test]
        public void DeleteExternalShipmentTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? externalShipmentId = null;
            //string externalShipmentTag = null;
            //instance.DeleteExternalShipmentTag(externalShipmentId, externalShipmentTag);
            
        }
        
        /// <summary>
        /// Test GetDuplicateExternalShipmentById
        /// </summary>
        [Test]
        public void GetDuplicateExternalShipmentByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? externalShipmentId = null;
            //var response = instance.GetDuplicateExternalShipmentById(externalShipmentId);
            //Assert.IsInstanceOf<ExternalShipment> (response, "response is ExternalShipment");
        }
        
        /// <summary>
        /// Test GetExternalShipmentByFilter
        /// </summary>
        [Test]
        public void GetExternalShipmentByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetExternalShipmentByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<ExternalShipment>> (response, "response is List<ExternalShipment>");
        }
        
        /// <summary>
        /// Test GetExternalShipmentById
        /// </summary>
        [Test]
        public void GetExternalShipmentByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? externalShipmentId = null;
            //var response = instance.GetExternalShipmentById(externalShipmentId);
            //Assert.IsInstanceOf<ExternalShipment> (response, "response is ExternalShipment");
        }
        
        /// <summary>
        /// Test GetExternalShipmentFiles
        /// </summary>
        [Test]
        public void GetExternalShipmentFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? externalShipmentId = null;
            //instance.GetExternalShipmentFiles(externalShipmentId);
            
        }
        
        /// <summary>
        /// Test GetExternalShipmentTags
        /// </summary>
        [Test]
        public void GetExternalShipmentTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? externalShipmentId = null;
            //instance.GetExternalShipmentTags(externalShipmentId);
            
        }
        
        /// <summary>
        /// Test UpdateExternalShipment
        /// </summary>
        [Test]
        public void UpdateExternalShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ExternalShipment body = null;
            //instance.UpdateExternalShipment(body);
            
        }
        
        /// <summary>
        /// Test UpdateExternalShipmentCustomFields
        /// </summary>
        [Test]
        public void UpdateExternalShipmentCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ExternalShipment body = null;
            //instance.UpdateExternalShipmentCustomFields(body);
            
        }
        
    }

}
