/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing FulfillmentPlanApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class FulfillmentPlanApiTests
    {
        private FulfillmentPlanApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new FulfillmentPlanApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FulfillmentPlanApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' FulfillmentPlanApi
            //Assert.IsInstanceOfType(typeof(FulfillmentPlanApi), instance, "instance is a FulfillmentPlanApi");
        }

        
        /// <summary>
        /// Test AddFulfillmentPlan
        /// </summary>
        [Test]
        public void AddFulfillmentPlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FulfillmentPlan body = null;
            //var response = instance.AddFulfillmentPlan(body);
            //Assert.IsInstanceOf<FulfillmentPlan> (response, "response is FulfillmentPlan");
        }
        
        /// <summary>
        /// Test AddFulfillmentPlanAudit
        /// </summary>
        [Test]
        public void AddFulfillmentPlanAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? fulfillmentPlanId = null;
            //string fulfillmentPlanAudit = null;
            //instance.AddFulfillmentPlanAudit(fulfillmentPlanId, fulfillmentPlanAudit);
            
        }
        
        /// <summary>
        /// Test AddFulfillmentPlanFile
        /// </summary>
        [Test]
        public void AddFulfillmentPlanFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? fulfillmentPlanId = null;
            //string fileName = null;
            //instance.AddFulfillmentPlanFile(fulfillmentPlanId, fileName);
            
        }
        
        /// <summary>
        /// Test AddFulfillmentPlanFileByURL
        /// </summary>
        [Test]
        public void AddFulfillmentPlanFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? fulfillmentPlanId = null;
            //instance.AddFulfillmentPlanFileByURL(body, fulfillmentPlanId);
            
        }
        
        /// <summary>
        /// Test AddFulfillmentPlanTag
        /// </summary>
        [Test]
        public void AddFulfillmentPlanTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? fulfillmentPlanId = null;
            //string fulfillmentPlanTag = null;
            //instance.AddFulfillmentPlanTag(fulfillmentPlanId, fulfillmentPlanTag);
            
        }
        
        /// <summary>
        /// Test DeleteFulfillmentPlan
        /// </summary>
        [Test]
        public void DeleteFulfillmentPlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? fulfillmentPlanId = null;
            //instance.DeleteFulfillmentPlan(fulfillmentPlanId);
            
        }
        
        /// <summary>
        /// Test DeleteFulfillmentPlanFile
        /// </summary>
        [Test]
        public void DeleteFulfillmentPlanFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? fulfillmentPlanId = null;
            //int? fileId = null;
            //instance.DeleteFulfillmentPlanFile(fulfillmentPlanId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteFulfillmentPlanTag
        /// </summary>
        [Test]
        public void DeleteFulfillmentPlanTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? fulfillmentPlanId = null;
            //string fulfillmentPlanTag = null;
            //instance.DeleteFulfillmentPlanTag(fulfillmentPlanId, fulfillmentPlanTag);
            
        }
        
        /// <summary>
        /// Test GetDuplicateFulfillmentPlanById
        /// </summary>
        [Test]
        public void GetDuplicateFulfillmentPlanByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? fulfillmentPlanId = null;
            //var response = instance.GetDuplicateFulfillmentPlanById(fulfillmentPlanId);
            //Assert.IsInstanceOf<FulfillmentPlan> (response, "response is FulfillmentPlan");
        }
        
        /// <summary>
        /// Test GetFulfillmentPlanByFilter
        /// </summary>
        [Test]
        public void GetFulfillmentPlanByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetFulfillmentPlanByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<FulfillmentPlan>> (response, "response is List<FulfillmentPlan>");
        }
        
        /// <summary>
        /// Test GetFulfillmentPlanById
        /// </summary>
        [Test]
        public void GetFulfillmentPlanByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? fulfillmentPlanId = null;
            //var response = instance.GetFulfillmentPlanById(fulfillmentPlanId);
            //Assert.IsInstanceOf<FulfillmentPlan> (response, "response is FulfillmentPlan");
        }
        
        /// <summary>
        /// Test GetFulfillmentPlanFiles
        /// </summary>
        [Test]
        public void GetFulfillmentPlanFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? fulfillmentPlanId = null;
            //instance.GetFulfillmentPlanFiles(fulfillmentPlanId);
            
        }
        
        /// <summary>
        /// Test GetFulfillmentPlanTags
        /// </summary>
        [Test]
        public void GetFulfillmentPlanTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? fulfillmentPlanId = null;
            //instance.GetFulfillmentPlanTags(fulfillmentPlanId);
            
        }
        
        /// <summary>
        /// Test UpdateFulfillmentPlan
        /// </summary>
        [Test]
        public void UpdateFulfillmentPlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FulfillmentPlan body = null;
            //instance.UpdateFulfillmentPlan(body);
            
        }
        
        /// <summary>
        /// Test UpdateFulfillmentPlanCustomFields
        /// </summary>
        [Test]
        public void UpdateFulfillmentPlanCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FulfillmentPlan body = null;
            //instance.UpdateFulfillmentPlanCustomFields(body);
            
        }
        
    }

}
