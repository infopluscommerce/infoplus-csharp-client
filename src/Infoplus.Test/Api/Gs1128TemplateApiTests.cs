/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing Gs1128TemplateApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class Gs1128TemplateApiTests
    {
        private Gs1128TemplateApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new Gs1128TemplateApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Gs1128TemplateApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' Gs1128TemplateApi
            //Assert.IsInstanceOfType(typeof(Gs1128TemplateApi), instance, "instance is a Gs1128TemplateApi");
        }

        
        /// <summary>
        /// Test AddGs1128Template
        /// </summary>
        [Test]
        public void AddGs1128TemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Gs1128Template body = null;
            //var response = instance.AddGs1128Template(body);
            //Assert.IsInstanceOf<Gs1128Template> (response, "response is Gs1128Template");
        }
        
        /// <summary>
        /// Test AddGs1128TemplateAudit
        /// </summary>
        [Test]
        public void AddGs1128TemplateAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? gs1128TemplateId = null;
            //string gs1128TemplateAudit = null;
            //instance.AddGs1128TemplateAudit(gs1128TemplateId, gs1128TemplateAudit);
            
        }
        
        /// <summary>
        /// Test AddGs1128TemplateFile
        /// </summary>
        [Test]
        public void AddGs1128TemplateFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? gs1128TemplateId = null;
            //string fileName = null;
            //instance.AddGs1128TemplateFile(gs1128TemplateId, fileName);
            
        }
        
        /// <summary>
        /// Test AddGs1128TemplateFileByURL
        /// </summary>
        [Test]
        public void AddGs1128TemplateFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? gs1128TemplateId = null;
            //instance.AddGs1128TemplateFileByURL(body, gs1128TemplateId);
            
        }
        
        /// <summary>
        /// Test AddGs1128TemplateTag
        /// </summary>
        [Test]
        public void AddGs1128TemplateTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? gs1128TemplateId = null;
            //string gs1128TemplateTag = null;
            //instance.AddGs1128TemplateTag(gs1128TemplateId, gs1128TemplateTag);
            
        }
        
        /// <summary>
        /// Test DeleteGs1128Template
        /// </summary>
        [Test]
        public void DeleteGs1128TemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? gs1128TemplateId = null;
            //instance.DeleteGs1128Template(gs1128TemplateId);
            
        }
        
        /// <summary>
        /// Test DeleteGs1128TemplateFile
        /// </summary>
        [Test]
        public void DeleteGs1128TemplateFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? gs1128TemplateId = null;
            //int? fileId = null;
            //instance.DeleteGs1128TemplateFile(gs1128TemplateId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteGs1128TemplateTag
        /// </summary>
        [Test]
        public void DeleteGs1128TemplateTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? gs1128TemplateId = null;
            //string gs1128TemplateTag = null;
            //instance.DeleteGs1128TemplateTag(gs1128TemplateId, gs1128TemplateTag);
            
        }
        
        /// <summary>
        /// Test GetDuplicateGs1128TemplateById
        /// </summary>
        [Test]
        public void GetDuplicateGs1128TemplateByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? gs1128TemplateId = null;
            //var response = instance.GetDuplicateGs1128TemplateById(gs1128TemplateId);
            //Assert.IsInstanceOf<Gs1128Template> (response, "response is Gs1128Template");
        }
        
        /// <summary>
        /// Test GetGs1128TemplateByFilter
        /// </summary>
        [Test]
        public void GetGs1128TemplateByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetGs1128TemplateByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<Gs1128Template>> (response, "response is List<Gs1128Template>");
        }
        
        /// <summary>
        /// Test GetGs1128TemplateById
        /// </summary>
        [Test]
        public void GetGs1128TemplateByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? gs1128TemplateId = null;
            //var response = instance.GetGs1128TemplateById(gs1128TemplateId);
            //Assert.IsInstanceOf<Gs1128Template> (response, "response is Gs1128Template");
        }
        
        /// <summary>
        /// Test GetGs1128TemplateFiles
        /// </summary>
        [Test]
        public void GetGs1128TemplateFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? gs1128TemplateId = null;
            //instance.GetGs1128TemplateFiles(gs1128TemplateId);
            
        }
        
        /// <summary>
        /// Test GetGs1128TemplateTags
        /// </summary>
        [Test]
        public void GetGs1128TemplateTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? gs1128TemplateId = null;
            //instance.GetGs1128TemplateTags(gs1128TemplateId);
            
        }
        
        /// <summary>
        /// Test UpdateGs1128Template
        /// </summary>
        [Test]
        public void UpdateGs1128TemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Gs1128Template body = null;
            //instance.UpdateGs1128Template(body);
            
        }
        
    }

}
