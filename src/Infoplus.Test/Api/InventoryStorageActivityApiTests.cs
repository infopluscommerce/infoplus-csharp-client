/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing InventoryStorageActivityApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class InventoryStorageActivityApiTests
    {
        private InventoryStorageActivityApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new InventoryStorageActivityApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of InventoryStorageActivityApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' InventoryStorageActivityApi
            //Assert.IsInstanceOfType(typeof(InventoryStorageActivityApi), instance, "instance is a InventoryStorageActivityApi");
        }

        
        /// <summary>
        /// Test AddInventoryStorageActivity
        /// </summary>
        [Test]
        public void AddInventoryStorageActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InventoryStorageActivity body = null;
            //var response = instance.AddInventoryStorageActivity(body);
            //Assert.IsInstanceOf<InventoryStorageActivity> (response, "response is InventoryStorageActivity");
        }
        
        /// <summary>
        /// Test AddInventoryStorageActivityAudit
        /// </summary>
        [Test]
        public void AddInventoryStorageActivityAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? inventoryStorageActivityId = null;
            //string inventoryStorageActivityAudit = null;
            //instance.AddInventoryStorageActivityAudit(inventoryStorageActivityId, inventoryStorageActivityAudit);
            
        }
        
        /// <summary>
        /// Test AddInventoryStorageActivityFile
        /// </summary>
        [Test]
        public void AddInventoryStorageActivityFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? inventoryStorageActivityId = null;
            //string fileName = null;
            //instance.AddInventoryStorageActivityFile(inventoryStorageActivityId, fileName);
            
        }
        
        /// <summary>
        /// Test AddInventoryStorageActivityFileByURL
        /// </summary>
        [Test]
        public void AddInventoryStorageActivityFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? inventoryStorageActivityId = null;
            //instance.AddInventoryStorageActivityFileByURL(body, inventoryStorageActivityId);
            
        }
        
        /// <summary>
        /// Test AddInventoryStorageActivityTag
        /// </summary>
        [Test]
        public void AddInventoryStorageActivityTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? inventoryStorageActivityId = null;
            //string inventoryStorageActivityTag = null;
            //instance.AddInventoryStorageActivityTag(inventoryStorageActivityId, inventoryStorageActivityTag);
            
        }
        
        /// <summary>
        /// Test DeleteInventoryStorageActivity
        /// </summary>
        [Test]
        public void DeleteInventoryStorageActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? inventoryStorageActivityId = null;
            //instance.DeleteInventoryStorageActivity(inventoryStorageActivityId);
            
        }
        
        /// <summary>
        /// Test DeleteInventoryStorageActivityFile
        /// </summary>
        [Test]
        public void DeleteInventoryStorageActivityFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? inventoryStorageActivityId = null;
            //int? fileId = null;
            //instance.DeleteInventoryStorageActivityFile(inventoryStorageActivityId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteInventoryStorageActivityTag
        /// </summary>
        [Test]
        public void DeleteInventoryStorageActivityTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? inventoryStorageActivityId = null;
            //string inventoryStorageActivityTag = null;
            //instance.DeleteInventoryStorageActivityTag(inventoryStorageActivityId, inventoryStorageActivityTag);
            
        }
        
        /// <summary>
        /// Test GetDuplicateInventoryStorageActivityById
        /// </summary>
        [Test]
        public void GetDuplicateInventoryStorageActivityByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? inventoryStorageActivityId = null;
            //var response = instance.GetDuplicateInventoryStorageActivityById(inventoryStorageActivityId);
            //Assert.IsInstanceOf<InventoryStorageActivity> (response, "response is InventoryStorageActivity");
        }
        
        /// <summary>
        /// Test GetInventoryStorageActivityByFilter
        /// </summary>
        [Test]
        public void GetInventoryStorageActivityByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetInventoryStorageActivityByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<InventoryStorageActivity>> (response, "response is List<InventoryStorageActivity>");
        }
        
        /// <summary>
        /// Test GetInventoryStorageActivityById
        /// </summary>
        [Test]
        public void GetInventoryStorageActivityByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? inventoryStorageActivityId = null;
            //var response = instance.GetInventoryStorageActivityById(inventoryStorageActivityId);
            //Assert.IsInstanceOf<InventoryStorageActivity> (response, "response is InventoryStorageActivity");
        }
        
        /// <summary>
        /// Test GetInventoryStorageActivityFiles
        /// </summary>
        [Test]
        public void GetInventoryStorageActivityFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? inventoryStorageActivityId = null;
            //instance.GetInventoryStorageActivityFiles(inventoryStorageActivityId);
            
        }
        
        /// <summary>
        /// Test GetInventoryStorageActivityTags
        /// </summary>
        [Test]
        public void GetInventoryStorageActivityTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? inventoryStorageActivityId = null;
            //instance.GetInventoryStorageActivityTags(inventoryStorageActivityId);
            
        }
        
        /// <summary>
        /// Test UpdateInventoryStorageActivity
        /// </summary>
        [Test]
        public void UpdateInventoryStorageActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InventoryStorageActivity body = null;
            //instance.UpdateInventoryStorageActivity(body);
            
        }
        
    }

}
