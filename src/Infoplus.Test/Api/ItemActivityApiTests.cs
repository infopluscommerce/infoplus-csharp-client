/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing ItemActivityApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ItemActivityApiTests
    {
        private ItemActivityApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ItemActivityApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ItemActivityApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ItemActivityApi
            //Assert.IsInstanceOfType(typeof(ItemActivityApi), instance, "instance is a ItemActivityApi");
        }

        
        /// <summary>
        /// Test AddItemActivityAudit
        /// </summary>
        [Test]
        public void AddItemActivityAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemActivityId = null;
            //string itemActivityAudit = null;
            //instance.AddItemActivityAudit(itemActivityId, itemActivityAudit);
            
        }
        
        /// <summary>
        /// Test AddItemActivityFile
        /// </summary>
        [Test]
        public void AddItemActivityFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemActivityId = null;
            //string fileName = null;
            //instance.AddItemActivityFile(itemActivityId, fileName);
            
        }
        
        /// <summary>
        /// Test AddItemActivityFileByURL
        /// </summary>
        [Test]
        public void AddItemActivityFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? itemActivityId = null;
            //instance.AddItemActivityFileByURL(body, itemActivityId);
            
        }
        
        /// <summary>
        /// Test AddItemActivityTag
        /// </summary>
        [Test]
        public void AddItemActivityTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemActivityId = null;
            //string itemActivityTag = null;
            //instance.AddItemActivityTag(itemActivityId, itemActivityTag);
            
        }
        
        /// <summary>
        /// Test DeleteItemActivityFile
        /// </summary>
        [Test]
        public void DeleteItemActivityFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemActivityId = null;
            //int? fileId = null;
            //instance.DeleteItemActivityFile(itemActivityId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteItemActivityTag
        /// </summary>
        [Test]
        public void DeleteItemActivityTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemActivityId = null;
            //string itemActivityTag = null;
            //instance.DeleteItemActivityTag(itemActivityId, itemActivityTag);
            
        }
        
        /// <summary>
        /// Test GetDuplicateItemActivityById
        /// </summary>
        [Test]
        public void GetDuplicateItemActivityByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemActivityId = null;
            //var response = instance.GetDuplicateItemActivityById(itemActivityId);
            //Assert.IsInstanceOf<ItemActivity> (response, "response is ItemActivity");
        }
        
        /// <summary>
        /// Test GetItemActivityByFilter
        /// </summary>
        [Test]
        public void GetItemActivityByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetItemActivityByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<ItemActivity>> (response, "response is List<ItemActivity>");
        }
        
        /// <summary>
        /// Test GetItemActivityById
        /// </summary>
        [Test]
        public void GetItemActivityByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemActivityId = null;
            //var response = instance.GetItemActivityById(itemActivityId);
            //Assert.IsInstanceOf<ItemActivity> (response, "response is ItemActivity");
        }
        
        /// <summary>
        /// Test GetItemActivityFiles
        /// </summary>
        [Test]
        public void GetItemActivityFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemActivityId = null;
            //instance.GetItemActivityFiles(itemActivityId);
            
        }
        
        /// <summary>
        /// Test GetItemActivityTags
        /// </summary>
        [Test]
        public void GetItemActivityTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemActivityId = null;
            //instance.GetItemActivityTags(itemActivityId);
            
        }
        
    }

}
