/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing ItemActivityTypeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ItemActivityTypeApiTests
    {
        private ItemActivityTypeApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ItemActivityTypeApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ItemActivityTypeApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ItemActivityTypeApi
            //Assert.IsInstanceOfType(typeof(ItemActivityTypeApi), instance, "instance is a ItemActivityTypeApi");
        }

        
        /// <summary>
        /// Test GetItemActivityTypeById
        /// </summary>
        [Test]
        public void GetItemActivityTypeByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string itemActivityTypeId = null;
            //var response = instance.GetItemActivityTypeById(itemActivityTypeId);
            //Assert.IsInstanceOf<ItemActivityType> (response, "response is ItemActivityType");
        }
        
        /// <summary>
        /// Test GetItemActivityTypeBySearchText
        /// </summary>
        [Test]
        public void GetItemActivityTypeBySearchTextTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string searchText = null;
            //int? page = null;
            //int? limit = null;
            //var response = instance.GetItemActivityTypeBySearchText(searchText, page, limit);
            //Assert.IsInstanceOf<List<ItemActivityType>> (response, "response is List<ItemActivityType>");
        }
        
    }

}
