/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing ItemReceiptActivityApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ItemReceiptActivityApiTests
    {
        private ItemReceiptActivityApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ItemReceiptActivityApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ItemReceiptActivityApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ItemReceiptActivityApi
            //Assert.IsInstanceOfType(typeof(ItemReceiptActivityApi), instance, "instance is a ItemReceiptActivityApi");
        }

        
        /// <summary>
        /// Test AddItemReceiptActivity
        /// </summary>
        [Test]
        public void AddItemReceiptActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ItemReceiptActivity body = null;
            //var response = instance.AddItemReceiptActivity(body);
            //Assert.IsInstanceOf<ItemReceiptActivity> (response, "response is ItemReceiptActivity");
        }
        
        /// <summary>
        /// Test AddItemReceiptActivityAudit
        /// </summary>
        [Test]
        public void AddItemReceiptActivityAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemReceiptActivityId = null;
            //string itemReceiptActivityAudit = null;
            //instance.AddItemReceiptActivityAudit(itemReceiptActivityId, itemReceiptActivityAudit);
            
        }
        
        /// <summary>
        /// Test AddItemReceiptActivityFile
        /// </summary>
        [Test]
        public void AddItemReceiptActivityFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemReceiptActivityId = null;
            //string fileName = null;
            //instance.AddItemReceiptActivityFile(itemReceiptActivityId, fileName);
            
        }
        
        /// <summary>
        /// Test AddItemReceiptActivityFileByURL
        /// </summary>
        [Test]
        public void AddItemReceiptActivityFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? itemReceiptActivityId = null;
            //instance.AddItemReceiptActivityFileByURL(body, itemReceiptActivityId);
            
        }
        
        /// <summary>
        /// Test AddItemReceiptActivityTag
        /// </summary>
        [Test]
        public void AddItemReceiptActivityTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemReceiptActivityId = null;
            //string itemReceiptActivityTag = null;
            //instance.AddItemReceiptActivityTag(itemReceiptActivityId, itemReceiptActivityTag);
            
        }
        
        /// <summary>
        /// Test DeleteItemReceiptActivity
        /// </summary>
        [Test]
        public void DeleteItemReceiptActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemReceiptActivityId = null;
            //instance.DeleteItemReceiptActivity(itemReceiptActivityId);
            
        }
        
        /// <summary>
        /// Test DeleteItemReceiptActivityFile
        /// </summary>
        [Test]
        public void DeleteItemReceiptActivityFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemReceiptActivityId = null;
            //int? fileId = null;
            //instance.DeleteItemReceiptActivityFile(itemReceiptActivityId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteItemReceiptActivityTag
        /// </summary>
        [Test]
        public void DeleteItemReceiptActivityTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemReceiptActivityId = null;
            //string itemReceiptActivityTag = null;
            //instance.DeleteItemReceiptActivityTag(itemReceiptActivityId, itemReceiptActivityTag);
            
        }
        
        /// <summary>
        /// Test GetDuplicateItemReceiptActivityById
        /// </summary>
        [Test]
        public void GetDuplicateItemReceiptActivityByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemReceiptActivityId = null;
            //var response = instance.GetDuplicateItemReceiptActivityById(itemReceiptActivityId);
            //Assert.IsInstanceOf<ItemReceiptActivity> (response, "response is ItemReceiptActivity");
        }
        
        /// <summary>
        /// Test GetItemReceiptActivityByFilter
        /// </summary>
        [Test]
        public void GetItemReceiptActivityByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetItemReceiptActivityByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<ItemReceiptActivity>> (response, "response is List<ItemReceiptActivity>");
        }
        
        /// <summary>
        /// Test GetItemReceiptActivityById
        /// </summary>
        [Test]
        public void GetItemReceiptActivityByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemReceiptActivityId = null;
            //var response = instance.GetItemReceiptActivityById(itemReceiptActivityId);
            //Assert.IsInstanceOf<ItemReceiptActivity> (response, "response is ItemReceiptActivity");
        }
        
        /// <summary>
        /// Test GetItemReceiptActivityFiles
        /// </summary>
        [Test]
        public void GetItemReceiptActivityFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemReceiptActivityId = null;
            //instance.GetItemReceiptActivityFiles(itemReceiptActivityId);
            
        }
        
        /// <summary>
        /// Test GetItemReceiptActivityTags
        /// </summary>
        [Test]
        public void GetItemReceiptActivityTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemReceiptActivityId = null;
            //instance.GetItemReceiptActivityTags(itemReceiptActivityId);
            
        }
        
        /// <summary>
        /// Test UpdateItemReceiptActivity
        /// </summary>
        [Test]
        public void UpdateItemReceiptActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ItemReceiptActivity body = null;
            //instance.UpdateItemReceiptActivity(body);
            
        }
        
    }

}
