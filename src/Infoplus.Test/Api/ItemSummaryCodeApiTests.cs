/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing ItemSummaryCodeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ItemSummaryCodeApiTests
    {
        private ItemSummaryCodeApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ItemSummaryCodeApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ItemSummaryCodeApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ItemSummaryCodeApi
            //Assert.IsInstanceOfType(typeof(ItemSummaryCodeApi), instance, "instance is a ItemSummaryCodeApi");
        }

        
        /// <summary>
        /// Test AddItemSummaryCode
        /// </summary>
        [Test]
        public void AddItemSummaryCodeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ItemSummaryCode body = null;
            //var response = instance.AddItemSummaryCode(body);
            //Assert.IsInstanceOf<ItemSummaryCode> (response, "response is ItemSummaryCode");
        }
        
        /// <summary>
        /// Test AddItemSummaryCodeAudit
        /// </summary>
        [Test]
        public void AddItemSummaryCodeAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemSummaryCodeId = null;
            //string itemSummaryCodeAudit = null;
            //instance.AddItemSummaryCodeAudit(itemSummaryCodeId, itemSummaryCodeAudit);
            
        }
        
        /// <summary>
        /// Test AddItemSummaryCodeFile
        /// </summary>
        [Test]
        public void AddItemSummaryCodeFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemSummaryCodeId = null;
            //string fileName = null;
            //instance.AddItemSummaryCodeFile(itemSummaryCodeId, fileName);
            
        }
        
        /// <summary>
        /// Test AddItemSummaryCodeFileByURL
        /// </summary>
        [Test]
        public void AddItemSummaryCodeFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? itemSummaryCodeId = null;
            //instance.AddItemSummaryCodeFileByURL(body, itemSummaryCodeId);
            
        }
        
        /// <summary>
        /// Test AddItemSummaryCodeTag
        /// </summary>
        [Test]
        public void AddItemSummaryCodeTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemSummaryCodeId = null;
            //string itemSummaryCodeTag = null;
            //instance.AddItemSummaryCodeTag(itemSummaryCodeId, itemSummaryCodeTag);
            
        }
        
        /// <summary>
        /// Test DeleteItemSummaryCode
        /// </summary>
        [Test]
        public void DeleteItemSummaryCodeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemSummaryCodeId = null;
            //instance.DeleteItemSummaryCode(itemSummaryCodeId);
            
        }
        
        /// <summary>
        /// Test DeleteItemSummaryCodeFile
        /// </summary>
        [Test]
        public void DeleteItemSummaryCodeFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemSummaryCodeId = null;
            //int? fileId = null;
            //instance.DeleteItemSummaryCodeFile(itemSummaryCodeId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteItemSummaryCodeTag
        /// </summary>
        [Test]
        public void DeleteItemSummaryCodeTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemSummaryCodeId = null;
            //string itemSummaryCodeTag = null;
            //instance.DeleteItemSummaryCodeTag(itemSummaryCodeId, itemSummaryCodeTag);
            
        }
        
        /// <summary>
        /// Test GetDuplicateItemSummaryCodeById
        /// </summary>
        [Test]
        public void GetDuplicateItemSummaryCodeByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemSummaryCodeId = null;
            //var response = instance.GetDuplicateItemSummaryCodeById(itemSummaryCodeId);
            //Assert.IsInstanceOf<ItemSummaryCode> (response, "response is ItemSummaryCode");
        }
        
        /// <summary>
        /// Test GetItemSummaryCodeByFilter
        /// </summary>
        [Test]
        public void GetItemSummaryCodeByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetItemSummaryCodeByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<ItemSummaryCode>> (response, "response is List<ItemSummaryCode>");
        }
        
        /// <summary>
        /// Test GetItemSummaryCodeById
        /// </summary>
        [Test]
        public void GetItemSummaryCodeByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemSummaryCodeId = null;
            //var response = instance.GetItemSummaryCodeById(itemSummaryCodeId);
            //Assert.IsInstanceOf<ItemSummaryCode> (response, "response is ItemSummaryCode");
        }
        
        /// <summary>
        /// Test GetItemSummaryCodeFiles
        /// </summary>
        [Test]
        public void GetItemSummaryCodeFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemSummaryCodeId = null;
            //instance.GetItemSummaryCodeFiles(itemSummaryCodeId);
            
        }
        
        /// <summary>
        /// Test GetItemSummaryCodeTags
        /// </summary>
        [Test]
        public void GetItemSummaryCodeTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? itemSummaryCodeId = null;
            //instance.GetItemSummaryCodeTags(itemSummaryCodeId);
            
        }
        
        /// <summary>
        /// Test UpdateItemSummaryCode
        /// </summary>
        [Test]
        public void UpdateItemSummaryCodeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ItemSummaryCode body = null;
            //instance.UpdateItemSummaryCode(body);
            
        }
        
    }

}
