/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing JobRecipeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class JobRecipeApiTests
    {
        private JobRecipeApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new JobRecipeApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of JobRecipeApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' JobRecipeApi
            //Assert.IsInstanceOfType(typeof(JobRecipeApi), instance, "instance is a JobRecipeApi");
        }

        
        /// <summary>
        /// Test AddJobRecipe
        /// </summary>
        [Test]
        public void AddJobRecipeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //JobRecipe body = null;
            //var response = instance.AddJobRecipe(body);
            //Assert.IsInstanceOf<JobRecipe> (response, "response is JobRecipe");
        }
        
        /// <summary>
        /// Test AddJobRecipeAudit
        /// </summary>
        [Test]
        public void AddJobRecipeAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? jobRecipeId = null;
            //string jobRecipeAudit = null;
            //instance.AddJobRecipeAudit(jobRecipeId, jobRecipeAudit);
            
        }
        
        /// <summary>
        /// Test AddJobRecipeFile
        /// </summary>
        [Test]
        public void AddJobRecipeFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? jobRecipeId = null;
            //string fileName = null;
            //instance.AddJobRecipeFile(jobRecipeId, fileName);
            
        }
        
        /// <summary>
        /// Test AddJobRecipeFileByURL
        /// </summary>
        [Test]
        public void AddJobRecipeFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? jobRecipeId = null;
            //instance.AddJobRecipeFileByURL(body, jobRecipeId);
            
        }
        
        /// <summary>
        /// Test AddJobRecipeTag
        /// </summary>
        [Test]
        public void AddJobRecipeTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? jobRecipeId = null;
            //string jobRecipeTag = null;
            //instance.AddJobRecipeTag(jobRecipeId, jobRecipeTag);
            
        }
        
        /// <summary>
        /// Test DeleteJobRecipe
        /// </summary>
        [Test]
        public void DeleteJobRecipeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? jobRecipeId = null;
            //instance.DeleteJobRecipe(jobRecipeId);
            
        }
        
        /// <summary>
        /// Test DeleteJobRecipeFile
        /// </summary>
        [Test]
        public void DeleteJobRecipeFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? jobRecipeId = null;
            //int? fileId = null;
            //instance.DeleteJobRecipeFile(jobRecipeId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteJobRecipeTag
        /// </summary>
        [Test]
        public void DeleteJobRecipeTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? jobRecipeId = null;
            //string jobRecipeTag = null;
            //instance.DeleteJobRecipeTag(jobRecipeId, jobRecipeTag);
            
        }
        
        /// <summary>
        /// Test GetDuplicateJobRecipeById
        /// </summary>
        [Test]
        public void GetDuplicateJobRecipeByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? jobRecipeId = null;
            //var response = instance.GetDuplicateJobRecipeById(jobRecipeId);
            //Assert.IsInstanceOf<JobRecipe> (response, "response is JobRecipe");
        }
        
        /// <summary>
        /// Test GetJobRecipeByFilter
        /// </summary>
        [Test]
        public void GetJobRecipeByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetJobRecipeByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<JobRecipe>> (response, "response is List<JobRecipe>");
        }
        
        /// <summary>
        /// Test GetJobRecipeById
        /// </summary>
        [Test]
        public void GetJobRecipeByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? jobRecipeId = null;
            //var response = instance.GetJobRecipeById(jobRecipeId);
            //Assert.IsInstanceOf<JobRecipe> (response, "response is JobRecipe");
        }
        
        /// <summary>
        /// Test GetJobRecipeFiles
        /// </summary>
        [Test]
        public void GetJobRecipeFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? jobRecipeId = null;
            //instance.GetJobRecipeFiles(jobRecipeId);
            
        }
        
        /// <summary>
        /// Test GetJobRecipeTags
        /// </summary>
        [Test]
        public void GetJobRecipeTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? jobRecipeId = null;
            //instance.GetJobRecipeTags(jobRecipeId);
            
        }
        
        /// <summary>
        /// Test UpdateJobRecipe
        /// </summary>
        [Test]
        public void UpdateJobRecipeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //JobRecipe body = null;
            //instance.UpdateJobRecipe(body);
            
        }
        
        /// <summary>
        /// Test UpdateJobRecipeCustomFields
        /// </summary>
        [Test]
        public void UpdateJobRecipeCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //JobRecipe body = null;
            //instance.UpdateJobRecipeCustomFields(body);
            
        }
        
    }

}
