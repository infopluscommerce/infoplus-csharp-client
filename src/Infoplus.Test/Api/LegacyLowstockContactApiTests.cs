/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing LegacyLowstockContactApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class LegacyLowstockContactApiTests
    {
        private LegacyLowstockContactApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new LegacyLowstockContactApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of LegacyLowstockContactApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' LegacyLowstockContactApi
            //Assert.IsInstanceOfType(typeof(LegacyLowstockContactApi), instance, "instance is a LegacyLowstockContactApi");
        }

        
        /// <summary>
        /// Test AddLegacyLowstockContact
        /// </summary>
        [Test]
        public void AddLegacyLowstockContactTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LegacyLowstockContact body = null;
            //var response = instance.AddLegacyLowstockContact(body);
            //Assert.IsInstanceOf<LegacyLowstockContact> (response, "response is LegacyLowstockContact");
        }
        
        /// <summary>
        /// Test AddLegacyLowstockContactAudit
        /// </summary>
        [Test]
        public void AddLegacyLowstockContactAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? legacyLowstockContactId = null;
            //string legacyLowstockContactAudit = null;
            //instance.AddLegacyLowstockContactAudit(legacyLowstockContactId, legacyLowstockContactAudit);
            
        }
        
        /// <summary>
        /// Test AddLegacyLowstockContactFile
        /// </summary>
        [Test]
        public void AddLegacyLowstockContactFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? legacyLowstockContactId = null;
            //string fileName = null;
            //instance.AddLegacyLowstockContactFile(legacyLowstockContactId, fileName);
            
        }
        
        /// <summary>
        /// Test AddLegacyLowstockContactFileByURL
        /// </summary>
        [Test]
        public void AddLegacyLowstockContactFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? legacyLowstockContactId = null;
            //instance.AddLegacyLowstockContactFileByURL(body, legacyLowstockContactId);
            
        }
        
        /// <summary>
        /// Test AddLegacyLowstockContactTag
        /// </summary>
        [Test]
        public void AddLegacyLowstockContactTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? legacyLowstockContactId = null;
            //string legacyLowstockContactTag = null;
            //instance.AddLegacyLowstockContactTag(legacyLowstockContactId, legacyLowstockContactTag);
            
        }
        
        /// <summary>
        /// Test DeleteLegacyLowstockContact
        /// </summary>
        [Test]
        public void DeleteLegacyLowstockContactTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? legacyLowstockContactId = null;
            //instance.DeleteLegacyLowstockContact(legacyLowstockContactId);
            
        }
        
        /// <summary>
        /// Test DeleteLegacyLowstockContactFile
        /// </summary>
        [Test]
        public void DeleteLegacyLowstockContactFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? legacyLowstockContactId = null;
            //int? fileId = null;
            //instance.DeleteLegacyLowstockContactFile(legacyLowstockContactId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteLegacyLowstockContactTag
        /// </summary>
        [Test]
        public void DeleteLegacyLowstockContactTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? legacyLowstockContactId = null;
            //string legacyLowstockContactTag = null;
            //instance.DeleteLegacyLowstockContactTag(legacyLowstockContactId, legacyLowstockContactTag);
            
        }
        
        /// <summary>
        /// Test GetDuplicateLegacyLowstockContactById
        /// </summary>
        [Test]
        public void GetDuplicateLegacyLowstockContactByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? legacyLowstockContactId = null;
            //var response = instance.GetDuplicateLegacyLowstockContactById(legacyLowstockContactId);
            //Assert.IsInstanceOf<LegacyLowstockContact> (response, "response is LegacyLowstockContact");
        }
        
        /// <summary>
        /// Test GetLegacyLowstockContactByFilter
        /// </summary>
        [Test]
        public void GetLegacyLowstockContactByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetLegacyLowstockContactByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<LegacyLowstockContact>> (response, "response is List<LegacyLowstockContact>");
        }
        
        /// <summary>
        /// Test GetLegacyLowstockContactById
        /// </summary>
        [Test]
        public void GetLegacyLowstockContactByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? legacyLowstockContactId = null;
            //var response = instance.GetLegacyLowstockContactById(legacyLowstockContactId);
            //Assert.IsInstanceOf<LegacyLowstockContact> (response, "response is LegacyLowstockContact");
        }
        
        /// <summary>
        /// Test GetLegacyLowstockContactFiles
        /// </summary>
        [Test]
        public void GetLegacyLowstockContactFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? legacyLowstockContactId = null;
            //instance.GetLegacyLowstockContactFiles(legacyLowstockContactId);
            
        }
        
        /// <summary>
        /// Test GetLegacyLowstockContactTags
        /// </summary>
        [Test]
        public void GetLegacyLowstockContactTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? legacyLowstockContactId = null;
            //instance.GetLegacyLowstockContactTags(legacyLowstockContactId);
            
        }
        
        /// <summary>
        /// Test UpdateLegacyLowstockContact
        /// </summary>
        [Test]
        public void UpdateLegacyLowstockContactTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LegacyLowstockContact body = null;
            //instance.UpdateLegacyLowstockContact(body);
            
        }
        
    }

}
