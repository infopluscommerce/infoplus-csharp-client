/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing LoadContentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class LoadContentApiTests
    {
        private LoadContentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new LoadContentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of LoadContentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' LoadContentApi
            //Assert.IsInstanceOfType(typeof(LoadContentApi), instance, "instance is a LoadContentApi");
        }

        
        /// <summary>
        /// Test AddLoadContentAudit
        /// </summary>
        [Test]
        public void AddLoadContentAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? loadContentId = null;
            //string loadContentAudit = null;
            //instance.AddLoadContentAudit(loadContentId, loadContentAudit);
            
        }
        
        /// <summary>
        /// Test AddLoadContentFile
        /// </summary>
        [Test]
        public void AddLoadContentFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? loadContentId = null;
            //string fileName = null;
            //instance.AddLoadContentFile(loadContentId, fileName);
            
        }
        
        /// <summary>
        /// Test AddLoadContentFileByURL
        /// </summary>
        [Test]
        public void AddLoadContentFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? loadContentId = null;
            //instance.AddLoadContentFileByURL(body, loadContentId);
            
        }
        
        /// <summary>
        /// Test AddLoadContentTag
        /// </summary>
        [Test]
        public void AddLoadContentTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? loadContentId = null;
            //string loadContentTag = null;
            //instance.AddLoadContentTag(loadContentId, loadContentTag);
            
        }
        
        /// <summary>
        /// Test DeleteLoadContentFile
        /// </summary>
        [Test]
        public void DeleteLoadContentFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? loadContentId = null;
            //int? fileId = null;
            //instance.DeleteLoadContentFile(loadContentId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteLoadContentTag
        /// </summary>
        [Test]
        public void DeleteLoadContentTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? loadContentId = null;
            //string loadContentTag = null;
            //instance.DeleteLoadContentTag(loadContentId, loadContentTag);
            
        }
        
        /// <summary>
        /// Test GetDuplicateLoadContentById
        /// </summary>
        [Test]
        public void GetDuplicateLoadContentByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? loadContentId = null;
            //var response = instance.GetDuplicateLoadContentById(loadContentId);
            //Assert.IsInstanceOf<LoadContent> (response, "response is LoadContent");
        }
        
        /// <summary>
        /// Test GetLoadContentByFilter
        /// </summary>
        [Test]
        public void GetLoadContentByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetLoadContentByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<LoadContent>> (response, "response is List<LoadContent>");
        }
        
        /// <summary>
        /// Test GetLoadContentById
        /// </summary>
        [Test]
        public void GetLoadContentByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? loadContentId = null;
            //var response = instance.GetLoadContentById(loadContentId);
            //Assert.IsInstanceOf<LoadContent> (response, "response is LoadContent");
        }
        
        /// <summary>
        /// Test GetLoadContentFiles
        /// </summary>
        [Test]
        public void GetLoadContentFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? loadContentId = null;
            //instance.GetLoadContentFiles(loadContentId);
            
        }
        
        /// <summary>
        /// Test GetLoadContentTags
        /// </summary>
        [Test]
        public void GetLoadContentTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? loadContentId = null;
            //instance.GetLoadContentTags(loadContentId);
            
        }
        
        /// <summary>
        /// Test UpdateLoadContentCustomFields
        /// </summary>
        [Test]
        public void UpdateLoadContentCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LoadContent body = null;
            //instance.UpdateLoadContentCustomFields(body);
            
        }
        
    }

}
