/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing OmsOrderApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OmsOrderApiTests
    {
        private OmsOrderApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OmsOrderApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OmsOrderApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OmsOrderApi
            //Assert.IsInstanceOfType(typeof(OmsOrderApi), instance, "instance is a OmsOrderApi");
        }

        
        /// <summary>
        /// Test AddOmsOrder
        /// </summary>
        [Test]
        public void AddOmsOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OmsOrder body = null;
            //var response = instance.AddOmsOrder(body);
            //Assert.IsInstanceOf<OmsOrder> (response, "response is OmsOrder");
        }
        
        /// <summary>
        /// Test AddOmsOrderAudit
        /// </summary>
        [Test]
        public void AddOmsOrderAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? omsOrderId = null;
            //string omsOrderAudit = null;
            //instance.AddOmsOrderAudit(omsOrderId, omsOrderAudit);
            
        }
        
        /// <summary>
        /// Test AddOmsOrderFile
        /// </summary>
        [Test]
        public void AddOmsOrderFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? omsOrderId = null;
            //string fileName = null;
            //instance.AddOmsOrderFile(omsOrderId, fileName);
            
        }
        
        /// <summary>
        /// Test AddOmsOrderFileByURL
        /// </summary>
        [Test]
        public void AddOmsOrderFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? omsOrderId = null;
            //instance.AddOmsOrderFileByURL(body, omsOrderId);
            
        }
        
        /// <summary>
        /// Test AddOmsOrderTag
        /// </summary>
        [Test]
        public void AddOmsOrderTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? omsOrderId = null;
            //string omsOrderTag = null;
            //instance.AddOmsOrderTag(omsOrderId, omsOrderTag);
            
        }
        
        /// <summary>
        /// Test DeleteOmsOrderFile
        /// </summary>
        [Test]
        public void DeleteOmsOrderFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? omsOrderId = null;
            //int? fileId = null;
            //instance.DeleteOmsOrderFile(omsOrderId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteOmsOrderTag
        /// </summary>
        [Test]
        public void DeleteOmsOrderTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? omsOrderId = null;
            //string omsOrderTag = null;
            //instance.DeleteOmsOrderTag(omsOrderId, omsOrderTag);
            
        }
        
        /// <summary>
        /// Test GetDuplicateOmsOrderById
        /// </summary>
        [Test]
        public void GetDuplicateOmsOrderByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? omsOrderId = null;
            //var response = instance.GetDuplicateOmsOrderById(omsOrderId);
            //Assert.IsInstanceOf<OmsOrder> (response, "response is OmsOrder");
        }
        
        /// <summary>
        /// Test GetOmsOrderByFilter
        /// </summary>
        [Test]
        public void GetOmsOrderByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetOmsOrderByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<OmsOrder>> (response, "response is List<OmsOrder>");
        }
        
        /// <summary>
        /// Test GetOmsOrderById
        /// </summary>
        [Test]
        public void GetOmsOrderByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? omsOrderId = null;
            //var response = instance.GetOmsOrderById(omsOrderId);
            //Assert.IsInstanceOf<OmsOrder> (response, "response is OmsOrder");
        }
        
        /// <summary>
        /// Test GetOmsOrderFiles
        /// </summary>
        [Test]
        public void GetOmsOrderFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? omsOrderId = null;
            //instance.GetOmsOrderFiles(omsOrderId);
            
        }
        
        /// <summary>
        /// Test GetOmsOrderTags
        /// </summary>
        [Test]
        public void GetOmsOrderTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? omsOrderId = null;
            //instance.GetOmsOrderTags(omsOrderId);
            
        }
        
        /// <summary>
        /// Test UpdateOmsOrder
        /// </summary>
        [Test]
        public void UpdateOmsOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OmsOrder body = null;
            //instance.UpdateOmsOrder(body);
            
        }
        
        /// <summary>
        /// Test UpdateOmsOrderCustomFields
        /// </summary>
        [Test]
        public void UpdateOmsOrderCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OmsOrder body = null;
            //instance.UpdateOmsOrderCustomFields(body);
            
        }
        
    }

}
