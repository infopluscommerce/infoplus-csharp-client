/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing OrderApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OrderApiTests
    {
        private OrderApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OrderApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OrderApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OrderApi
            //Assert.IsInstanceOfType(typeof(OrderApi), instance, "instance is a OrderApi");
        }

        
        /// <summary>
        /// Test AddOrder
        /// </summary>
        [Test]
        public void AddOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Order body = null;
            //var response = instance.AddOrder(body);
            //Assert.IsInstanceOf<Order> (response, "response is Order");
        }
        
        /// <summary>
        /// Test AddOrderAudit
        /// </summary>
        [Test]
        public void AddOrderAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal? orderId = null;
            //string orderAudit = null;
            //instance.AddOrderAudit(orderId, orderAudit);
            
        }
        
        /// <summary>
        /// Test AddOrderFile
        /// </summary>
        [Test]
        public void AddOrderFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal? orderId = null;
            //string fileName = null;
            //instance.AddOrderFile(orderId, fileName);
            
        }
        
        /// <summary>
        /// Test AddOrderFileByURL
        /// </summary>
        [Test]
        public void AddOrderFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //decimal? orderId = null;
            //instance.AddOrderFileByURL(body, orderId);
            
        }
        
        /// <summary>
        /// Test AddOrderTag
        /// </summary>
        [Test]
        public void AddOrderTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal? orderId = null;
            //string orderTag = null;
            //instance.AddOrderTag(orderId, orderTag);
            
        }
        
        /// <summary>
        /// Test ApplyOrderWarehouseFulfillmentPlan
        /// </summary>
        [Test]
        public void ApplyOrderWarehouseFulfillmentPlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApplyOrderWarehouseFulfillmentPlanInput body = null;
            //var response = instance.ApplyOrderWarehouseFulfillmentPlan(body);
            //Assert.IsInstanceOf<ApplyOrderWarehouseFulfillmentPlanOutput> (response, "response is ApplyOrderWarehouseFulfillmentPlanOutput");
        }
        
        /// <summary>
        /// Test DeleteOrder
        /// </summary>
        [Test]
        public void DeleteOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal? orderId = null;
            //instance.DeleteOrder(orderId);
            
        }
        
        /// <summary>
        /// Test DeleteOrderFile
        /// </summary>
        [Test]
        public void DeleteOrderFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal? orderId = null;
            //int? fileId = null;
            //instance.DeleteOrderFile(orderId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteOrderTag
        /// </summary>
        [Test]
        public void DeleteOrderTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal? orderId = null;
            //string orderTag = null;
            //instance.DeleteOrderTag(orderId, orderTag);
            
        }
        
        /// <summary>
        /// Test EditFulfillmentChannel
        /// </summary>
        [Test]
        public void EditFulfillmentChannelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EditLineItemFulfillmentStrategyInputAPIModel body = null;
            //var response = instance.EditFulfillmentChannel(body);
            //Assert.IsInstanceOf<List<ProcessOutputAPIModel>> (response, "response is List<ProcessOutputAPIModel>");
        }
        
        /// <summary>
        /// Test EditLineItems
        /// </summary>
        [Test]
        public void EditLineItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReqManualSubstitutionInputAPIModel body = null;
            //var response = instance.EditLineItems(body);
            //Assert.IsInstanceOf<List<ProcessOutputAPIModel>> (response, "response is List<ProcessOutputAPIModel>");
        }
        
        /// <summary>
        /// Test GetDuplicateOrderById
        /// </summary>
        [Test]
        public void GetDuplicateOrderByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal? orderId = null;
            //var response = instance.GetDuplicateOrderById(orderId);
            //Assert.IsInstanceOf<Order> (response, "response is Order");
        }
        
        /// <summary>
        /// Test GetOrderByFilter
        /// </summary>
        [Test]
        public void GetOrderByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetOrderByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<Order>> (response, "response is List<Order>");
        }
        
        /// <summary>
        /// Test GetOrderById
        /// </summary>
        [Test]
        public void GetOrderByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal? orderId = null;
            //var response = instance.GetOrderById(orderId);
            //Assert.IsInstanceOf<Order> (response, "response is Order");
        }
        
        /// <summary>
        /// Test GetOrderFiles
        /// </summary>
        [Test]
        public void GetOrderFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal? orderId = null;
            //instance.GetOrderFiles(orderId);
            
        }
        
        /// <summary>
        /// Test GetOrderPackData
        /// </summary>
        [Test]
        public void GetOrderPackDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetOrderPackDataInput body = null;
            //var response = instance.GetOrderPackData(body);
            //Assert.IsInstanceOf<GetOrderPackDataOutput> (response, "response is GetOrderPackDataOutput");
        }
        
        /// <summary>
        /// Test GetOrderTags
        /// </summary>
        [Test]
        public void GetOrderTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal? orderId = null;
            //instance.GetOrderTags(orderId);
            
        }
        
        /// <summary>
        /// Test GetOrderWarehouseFulfillmentData
        /// </summary>
        [Test]
        public void GetOrderWarehouseFulfillmentDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetOrderWarehouseFulfillmentDataInput body = null;
            //var response = instance.GetOrderWarehouseFulfillmentData(body);
            //Assert.IsInstanceOf<GetOrderWarehouseFulfillmentDataOutput> (response, "response is GetOrderWarehouseFulfillmentDataOutput");
        }
        
        /// <summary>
        /// Test RunFulfillmentPlan
        /// </summary>
        [Test]
        public void RunFulfillmentPlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RunFulfillmentPlanInputAPIModel body = null;
            //var response = instance.RunFulfillmentPlan(body);
            //Assert.IsInstanceOf<List<ProcessOutputAPIModel>> (response, "response is List<ProcessOutputAPIModel>");
        }
        
        /// <summary>
        /// Test UpdateOrder
        /// </summary>
        [Test]
        public void UpdateOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Order body = null;
            //instance.UpdateOrder(body);
            
        }
        
        /// <summary>
        /// Test UpdateOrderCustomFields
        /// </summary>
        [Test]
        public void UpdateOrderCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Order body = null;
            //instance.UpdateOrderCustomFields(body);
            
        }
        
    }

}
