/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing ReceivingWorksheetApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ReceivingWorksheetApiTests
    {
        private ReceivingWorksheetApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ReceivingWorksheetApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ReceivingWorksheetApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ReceivingWorksheetApi
            //Assert.IsInstanceOfType(typeof(ReceivingWorksheetApi), instance, "instance is a ReceivingWorksheetApi");
        }

        
        /// <summary>
        /// Test AddReceivingWorksheet
        /// </summary>
        [Test]
        public void AddReceivingWorksheetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReceivingWorksheet body = null;
            //var response = instance.AddReceivingWorksheet(body);
            //Assert.IsInstanceOf<ReceivingWorksheet> (response, "response is ReceivingWorksheet");
        }
        
        /// <summary>
        /// Test AddReceivingWorksheetAudit
        /// </summary>
        [Test]
        public void AddReceivingWorksheetAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? receivingWorksheetId = null;
            //string receivingWorksheetAudit = null;
            //instance.AddReceivingWorksheetAudit(receivingWorksheetId, receivingWorksheetAudit);
            
        }
        
        /// <summary>
        /// Test AddReceivingWorksheetFile
        /// </summary>
        [Test]
        public void AddReceivingWorksheetFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? receivingWorksheetId = null;
            //string fileName = null;
            //instance.AddReceivingWorksheetFile(receivingWorksheetId, fileName);
            
        }
        
        /// <summary>
        /// Test AddReceivingWorksheetFileByURL
        /// </summary>
        [Test]
        public void AddReceivingWorksheetFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? receivingWorksheetId = null;
            //instance.AddReceivingWorksheetFileByURL(body, receivingWorksheetId);
            
        }
        
        /// <summary>
        /// Test AddReceivingWorksheetTag
        /// </summary>
        [Test]
        public void AddReceivingWorksheetTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? receivingWorksheetId = null;
            //string receivingWorksheetTag = null;
            //instance.AddReceivingWorksheetTag(receivingWorksheetId, receivingWorksheetTag);
            
        }
        
        /// <summary>
        /// Test DeleteReceivingWorksheet
        /// </summary>
        [Test]
        public void DeleteReceivingWorksheetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? receivingWorksheetId = null;
            //instance.DeleteReceivingWorksheet(receivingWorksheetId);
            
        }
        
        /// <summary>
        /// Test DeleteReceivingWorksheetFile
        /// </summary>
        [Test]
        public void DeleteReceivingWorksheetFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? receivingWorksheetId = null;
            //int? fileId = null;
            //instance.DeleteReceivingWorksheetFile(receivingWorksheetId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteReceivingWorksheetTag
        /// </summary>
        [Test]
        public void DeleteReceivingWorksheetTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? receivingWorksheetId = null;
            //string receivingWorksheetTag = null;
            //instance.DeleteReceivingWorksheetTag(receivingWorksheetId, receivingWorksheetTag);
            
        }
        
        /// <summary>
        /// Test GetDuplicateReceivingWorksheetById
        /// </summary>
        [Test]
        public void GetDuplicateReceivingWorksheetByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? receivingWorksheetId = null;
            //var response = instance.GetDuplicateReceivingWorksheetById(receivingWorksheetId);
            //Assert.IsInstanceOf<ReceivingWorksheet> (response, "response is ReceivingWorksheet");
        }
        
        /// <summary>
        /// Test GetReceivingWorksheetByFilter
        /// </summary>
        [Test]
        public void GetReceivingWorksheetByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetReceivingWorksheetByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<ReceivingWorksheet>> (response, "response is List<ReceivingWorksheet>");
        }
        
        /// <summary>
        /// Test GetReceivingWorksheetById
        /// </summary>
        [Test]
        public void GetReceivingWorksheetByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? receivingWorksheetId = null;
            //var response = instance.GetReceivingWorksheetById(receivingWorksheetId);
            //Assert.IsInstanceOf<ReceivingWorksheet> (response, "response is ReceivingWorksheet");
        }
        
        /// <summary>
        /// Test GetReceivingWorksheetFiles
        /// </summary>
        [Test]
        public void GetReceivingWorksheetFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? receivingWorksheetId = null;
            //instance.GetReceivingWorksheetFiles(receivingWorksheetId);
            
        }
        
        /// <summary>
        /// Test GetReceivingWorksheetTags
        /// </summary>
        [Test]
        public void GetReceivingWorksheetTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? receivingWorksheetId = null;
            //instance.GetReceivingWorksheetTags(receivingWorksheetId);
            
        }
        
        /// <summary>
        /// Test UpdateReceivingWorksheet
        /// </summary>
        [Test]
        public void UpdateReceivingWorksheetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReceivingWorksheet body = null;
            //instance.UpdateReceivingWorksheet(body);
            
        }
        
        /// <summary>
        /// Test UpdateReceivingWorksheetCustomFields
        /// </summary>
        [Test]
        public void UpdateReceivingWorksheetCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReceivingWorksheet body = null;
            //instance.UpdateReceivingWorksheetCustomFields(body);
            
        }
        
    }

}
