/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing VendorApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class VendorApiTests
    {
        private VendorApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new VendorApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of VendorApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' VendorApi
            //Assert.IsInstanceOfType(typeof(VendorApi), instance, "instance is a VendorApi");
        }

        
        /// <summary>
        /// Test AddVendor
        /// </summary>
        [Test]
        public void AddVendorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Vendor body = null;
            //var response = instance.AddVendor(body);
            //Assert.IsInstanceOf<Vendor> (response, "response is Vendor");
        }
        
        /// <summary>
        /// Test AddVendorAudit
        /// </summary>
        [Test]
        public void AddVendorAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? vendorId = null;
            //string vendorAudit = null;
            //instance.AddVendorAudit(vendorId, vendorAudit);
            
        }
        
        /// <summary>
        /// Test AddVendorFile
        /// </summary>
        [Test]
        public void AddVendorFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? vendorId = null;
            //string fileName = null;
            //instance.AddVendorFile(vendorId, fileName);
            
        }
        
        /// <summary>
        /// Test AddVendorFileByURL
        /// </summary>
        [Test]
        public void AddVendorFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? vendorId = null;
            //instance.AddVendorFileByURL(body, vendorId);
            
        }
        
        /// <summary>
        /// Test AddVendorTag
        /// </summary>
        [Test]
        public void AddVendorTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? vendorId = null;
            //string vendorTag = null;
            //instance.AddVendorTag(vendorId, vendorTag);
            
        }
        
        /// <summary>
        /// Test DeleteVendor
        /// </summary>
        [Test]
        public void DeleteVendorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? vendorId = null;
            //instance.DeleteVendor(vendorId);
            
        }
        
        /// <summary>
        /// Test DeleteVendorFile
        /// </summary>
        [Test]
        public void DeleteVendorFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? vendorId = null;
            //int? fileId = null;
            //instance.DeleteVendorFile(vendorId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteVendorTag
        /// </summary>
        [Test]
        public void DeleteVendorTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? vendorId = null;
            //string vendorTag = null;
            //instance.DeleteVendorTag(vendorId, vendorTag);
            
        }
        
        /// <summary>
        /// Test GetDuplicateVendorById
        /// </summary>
        [Test]
        public void GetDuplicateVendorByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? vendorId = null;
            //var response = instance.GetDuplicateVendorById(vendorId);
            //Assert.IsInstanceOf<Vendor> (response, "response is Vendor");
        }
        
        /// <summary>
        /// Test GetVendorByFilter
        /// </summary>
        [Test]
        public void GetVendorByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetVendorByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<Vendor>> (response, "response is List<Vendor>");
        }
        
        /// <summary>
        /// Test GetVendorById
        /// </summary>
        [Test]
        public void GetVendorByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? vendorId = null;
            //var response = instance.GetVendorById(vendorId);
            //Assert.IsInstanceOf<Vendor> (response, "response is Vendor");
        }
        
        /// <summary>
        /// Test GetVendorFiles
        /// </summary>
        [Test]
        public void GetVendorFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? vendorId = null;
            //instance.GetVendorFiles(vendorId);
            
        }
        
        /// <summary>
        /// Test GetVendorTags
        /// </summary>
        [Test]
        public void GetVendorTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? vendorId = null;
            //instance.GetVendorTags(vendorId);
            
        }
        
        /// <summary>
        /// Test UpdateVendor
        /// </summary>
        [Test]
        public void UpdateVendorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Vendor body = null;
            //instance.UpdateVendor(body);
            
        }
        
        /// <summary>
        /// Test UpdateVendorCustomFields
        /// </summary>
        [Test]
        public void UpdateVendorCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Vendor body = null;
            //instance.UpdateVendorCustomFields(body);
            
        }
        
    }

}
