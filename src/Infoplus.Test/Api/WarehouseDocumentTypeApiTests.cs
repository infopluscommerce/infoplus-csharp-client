/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing WarehouseDocumentTypeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class WarehouseDocumentTypeApiTests
    {
        private WarehouseDocumentTypeApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WarehouseDocumentTypeApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WarehouseDocumentTypeApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' WarehouseDocumentTypeApi
            //Assert.IsInstanceOfType(typeof(WarehouseDocumentTypeApi), instance, "instance is a WarehouseDocumentTypeApi");
        }

        
        /// <summary>
        /// Test AddWarehouseDocumentTypeAudit
        /// </summary>
        [Test]
        public void AddWarehouseDocumentTypeAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseDocumentTypeId = null;
            //string warehouseDocumentTypeAudit = null;
            //instance.AddWarehouseDocumentTypeAudit(warehouseDocumentTypeId, warehouseDocumentTypeAudit);
            
        }
        
        /// <summary>
        /// Test AddWarehouseDocumentTypeFile
        /// </summary>
        [Test]
        public void AddWarehouseDocumentTypeFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseDocumentTypeId = null;
            //string fileName = null;
            //instance.AddWarehouseDocumentTypeFile(warehouseDocumentTypeId, fileName);
            
        }
        
        /// <summary>
        /// Test AddWarehouseDocumentTypeFileByURL
        /// </summary>
        [Test]
        public void AddWarehouseDocumentTypeFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? warehouseDocumentTypeId = null;
            //instance.AddWarehouseDocumentTypeFileByURL(body, warehouseDocumentTypeId);
            
        }
        
        /// <summary>
        /// Test AddWarehouseDocumentTypeTag
        /// </summary>
        [Test]
        public void AddWarehouseDocumentTypeTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseDocumentTypeId = null;
            //string warehouseDocumentTypeTag = null;
            //instance.AddWarehouseDocumentTypeTag(warehouseDocumentTypeId, warehouseDocumentTypeTag);
            
        }
        
        /// <summary>
        /// Test DeleteWarehouseDocumentTypeFile
        /// </summary>
        [Test]
        public void DeleteWarehouseDocumentTypeFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseDocumentTypeId = null;
            //int? fileId = null;
            //instance.DeleteWarehouseDocumentTypeFile(warehouseDocumentTypeId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteWarehouseDocumentTypeTag
        /// </summary>
        [Test]
        public void DeleteWarehouseDocumentTypeTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseDocumentTypeId = null;
            //string warehouseDocumentTypeTag = null;
            //instance.DeleteWarehouseDocumentTypeTag(warehouseDocumentTypeId, warehouseDocumentTypeTag);
            
        }
        
        /// <summary>
        /// Test GetDuplicateWarehouseDocumentTypeById
        /// </summary>
        [Test]
        public void GetDuplicateWarehouseDocumentTypeByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseDocumentTypeId = null;
            //var response = instance.GetDuplicateWarehouseDocumentTypeById(warehouseDocumentTypeId);
            //Assert.IsInstanceOf<WarehouseDocumentType> (response, "response is WarehouseDocumentType");
        }
        
        /// <summary>
        /// Test GetWarehouseDocumentTypeByFilter
        /// </summary>
        [Test]
        public void GetWarehouseDocumentTypeByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetWarehouseDocumentTypeByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<WarehouseDocumentType>> (response, "response is List<WarehouseDocumentType>");
        }
        
        /// <summary>
        /// Test GetWarehouseDocumentTypeById
        /// </summary>
        [Test]
        public void GetWarehouseDocumentTypeByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseDocumentTypeId = null;
            //var response = instance.GetWarehouseDocumentTypeById(warehouseDocumentTypeId);
            //Assert.IsInstanceOf<WarehouseDocumentType> (response, "response is WarehouseDocumentType");
        }
        
        /// <summary>
        /// Test GetWarehouseDocumentTypeFiles
        /// </summary>
        [Test]
        public void GetWarehouseDocumentTypeFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseDocumentTypeId = null;
            //instance.GetWarehouseDocumentTypeFiles(warehouseDocumentTypeId);
            
        }
        
        /// <summary>
        /// Test GetWarehouseDocumentTypeTags
        /// </summary>
        [Test]
        public void GetWarehouseDocumentTypeTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseDocumentTypeId = null;
            //instance.GetWarehouseDocumentTypeTags(warehouseDocumentTypeId);
            
        }
        
    }

}
