/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing WarehouseServiceTypeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class WarehouseServiceTypeApiTests
    {
        private WarehouseServiceTypeApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WarehouseServiceTypeApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WarehouseServiceTypeApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' WarehouseServiceTypeApi
            //Assert.IsInstanceOfType(typeof(WarehouseServiceTypeApi), instance, "instance is a WarehouseServiceTypeApi");
        }

        
        /// <summary>
        /// Test AddWarehouseServiceType
        /// </summary>
        [Test]
        public void AddWarehouseServiceTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WarehouseServiceType body = null;
            //var response = instance.AddWarehouseServiceType(body);
            //Assert.IsInstanceOf<WarehouseServiceType> (response, "response is WarehouseServiceType");
        }
        
        /// <summary>
        /// Test AddWarehouseServiceTypeAudit
        /// </summary>
        [Test]
        public void AddWarehouseServiceTypeAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseServiceTypeId = null;
            //string warehouseServiceTypeAudit = null;
            //instance.AddWarehouseServiceTypeAudit(warehouseServiceTypeId, warehouseServiceTypeAudit);
            
        }
        
        /// <summary>
        /// Test AddWarehouseServiceTypeFile
        /// </summary>
        [Test]
        public void AddWarehouseServiceTypeFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseServiceTypeId = null;
            //string fileName = null;
            //instance.AddWarehouseServiceTypeFile(warehouseServiceTypeId, fileName);
            
        }
        
        /// <summary>
        /// Test AddWarehouseServiceTypeFileByURL
        /// </summary>
        [Test]
        public void AddWarehouseServiceTypeFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? warehouseServiceTypeId = null;
            //instance.AddWarehouseServiceTypeFileByURL(body, warehouseServiceTypeId);
            
        }
        
        /// <summary>
        /// Test AddWarehouseServiceTypeTag
        /// </summary>
        [Test]
        public void AddWarehouseServiceTypeTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseServiceTypeId = null;
            //string warehouseServiceTypeTag = null;
            //instance.AddWarehouseServiceTypeTag(warehouseServiceTypeId, warehouseServiceTypeTag);
            
        }
        
        /// <summary>
        /// Test DeleteWarehouseServiceType
        /// </summary>
        [Test]
        public void DeleteWarehouseServiceTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseServiceTypeId = null;
            //instance.DeleteWarehouseServiceType(warehouseServiceTypeId);
            
        }
        
        /// <summary>
        /// Test DeleteWarehouseServiceTypeFile
        /// </summary>
        [Test]
        public void DeleteWarehouseServiceTypeFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseServiceTypeId = null;
            //int? fileId = null;
            //instance.DeleteWarehouseServiceTypeFile(warehouseServiceTypeId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteWarehouseServiceTypeTag
        /// </summary>
        [Test]
        public void DeleteWarehouseServiceTypeTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseServiceTypeId = null;
            //string warehouseServiceTypeTag = null;
            //instance.DeleteWarehouseServiceTypeTag(warehouseServiceTypeId, warehouseServiceTypeTag);
            
        }
        
        /// <summary>
        /// Test GetDuplicateWarehouseServiceTypeById
        /// </summary>
        [Test]
        public void GetDuplicateWarehouseServiceTypeByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseServiceTypeId = null;
            //var response = instance.GetDuplicateWarehouseServiceTypeById(warehouseServiceTypeId);
            //Assert.IsInstanceOf<WarehouseServiceType> (response, "response is WarehouseServiceType");
        }
        
        /// <summary>
        /// Test GetWarehouseServiceTypeByFilter
        /// </summary>
        [Test]
        public void GetWarehouseServiceTypeByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetWarehouseServiceTypeByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<WarehouseServiceType>> (response, "response is List<WarehouseServiceType>");
        }
        
        /// <summary>
        /// Test GetWarehouseServiceTypeById
        /// </summary>
        [Test]
        public void GetWarehouseServiceTypeByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseServiceTypeId = null;
            //var response = instance.GetWarehouseServiceTypeById(warehouseServiceTypeId);
            //Assert.IsInstanceOf<WarehouseServiceType> (response, "response is WarehouseServiceType");
        }
        
        /// <summary>
        /// Test GetWarehouseServiceTypeFiles
        /// </summary>
        [Test]
        public void GetWarehouseServiceTypeFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseServiceTypeId = null;
            //instance.GetWarehouseServiceTypeFiles(warehouseServiceTypeId);
            
        }
        
        /// <summary>
        /// Test GetWarehouseServiceTypeTags
        /// </summary>
        [Test]
        public void GetWarehouseServiceTypeTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? warehouseServiceTypeId = null;
            //instance.GetWarehouseServiceTypeTags(warehouseServiceTypeId);
            
        }
        
        /// <summary>
        /// Test UpdateWarehouseServiceType
        /// </summary>
        [Test]
        public void UpdateWarehouseServiceTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WarehouseServiceType body = null;
            //instance.UpdateWarehouseServiceType(body);
            
        }
        
        /// <summary>
        /// Test UpdateWarehouseServiceTypeCustomFields
        /// </summary>
        [Test]
        public void UpdateWarehouseServiceTypeCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WarehouseServiceType body = null;
            //instance.UpdateWarehouseServiceTypeCustomFields(body);
            
        }
        
    }

}
