/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Infoplus.Client;
using Infoplus.Api;
using Infoplus.Model;

namespace Infoplus.Test
{
    /// <summary>
    ///  Class for testing WorkBatchApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class WorkBatchApiTests
    {
        private WorkBatchApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WorkBatchApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WorkBatchApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' WorkBatchApi
            //Assert.IsInstanceOfType(typeof(WorkBatchApi), instance, "instance is a WorkBatchApi");
        }

        
        /// <summary>
        /// Test AddWorkBatchAudit
        /// </summary>
        [Test]
        public void AddWorkBatchAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workBatchId = null;
            //string workBatchAudit = null;
            //instance.AddWorkBatchAudit(workBatchId, workBatchAudit);
            
        }
        
        /// <summary>
        /// Test AddWorkBatchFile
        /// </summary>
        [Test]
        public void AddWorkBatchFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workBatchId = null;
            //string fileName = null;
            //instance.AddWorkBatchFile(workBatchId, fileName);
            
        }
        
        /// <summary>
        /// Test AddWorkBatchFileByURL
        /// </summary>
        [Test]
        public void AddWorkBatchFileByURLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RecordFile body = null;
            //int? workBatchId = null;
            //instance.AddWorkBatchFileByURL(body, workBatchId);
            
        }
        
        /// <summary>
        /// Test AddWorkBatchTag
        /// </summary>
        [Test]
        public void AddWorkBatchTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workBatchId = null;
            //string workBatchTag = null;
            //instance.AddWorkBatchTag(workBatchId, workBatchTag);
            
        }
        
        /// <summary>
        /// Test DeleteWorkBatchFile
        /// </summary>
        [Test]
        public void DeleteWorkBatchFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workBatchId = null;
            //int? fileId = null;
            //instance.DeleteWorkBatchFile(workBatchId, fileId);
            
        }
        
        /// <summary>
        /// Test DeleteWorkBatchTag
        /// </summary>
        [Test]
        public void DeleteWorkBatchTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workBatchId = null;
            //string workBatchTag = null;
            //instance.DeleteWorkBatchTag(workBatchId, workBatchTag);
            
        }
        
        /// <summary>
        /// Test GetDuplicateWorkBatchById
        /// </summary>
        [Test]
        public void GetDuplicateWorkBatchByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workBatchId = null;
            //var response = instance.GetDuplicateWorkBatchById(workBatchId);
            //Assert.IsInstanceOf<WorkBatch> (response, "response is WorkBatch");
        }
        
        /// <summary>
        /// Test GetWorkBatchByFilter
        /// </summary>
        [Test]
        public void GetWorkBatchByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //int? page = null;
            //int? limit = null;
            //string sort = null;
            //var response = instance.GetWorkBatchByFilter(filter, page, limit, sort);
            //Assert.IsInstanceOf<List<WorkBatch>> (response, "response is List<WorkBatch>");
        }
        
        /// <summary>
        /// Test GetWorkBatchById
        /// </summary>
        [Test]
        public void GetWorkBatchByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workBatchId = null;
            //var response = instance.GetWorkBatchById(workBatchId);
            //Assert.IsInstanceOf<WorkBatch> (response, "response is WorkBatch");
        }
        
        /// <summary>
        /// Test GetWorkBatchFiles
        /// </summary>
        [Test]
        public void GetWorkBatchFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workBatchId = null;
            //instance.GetWorkBatchFiles(workBatchId);
            
        }
        
        /// <summary>
        /// Test GetWorkBatchTags
        /// </summary>
        [Test]
        public void GetWorkBatchTagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? workBatchId = null;
            //instance.GetWorkBatchTags(workBatchId);
            
        }
        
        /// <summary>
        /// Test UpdateWorkBatch
        /// </summary>
        [Test]
        public void UpdateWorkBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WorkBatch body = null;
            //instance.UpdateWorkBatch(body);
            
        }
        
        /// <summary>
        /// Test UpdateWorkBatchCustomFields
        /// </summary>
        [Test]
        public void UpdateWorkBatchCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WorkBatch body = null;
            //instance.UpdateWorkBatchCustomFields(body);
            
        }
        
    }

}
