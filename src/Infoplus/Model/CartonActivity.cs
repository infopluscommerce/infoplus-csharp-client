/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Infoplus.Client.SwaggerDateConverter;

namespace Infoplus.Model
{
    /// <summary>
    /// CartonActivity
    /// </summary>
    [DataContract]
    public partial class CartonActivity :  IEquatable<CartonActivity>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CartonActivity" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CartonActivity() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CartonActivity" /> class.
        /// </summary>
        /// <param name="LobId">LobId (required).</param>
        /// <param name="WarehouseId">WarehouseId (required).</param>
        /// <param name="CartonNo">CartonNo.</param>
        /// <param name="NumberOfCartons">NumberOfCartons.</param>
        /// <param name="Shipped">Shipped (default to false).</param>
        /// <param name="CarrierServiceId">CarrierServiceId.</param>
        /// <param name="Dim1In">Dim1In.</param>
        /// <param name="Dim2In">Dim2In.</param>
        /// <param name="Dim3In">Dim3In.</param>
        /// <param name="EstimatedZone">EstimatedZone.</param>
        /// <param name="AlternateUsage">AlternateUsage.</param>
        /// <param name="OrderStatusName">OrderStatusName.</param>
        /// <param name="CarrierId">CarrierId.</param>
        /// <param name="CarrierName">CarrierName.</param>
        /// <param name="MediaCode">MediaCode (required).</param>
        /// <param name="LegacyRestrictionType">LegacyRestrictionType (required).</param>
        /// <param name="ReqTypeName">ReqTypeName.</param>
        /// <param name="LegacyServiceType">LegacyServiceType.</param>
        /// <param name="LegacyServiceTypeName">LegacyServiceTypeName.</param>
        /// <param name="AlcoholOrderType">AlcoholOrderType.</param>
        /// <param name="DistributionChannel">DistributionChannel.</param>
        /// <param name="DistributionChannelName">DistributionChannelName.</param>
        /// <param name="PriorityCode">PriorityCode.</param>
        /// <param name="OrderDate">OrderDate (required).</param>
        /// <param name="CustomerOrderNo">CustomerOrderNo.</param>
        /// <param name="PriceLevel">PriceLevel.</param>
        /// <param name="OrderSourceId">OrderSourceId.</param>
        /// <param name="OrderSourceName">OrderSourceName.</param>
        /// <param name="IntegrationPartnerName">IntegrationPartnerName.</param>
        /// <param name="OrderLoadProgramName">OrderLoadProgramName.</param>
        /// <param name="ShipToAttention">ShipToAttention.</param>
        /// <param name="ShipToCompany">ShipToCompany.</param>
        /// <param name="ShipToStreet">ShipToStreet.</param>
        /// <param name="ShipToStreet2">ShipToStreet2.</param>
        /// <param name="ShipToStreet3">ShipToStreet3.</param>
        /// <param name="ShipToCity">ShipToCity.</param>
        /// <param name="ShipToState">ShipToState.</param>
        /// <param name="ShipToZip">ShipToZip.</param>
        /// <param name="ShipToCountry">ShipToCountry.</param>
        /// <param name="ShipToPhone">ShipToPhone.</param>
        /// <param name="ShipToEmail">ShipToEmail.</param>
        /// <param name="BillToAttention">BillToAttention.</param>
        /// <param name="BillToCompany">BillToCompany.</param>
        /// <param name="BillToStreet">BillToStreet.</param>
        /// <param name="BillToStreet2">BillToStreet2.</param>
        /// <param name="BillToStreet3">BillToStreet3.</param>
        /// <param name="BillToCity">BillToCity.</param>
        /// <param name="BillToState">BillToState.</param>
        /// <param name="BillToZip">BillToZip.</param>
        /// <param name="BillToCountry">BillToCountry.</param>
        /// <param name="BillToPhone">BillToPhone.</param>
        /// <param name="BillToEmail">BillToEmail.</param>
        /// <param name="HoldCode">HoldCode.</param>
        /// <param name="ShipCode">ShipCode.</param>
        /// <param name="OrderMessage">OrderMessage.</param>
        /// <param name="Division">Division.</param>
        /// <param name="CostCenter">CostCenter.</param>
        /// <param name="AuthorizedBy">AuthorizedBy.</param>
        /// <param name="BatchNo">BatchNo.</param>
        /// <param name="FirstShipDate">FirstShipDate.</param>
        /// <param name="LastShipDate">LastShipDate.</param>
        /// <param name="DeliverOnDate">DeliverOnDate.</param>
        /// <param name="CustomerPONo">CustomerPONo.</param>
        /// <param name="ShipVia">ShipVia.</param>
        /// <param name="NeedByDate">NeedByDate.</param>
        /// <param name="Total">Total.</param>
        /// <param name="Subtotal">Subtotal.</param>
        /// <param name="TaxOnFreight">TaxOnFreight.</param>
        /// <param name="Tax">Tax.</param>
        /// <param name="ShippingCharge">ShippingCharge.</param>
        /// <param name="TotalDiscount">TotalDiscount.</param>
        /// <param name="ThirdPartyParcelAccountId">ThirdPartyParcelAccountId.</param>
        /// <param name="PackingSlipTemplateId">PackingSlipTemplateId.</param>
        /// <param name="GiftMessage">GiftMessage.</param>
        /// <param name="BranchSector">BranchSector.</param>
        /// <param name="BranchArea">BranchArea.</param>
        /// <param name="BranchCustomerType">BranchCustomerType.</param>
        /// <param name="BranchId">BranchId.</param>
        /// <param name="OrderCode">OrderCode.</param>
        /// <param name="LeadPackageId">LeadPackageId.</param>
        /// <param name="OrderConfirmationEmailTemplateId">OrderConfirmationEmailTemplateId.</param>
        /// <param name="ShipmentConfirmationEmailTemplateId">ShipmentConfirmationEmailTemplateId.</param>
        /// <param name="ShippingSystemName">ShippingSystemName.</param>
        /// <param name="OrderInvoiceTemplateId">OrderInvoiceTemplateId.</param>
        /// <param name="PriceMode">PriceMode.</param>
        /// <param name="WarehouseServiceTypeId">WarehouseServiceTypeId.</param>
        /// <param name="WarehouseServiceLevelId">WarehouseServiceLevelId.</param>
        /// <param name="CartonTypeId">CartonTypeId.</param>
        /// <param name="CartonAbbr">CartonAbbr.</param>
        /// <param name="CartonName">CartonName.</param>
        /// <param name="CartonLength">CartonLength.</param>
        /// <param name="CartonWidth">CartonWidth.</param>
        /// <param name="CartonHeight">CartonHeight.</param>
        /// <param name="CartonInnerLength">CartonInnerLength.</param>
        /// <param name="CartonInnerWidth">CartonInnerWidth.</param>
        /// <param name="CartonInnerHeight">CartonInnerHeight.</param>
        /// <param name="CartonWeight">CartonWeight.</param>
        /// <param name="PredefinedCartonId">PredefinedCartonId.</param>
        /// <param name="PredefinedCartonLabel">PredefinedCartonLabel.</param>
        /// <param name="CustomFields">CustomFields.</param>
        public CartonActivity(int? LobId = default(int?), int? WarehouseId = default(int?), int? CartonNo = default(int?), int? NumberOfCartons = default(int?), bool? Shipped = false, int? CarrierServiceId = default(int?), decimal? Dim1In = default(decimal?), decimal? Dim2In = default(decimal?), decimal? Dim3In = default(decimal?), string EstimatedZone = default(string), string AlternateUsage = default(string), string OrderStatusName = default(string), int? CarrierId = default(int?), string CarrierName = default(string), string MediaCode = default(string), string LegacyRestrictionType = default(string), string ReqTypeName = default(string), string LegacyServiceType = default(string), string LegacyServiceTypeName = default(string), string AlcoholOrderType = default(string), string DistributionChannel = default(string), string DistributionChannelName = default(string), int? PriorityCode = default(int?), DateTime? OrderDate = default(DateTime?), string CustomerOrderNo = default(string), string PriceLevel = default(string), int? OrderSourceId = default(int?), string OrderSourceName = default(string), string IntegrationPartnerName = default(string), string OrderLoadProgramName = default(string), string ShipToAttention = default(string), string ShipToCompany = default(string), string ShipToStreet = default(string), string ShipToStreet2 = default(string), string ShipToStreet3 = default(string), string ShipToCity = default(string), string ShipToState = default(string), string ShipToZip = default(string), string ShipToCountry = default(string), string ShipToPhone = default(string), string ShipToEmail = default(string), string BillToAttention = default(string), string BillToCompany = default(string), string BillToStreet = default(string), string BillToStreet2 = default(string), string BillToStreet3 = default(string), string BillToCity = default(string), string BillToState = default(string), string BillToZip = default(string), string BillToCountry = default(string), string BillToPhone = default(string), string BillToEmail = default(string), string HoldCode = default(string), string ShipCode = default(string), string OrderMessage = default(string), int? Division = default(int?), string CostCenter = default(string), string AuthorizedBy = default(string), string BatchNo = default(string), DateTime? FirstShipDate = default(DateTime?), DateTime? LastShipDate = default(DateTime?), DateTime? DeliverOnDate = default(DateTime?), string CustomerPONo = default(string), string ShipVia = default(string), DateTime? NeedByDate = default(DateTime?), decimal? Total = default(decimal?), decimal? Subtotal = default(decimal?), decimal? TaxOnFreight = default(decimal?), decimal? Tax = default(decimal?), decimal? ShippingCharge = default(decimal?), decimal? TotalDiscount = default(decimal?), int? ThirdPartyParcelAccountId = default(int?), int? PackingSlipTemplateId = default(int?), string GiftMessage = default(string), string BranchSector = default(string), string BranchArea = default(string), string BranchCustomerType = default(string), string BranchId = default(string), string OrderCode = default(string), string LeadPackageId = default(string), int? OrderConfirmationEmailTemplateId = default(int?), int? ShipmentConfirmationEmailTemplateId = default(int?), string ShippingSystemName = default(string), int? OrderInvoiceTemplateId = default(int?), string PriceMode = default(string), int? WarehouseServiceTypeId = default(int?), int? WarehouseServiceLevelId = default(int?), int? CartonTypeId = default(int?), string CartonAbbr = default(string), string CartonName = default(string), decimal? CartonLength = default(decimal?), decimal? CartonWidth = default(decimal?), decimal? CartonHeight = default(decimal?), decimal? CartonInnerLength = default(decimal?), decimal? CartonInnerWidth = default(decimal?), decimal? CartonInnerHeight = default(decimal?), decimal? CartonWeight = default(decimal?), int? PredefinedCartonId = default(int?), string PredefinedCartonLabel = default(string), Dictionary<string, Object> CustomFields = default(Dictionary<string, Object>))
        {
            // to ensure "LobId" is required (not null)
            if (LobId == null)
            {
                throw new InvalidDataException("LobId is a required property for CartonActivity and cannot be null");
            }
            else
            {
                this.LobId = LobId;
            }
            // to ensure "WarehouseId" is required (not null)
            if (WarehouseId == null)
            {
                throw new InvalidDataException("WarehouseId is a required property for CartonActivity and cannot be null");
            }
            else
            {
                this.WarehouseId = WarehouseId;
            }
            // to ensure "MediaCode" is required (not null)
            if (MediaCode == null)
            {
                throw new InvalidDataException("MediaCode is a required property for CartonActivity and cannot be null");
            }
            else
            {
                this.MediaCode = MediaCode;
            }
            // to ensure "LegacyRestrictionType" is required (not null)
            if (LegacyRestrictionType == null)
            {
                throw new InvalidDataException("LegacyRestrictionType is a required property for CartonActivity and cannot be null");
            }
            else
            {
                this.LegacyRestrictionType = LegacyRestrictionType;
            }
            // to ensure "OrderDate" is required (not null)
            if (OrderDate == null)
            {
                throw new InvalidDataException("OrderDate is a required property for CartonActivity and cannot be null");
            }
            else
            {
                this.OrderDate = OrderDate;
            }
            this.CartonNo = CartonNo;
            this.NumberOfCartons = NumberOfCartons;
            // use default value if no "Shipped" provided
            if (Shipped == null)
            {
                this.Shipped = false;
            }
            else
            {
                this.Shipped = Shipped;
            }
            this.CarrierServiceId = CarrierServiceId;
            this.Dim1In = Dim1In;
            this.Dim2In = Dim2In;
            this.Dim3In = Dim3In;
            this.EstimatedZone = EstimatedZone;
            this.AlternateUsage = AlternateUsage;
            this.OrderStatusName = OrderStatusName;
            this.CarrierId = CarrierId;
            this.CarrierName = CarrierName;
            this.ReqTypeName = ReqTypeName;
            this.LegacyServiceType = LegacyServiceType;
            this.LegacyServiceTypeName = LegacyServiceTypeName;
            this.AlcoholOrderType = AlcoholOrderType;
            this.DistributionChannel = DistributionChannel;
            this.DistributionChannelName = DistributionChannelName;
            this.PriorityCode = PriorityCode;
            this.CustomerOrderNo = CustomerOrderNo;
            this.PriceLevel = PriceLevel;
            this.OrderSourceId = OrderSourceId;
            this.OrderSourceName = OrderSourceName;
            this.IntegrationPartnerName = IntegrationPartnerName;
            this.OrderLoadProgramName = OrderLoadProgramName;
            this.ShipToAttention = ShipToAttention;
            this.ShipToCompany = ShipToCompany;
            this.ShipToStreet = ShipToStreet;
            this.ShipToStreet2 = ShipToStreet2;
            this.ShipToStreet3 = ShipToStreet3;
            this.ShipToCity = ShipToCity;
            this.ShipToState = ShipToState;
            this.ShipToZip = ShipToZip;
            this.ShipToCountry = ShipToCountry;
            this.ShipToPhone = ShipToPhone;
            this.ShipToEmail = ShipToEmail;
            this.BillToAttention = BillToAttention;
            this.BillToCompany = BillToCompany;
            this.BillToStreet = BillToStreet;
            this.BillToStreet2 = BillToStreet2;
            this.BillToStreet3 = BillToStreet3;
            this.BillToCity = BillToCity;
            this.BillToState = BillToState;
            this.BillToZip = BillToZip;
            this.BillToCountry = BillToCountry;
            this.BillToPhone = BillToPhone;
            this.BillToEmail = BillToEmail;
            this.HoldCode = HoldCode;
            this.ShipCode = ShipCode;
            this.OrderMessage = OrderMessage;
            this.Division = Division;
            this.CostCenter = CostCenter;
            this.AuthorizedBy = AuthorizedBy;
            this.BatchNo = BatchNo;
            this.FirstShipDate = FirstShipDate;
            this.LastShipDate = LastShipDate;
            this.DeliverOnDate = DeliverOnDate;
            this.CustomerPONo = CustomerPONo;
            this.ShipVia = ShipVia;
            this.NeedByDate = NeedByDate;
            this.Total = Total;
            this.Subtotal = Subtotal;
            this.TaxOnFreight = TaxOnFreight;
            this.Tax = Tax;
            this.ShippingCharge = ShippingCharge;
            this.TotalDiscount = TotalDiscount;
            this.ThirdPartyParcelAccountId = ThirdPartyParcelAccountId;
            this.PackingSlipTemplateId = PackingSlipTemplateId;
            this.GiftMessage = GiftMessage;
            this.BranchSector = BranchSector;
            this.BranchArea = BranchArea;
            this.BranchCustomerType = BranchCustomerType;
            this.BranchId = BranchId;
            this.OrderCode = OrderCode;
            this.LeadPackageId = LeadPackageId;
            this.OrderConfirmationEmailTemplateId = OrderConfirmationEmailTemplateId;
            this.ShipmentConfirmationEmailTemplateId = ShipmentConfirmationEmailTemplateId;
            this.ShippingSystemName = ShippingSystemName;
            this.OrderInvoiceTemplateId = OrderInvoiceTemplateId;
            this.PriceMode = PriceMode;
            this.WarehouseServiceTypeId = WarehouseServiceTypeId;
            this.WarehouseServiceLevelId = WarehouseServiceLevelId;
            this.CartonTypeId = CartonTypeId;
            this.CartonAbbr = CartonAbbr;
            this.CartonName = CartonName;
            this.CartonLength = CartonLength;
            this.CartonWidth = CartonWidth;
            this.CartonHeight = CartonHeight;
            this.CartonInnerLength = CartonInnerLength;
            this.CartonInnerWidth = CartonInnerWidth;
            this.CartonInnerHeight = CartonInnerHeight;
            this.CartonWeight = CartonWeight;
            this.PredefinedCartonId = PredefinedCartonId;
            this.PredefinedCartonLabel = PredefinedCartonLabel;
            this.CustomFields = CustomFields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; private set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name="createDate", EmitDefaultValue=false)]
        public DateTime? CreateDate { get; private set; }

        /// <summary>
        /// Gets or Sets ModifyDate
        /// </summary>
        [DataMember(Name="modifyDate", EmitDefaultValue=false)]
        public DateTime? ModifyDate { get; private set; }

        /// <summary>
        /// Gets or Sets LobId
        /// </summary>
        [DataMember(Name="lobId", EmitDefaultValue=false)]
        public int? LobId { get; set; }

        /// <summary>
        /// Gets or Sets OrderNo
        /// </summary>
        [DataMember(Name="orderNo", EmitDefaultValue=false)]
        public decimal? OrderNo { get; private set; }

        /// <summary>
        /// Gets or Sets ShipDate
        /// </summary>
        [DataMember(Name="shipDate", EmitDefaultValue=false)]
        public DateTime? ShipDate { get; private set; }

        /// <summary>
        /// Gets or Sets DeliveredDate
        /// </summary>
        [DataMember(Name="deliveredDate", EmitDefaultValue=false)]
        public DateTime? DeliveredDate { get; private set; }

        /// <summary>
        /// Gets or Sets TrackingNo
        /// </summary>
        [DataMember(Name="trackingNo", EmitDefaultValue=false)]
        public string TrackingNo { get; private set; }

        /// <summary>
        /// Gets or Sets WarehouseId
        /// </summary>
        [DataMember(Name="warehouseId", EmitDefaultValue=false)]
        public int? WarehouseId { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseName
        /// </summary>
        [DataMember(Name="warehouseName", EmitDefaultValue=false)]
        public string WarehouseName { get; private set; }

        /// <summary>
        /// Gets or Sets CartonNo
        /// </summary>
        [DataMember(Name="cartonNo", EmitDefaultValue=false)]
        public int? CartonNo { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfCartons
        /// </summary>
        [DataMember(Name="numberOfCartons", EmitDefaultValue=false)]
        public int? NumberOfCartons { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public string Status { get; private set; }

        /// <summary>
        /// Gets or Sets Shipped
        /// </summary>
        [DataMember(Name="shipped", EmitDefaultValue=false)]
        public bool? Shipped { get; set; }

        /// <summary>
        /// Gets or Sets CarrierServiceId
        /// </summary>
        [DataMember(Name="carrierServiceId", EmitDefaultValue=false)]
        public int? CarrierServiceId { get; set; }

        /// <summary>
        /// Gets or Sets Dim1In
        /// </summary>
        [DataMember(Name="dim1In", EmitDefaultValue=false)]
        public decimal? Dim1In { get; set; }

        /// <summary>
        /// Gets or Sets Dim2In
        /// </summary>
        [DataMember(Name="dim2In", EmitDefaultValue=false)]
        public decimal? Dim2In { get; set; }

        /// <summary>
        /// Gets or Sets Dim3In
        /// </summary>
        [DataMember(Name="dim3In", EmitDefaultValue=false)]
        public decimal? Dim3In { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedZone
        /// </summary>
        [DataMember(Name="estimatedZone", EmitDefaultValue=false)]
        public string EstimatedZone { get; set; }

        /// <summary>
        /// Gets or Sets ParcelAccountNo
        /// </summary>
        [DataMember(Name="parcelAccountNo", EmitDefaultValue=false)]
        public string ParcelAccountNo { get; private set; }

        /// <summary>
        /// Gets or Sets ThirdPartyParcelAccountNo
        /// </summary>
        [DataMember(Name="thirdPartyParcelAccountNo", EmitDefaultValue=false)]
        public string ThirdPartyParcelAccountNo { get; private set; }

        /// <summary>
        /// Gets or Sets ManifestId
        /// </summary>
        [DataMember(Name="manifestId", EmitDefaultValue=false)]
        public int? ManifestId { get; private set; }

        /// <summary>
        /// Gets or Sets Residential
        /// </summary>
        [DataMember(Name="residential", EmitDefaultValue=false)]
        public bool? Residential { get; private set; }

        /// <summary>
        /// Gets or Sets BillingOption
        /// </summary>
        [DataMember(Name="billingOption", EmitDefaultValue=false)]
        public string BillingOption { get; private set; }

        /// <summary>
        /// Gets or Sets WeightLbs
        /// </summary>
        [DataMember(Name="weightLbs", EmitDefaultValue=false)]
        public decimal? WeightLbs { get; private set; }

        /// <summary>
        /// Gets or Sets DimWeight
        /// </summary>
        [DataMember(Name="dimWeight", EmitDefaultValue=false)]
        public decimal? DimWeight { get; private set; }

        /// <summary>
        /// Gets or Sets LicensePlateNumber
        /// </summary>
        [DataMember(Name="licensePlateNumber", EmitDefaultValue=false)]
        public string LicensePlateNumber { get; private set; }

        /// <summary>
        /// Gets or Sets ChargedFreightAmount
        /// </summary>
        [DataMember(Name="chargedFreightAmount", EmitDefaultValue=false)]
        public decimal? ChargedFreightAmount { get; private set; }

        /// <summary>
        /// Gets or Sets PublishedFreightAmount
        /// </summary>
        [DataMember(Name="publishedFreightAmount", EmitDefaultValue=false)]
        public decimal? PublishedFreightAmount { get; private set; }

        /// <summary>
        /// Gets or Sets RetailFreightAmount
        /// </summary>
        [DataMember(Name="retailFreightAmount", EmitDefaultValue=false)]
        public decimal? RetailFreightAmount { get; private set; }

        /// <summary>
        /// Gets or Sets CartonCreateDate
        /// </summary>
        [DataMember(Name="cartonCreateDate", EmitDefaultValue=false)]
        public DateTime? CartonCreateDate { get; private set; }

        /// <summary>
        /// Gets or Sets CartonModifyDate
        /// </summary>
        [DataMember(Name="cartonModifyDate", EmitDefaultValue=false)]
        public DateTime? CartonModifyDate { get; private set; }

        /// <summary>
        /// Gets or Sets AlternateUsage
        /// </summary>
        [DataMember(Name="alternateUsage", EmitDefaultValue=false)]
        public string AlternateUsage { get; set; }

        /// <summary>
        /// Gets or Sets GroupOrderId
        /// </summary>
        [DataMember(Name="groupOrderId", EmitDefaultValue=false)]
        public decimal? GroupOrderId { get; private set; }

        /// <summary>
        /// Gets or Sets OrderStatus
        /// </summary>
        [DataMember(Name="orderStatus", EmitDefaultValue=false)]
        public string OrderStatus { get; private set; }

        /// <summary>
        /// Gets or Sets OrderStatusName
        /// </summary>
        [DataMember(Name="orderStatusName", EmitDefaultValue=false)]
        public string OrderStatusName { get; set; }

        /// <summary>
        /// Gets or Sets FulfillmentProcessId
        /// </summary>
        [DataMember(Name="fulfillmentProcessId", EmitDefaultValue=false)]
        public int? FulfillmentProcessId { get; private set; }

        /// <summary>
        /// Gets or Sets CarrierId
        /// </summary>
        [DataMember(Name="carrierId", EmitDefaultValue=false)]
        public int? CarrierId { get; set; }

        /// <summary>
        /// Gets or Sets CarrierName
        /// </summary>
        [DataMember(Name="carrierName", EmitDefaultValue=false)]
        public string CarrierName { get; set; }

        /// <summary>
        /// Gets or Sets MediaCode
        /// </summary>
        [DataMember(Name="mediaCode", EmitDefaultValue=false)]
        public string MediaCode { get; set; }

        /// <summary>
        /// Gets or Sets LegacyRestrictionType
        /// </summary>
        [DataMember(Name="legacyRestrictionType", EmitDefaultValue=false)]
        public string LegacyRestrictionType { get; set; }

        /// <summary>
        /// Gets or Sets ReqTypeName
        /// </summary>
        [DataMember(Name="reqTypeName", EmitDefaultValue=false)]
        public string ReqTypeName { get; set; }

        /// <summary>
        /// Gets or Sets LegacyServiceType
        /// </summary>
        [DataMember(Name="legacyServiceType", EmitDefaultValue=false)]
        public string LegacyServiceType { get; set; }

        /// <summary>
        /// Gets or Sets LegacyServiceTypeName
        /// </summary>
        [DataMember(Name="legacyServiceTypeName", EmitDefaultValue=false)]
        public string LegacyServiceTypeName { get; set; }

        /// <summary>
        /// Gets or Sets AlcoholOrderType
        /// </summary>
        [DataMember(Name="alcoholOrderType", EmitDefaultValue=false)]
        public string AlcoholOrderType { get; set; }

        /// <summary>
        /// Gets or Sets DistributionChannel
        /// </summary>
        [DataMember(Name="distributionChannel", EmitDefaultValue=false)]
        public string DistributionChannel { get; set; }

        /// <summary>
        /// Gets or Sets DistributionChannelName
        /// </summary>
        [DataMember(Name="distributionChannelName", EmitDefaultValue=false)]
        public string DistributionChannelName { get; set; }

        /// <summary>
        /// Gets or Sets PriorityCode
        /// </summary>
        [DataMember(Name="priorityCode", EmitDefaultValue=false)]
        public int? PriorityCode { get; set; }

        /// <summary>
        /// Gets or Sets OrderDate
        /// </summary>
        [DataMember(Name="orderDate", EmitDefaultValue=false)]
        public DateTime? OrderDate { get; set; }

        /// <summary>
        /// Gets or Sets EnteredBy
        /// </summary>
        [DataMember(Name="enteredBy", EmitDefaultValue=false)]
        public string EnteredBy { get; private set; }

        /// <summary>
        /// Gets or Sets OrderReason
        /// </summary>
        [DataMember(Name="orderReason", EmitDefaultValue=false)]
        public int? OrderReason { get; private set; }

        /// <summary>
        /// Gets or Sets CustomerOrderNo
        /// </summary>
        [DataMember(Name="customerOrderNo", EmitDefaultValue=false)]
        public string CustomerOrderNo { get; set; }

        /// <summary>
        /// Gets or Sets PriceLevel
        /// </summary>
        [DataMember(Name="priceLevel", EmitDefaultValue=false)]
        public string PriceLevel { get; set; }

        /// <summary>
        /// Gets or Sets OrderCreateDate
        /// </summary>
        [DataMember(Name="orderCreateDate", EmitDefaultValue=false)]
        public DateTime? OrderCreateDate { get; private set; }

        /// <summary>
        /// Gets or Sets OrderModifyDate
        /// </summary>
        [DataMember(Name="orderModifyDate", EmitDefaultValue=false)]
        public DateTime? OrderModifyDate { get; private set; }

        /// <summary>
        /// Gets or Sets ShipBy
        /// </summary>
        [DataMember(Name="shipBy", EmitDefaultValue=false)]
        public DateTime? ShipBy { get; private set; }

        /// <summary>
        /// Gets or Sets StopBackOrders
        /// </summary>
        [DataMember(Name="stopBackOrders", EmitDefaultValue=false)]
        public string StopBackOrders { get; private set; }

        /// <summary>
        /// Gets or Sets OrderSourceId
        /// </summary>
        [DataMember(Name="orderSourceId", EmitDefaultValue=false)]
        public int? OrderSourceId { get; set; }

        /// <summary>
        /// Gets or Sets OrderSourceName
        /// </summary>
        [DataMember(Name="orderSourceName", EmitDefaultValue=false)]
        public string OrderSourceName { get; set; }

        /// <summary>
        /// Gets or Sets IntegrationPartnerId
        /// </summary>
        [DataMember(Name="integrationPartnerId", EmitDefaultValue=false)]
        public int? IntegrationPartnerId { get; private set; }

        /// <summary>
        /// Gets or Sets IntegrationPartnerName
        /// </summary>
        [DataMember(Name="integrationPartnerName", EmitDefaultValue=false)]
        public string IntegrationPartnerName { get; set; }

        /// <summary>
        /// Gets or Sets OrderLoadProgramId
        /// </summary>
        [DataMember(Name="orderLoadProgramId", EmitDefaultValue=false)]
        public int? OrderLoadProgramId { get; private set; }

        /// <summary>
        /// Gets or Sets OrderLoadProgramName
        /// </summary>
        [DataMember(Name="orderLoadProgramName", EmitDefaultValue=false)]
        public string OrderLoadProgramName { get; set; }

        /// <summary>
        /// Gets or Sets OmsOrderNo
        /// </summary>
        [DataMember(Name="omsOrderNo", EmitDefaultValue=false)]
        public int? OmsOrderNo { get; private set; }

        /// <summary>
        /// Gets or Sets OmsCustomerId
        /// </summary>
        [DataMember(Name="omsCustomerId", EmitDefaultValue=false)]
        public int? OmsCustomerId { get; private set; }

        /// <summary>
        /// Gets or Sets ShipToAttention
        /// </summary>
        [DataMember(Name="shipToAttention", EmitDefaultValue=false)]
        public string ShipToAttention { get; set; }

        /// <summary>
        /// Gets or Sets ShipToCompany
        /// </summary>
        [DataMember(Name="shipToCompany", EmitDefaultValue=false)]
        public string ShipToCompany { get; set; }

        /// <summary>
        /// Gets or Sets ShipToStreet
        /// </summary>
        [DataMember(Name="shipToStreet", EmitDefaultValue=false)]
        public string ShipToStreet { get; set; }

        /// <summary>
        /// Gets or Sets ShipToStreet2
        /// </summary>
        [DataMember(Name="shipToStreet2", EmitDefaultValue=false)]
        public string ShipToStreet2 { get; set; }

        /// <summary>
        /// Gets or Sets ShipToStreet3
        /// </summary>
        [DataMember(Name="shipToStreet3", EmitDefaultValue=false)]
        public string ShipToStreet3 { get; set; }

        /// <summary>
        /// Gets or Sets ShipToCity
        /// </summary>
        [DataMember(Name="shipToCity", EmitDefaultValue=false)]
        public string ShipToCity { get; set; }

        /// <summary>
        /// Gets or Sets ShipToState
        /// </summary>
        [DataMember(Name="shipToState", EmitDefaultValue=false)]
        public string ShipToState { get; set; }

        /// <summary>
        /// Gets or Sets ShipToZip
        /// </summary>
        [DataMember(Name="shipToZip", EmitDefaultValue=false)]
        public string ShipToZip { get; set; }

        /// <summary>
        /// Gets or Sets ShipToCountry
        /// </summary>
        [DataMember(Name="shipToCountry", EmitDefaultValue=false)]
        public string ShipToCountry { get; set; }

        /// <summary>
        /// Gets or Sets ShipToPhone
        /// </summary>
        [DataMember(Name="shipToPhone", EmitDefaultValue=false)]
        public string ShipToPhone { get; set; }

        /// <summary>
        /// Gets or Sets ShipToEmail
        /// </summary>
        [DataMember(Name="shipToEmail", EmitDefaultValue=false)]
        public string ShipToEmail { get; set; }

        /// <summary>
        /// Gets or Sets BillToAttention
        /// </summary>
        [DataMember(Name="billToAttention", EmitDefaultValue=false)]
        public string BillToAttention { get; set; }

        /// <summary>
        /// Gets or Sets BillToCompany
        /// </summary>
        [DataMember(Name="billToCompany", EmitDefaultValue=false)]
        public string BillToCompany { get; set; }

        /// <summary>
        /// Gets or Sets BillToStreet
        /// </summary>
        [DataMember(Name="billToStreet", EmitDefaultValue=false)]
        public string BillToStreet { get; set; }

        /// <summary>
        /// Gets or Sets BillToStreet2
        /// </summary>
        [DataMember(Name="billToStreet2", EmitDefaultValue=false)]
        public string BillToStreet2 { get; set; }

        /// <summary>
        /// Gets or Sets BillToStreet3
        /// </summary>
        [DataMember(Name="billToStreet3", EmitDefaultValue=false)]
        public string BillToStreet3 { get; set; }

        /// <summary>
        /// Gets or Sets BillToCity
        /// </summary>
        [DataMember(Name="billToCity", EmitDefaultValue=false)]
        public string BillToCity { get; set; }

        /// <summary>
        /// Gets or Sets BillToState
        /// </summary>
        [DataMember(Name="billToState", EmitDefaultValue=false)]
        public string BillToState { get; set; }

        /// <summary>
        /// Gets or Sets BillToZip
        /// </summary>
        [DataMember(Name="billToZip", EmitDefaultValue=false)]
        public string BillToZip { get; set; }

        /// <summary>
        /// Gets or Sets BillToCountry
        /// </summary>
        [DataMember(Name="billToCountry", EmitDefaultValue=false)]
        public string BillToCountry { get; set; }

        /// <summary>
        /// Gets or Sets BillToPhone
        /// </summary>
        [DataMember(Name="billToPhone", EmitDefaultValue=false)]
        public string BillToPhone { get; set; }

        /// <summary>
        /// Gets or Sets BillToEmail
        /// </summary>
        [DataMember(Name="billToEmail", EmitDefaultValue=false)]
        public string BillToEmail { get; set; }

        /// <summary>
        /// Gets or Sets OrderShipDate
        /// </summary>
        [DataMember(Name="orderShipDate", EmitDefaultValue=false)]
        public DateTime? OrderShipDate { get; private set; }

        /// <summary>
        /// Gets or Sets Freight
        /// </summary>
        [DataMember(Name="freight", EmitDefaultValue=false)]
        public decimal? Freight { get; private set; }

        /// <summary>
        /// Gets or Sets OrderWeightLbs
        /// </summary>
        [DataMember(Name="orderWeightLbs", EmitDefaultValue=false)]
        public decimal? OrderWeightLbs { get; private set; }

        /// <summary>
        /// Gets or Sets OrderEstimatedWeightLbs
        /// </summary>
        [DataMember(Name="orderEstimatedWeightLbs", EmitDefaultValue=false)]
        public decimal? OrderEstimatedWeightLbs { get; private set; }

        /// <summary>
        /// Gets or Sets NumberOfPallets
        /// </summary>
        [DataMember(Name="numberOfPallets", EmitDefaultValue=false)]
        public int? NumberOfPallets { get; private set; }

        /// <summary>
        /// Gets or Sets NumberOfLineItems
        /// </summary>
        [DataMember(Name="numberOfLineItems", EmitDefaultValue=false)]
        public int? NumberOfLineItems { get; private set; }

        /// <summary>
        /// Gets or Sets CompletionStatus
        /// </summary>
        [DataMember(Name="completionStatus", EmitDefaultValue=false)]
        public string CompletionStatus { get; private set; }

        /// <summary>
        /// Gets or Sets HoldCode
        /// </summary>
        [DataMember(Name="holdCode", EmitDefaultValue=false)]
        public string HoldCode { get; set; }

        /// <summary>
        /// Gets or Sets ShipCode
        /// </summary>
        [DataMember(Name="shipCode", EmitDefaultValue=false)]
        public string ShipCode { get; set; }

        /// <summary>
        /// Gets or Sets OrderMessage
        /// </summary>
        [DataMember(Name="orderMessage", EmitDefaultValue=false)]
        public string OrderMessage { get; set; }

        /// <summary>
        /// Gets or Sets Division
        /// </summary>
        [DataMember(Name="division", EmitDefaultValue=false)]
        public int? Division { get; set; }

        /// <summary>
        /// Gets or Sets CostCenter
        /// </summary>
        [DataMember(Name="costCenter", EmitDefaultValue=false)]
        public string CostCenter { get; set; }

        /// <summary>
        /// Gets or Sets AuthorizedBy
        /// </summary>
        [DataMember(Name="authorizedBy", EmitDefaultValue=false)]
        public string AuthorizedBy { get; set; }

        /// <summary>
        /// Gets or Sets BatchNo
        /// </summary>
        [DataMember(Name="batchNo", EmitDefaultValue=false)]
        public string BatchNo { get; set; }

        /// <summary>
        /// Gets or Sets FirstShipDate
        /// </summary>
        [DataMember(Name="firstShipDate", EmitDefaultValue=false)]
        public DateTime? FirstShipDate { get; set; }

        /// <summary>
        /// Gets or Sets LastShipDate
        /// </summary>
        [DataMember(Name="lastShipDate", EmitDefaultValue=false)]
        public DateTime? LastShipDate { get; set; }

        /// <summary>
        /// Gets or Sets DeliverOnDate
        /// </summary>
        [DataMember(Name="deliverOnDate", EmitDefaultValue=false)]
        public DateTime? DeliverOnDate { get; set; }

        /// <summary>
        /// Gets or Sets CustomerPONo
        /// </summary>
        [DataMember(Name="customerPONo", EmitDefaultValue=false)]
        public string CustomerPONo { get; set; }

        /// <summary>
        /// Gets or Sets ShipVia
        /// </summary>
        [DataMember(Name="shipVia", EmitDefaultValue=false)]
        public string ShipVia { get; set; }

        /// <summary>
        /// Gets or Sets NeedByDate
        /// </summary>
        [DataMember(Name="needByDate", EmitDefaultValue=false)]
        public DateTime? NeedByDate { get; set; }

        /// <summary>
        /// Gets or Sets Total
        /// </summary>
        [DataMember(Name="total", EmitDefaultValue=false)]
        public decimal? Total { get; set; }

        /// <summary>
        /// Gets or Sets BalanceDue
        /// </summary>
        [DataMember(Name="balanceDue", EmitDefaultValue=false)]
        public decimal? BalanceDue { get; private set; }

        /// <summary>
        /// Gets or Sets TotalPaid
        /// </summary>
        [DataMember(Name="totalPaid", EmitDefaultValue=false)]
        public decimal? TotalPaid { get; private set; }

        /// <summary>
        /// Gets or Sets AuthorizationAmount
        /// </summary>
        [DataMember(Name="authorizationAmount", EmitDefaultValue=false)]
        public decimal? AuthorizationAmount { get; private set; }

        /// <summary>
        /// Gets or Sets Subtotal
        /// </summary>
        [DataMember(Name="subtotal", EmitDefaultValue=false)]
        public decimal? Subtotal { get; set; }

        /// <summary>
        /// Gets or Sets TaxOnFreight
        /// </summary>
        [DataMember(Name="taxOnFreight", EmitDefaultValue=false)]
        public decimal? TaxOnFreight { get; set; }

        /// <summary>
        /// Gets or Sets Tax
        /// </summary>
        [DataMember(Name="tax", EmitDefaultValue=false)]
        public decimal? Tax { get; set; }

        /// <summary>
        /// Gets or Sets DistributionCharges
        /// </summary>
        [DataMember(Name="distributionCharges", EmitDefaultValue=false)]
        public decimal? DistributionCharges { get; private set; }

        /// <summary>
        /// Gets or Sets ShippingCharge
        /// </summary>
        [DataMember(Name="shippingCharge", EmitDefaultValue=false)]
        public decimal? ShippingCharge { get; set; }

        /// <summary>
        /// Gets or Sets TotalDiscount
        /// </summary>
        [DataMember(Name="totalDiscount", EmitDefaultValue=false)]
        public decimal? TotalDiscount { get; set; }

        /// <summary>
        /// Gets or Sets ParcelAccountId
        /// </summary>
        [DataMember(Name="parcelAccountId", EmitDefaultValue=false)]
        public int? ParcelAccountId { get; private set; }

        /// <summary>
        /// Gets or Sets ThirdPartyParcelAccountId
        /// </summary>
        [DataMember(Name="thirdPartyParcelAccountId", EmitDefaultValue=false)]
        public int? ThirdPartyParcelAccountId { get; set; }

        /// <summary>
        /// Gets or Sets PackingSlipTemplateId
        /// </summary>
        [DataMember(Name="packingSlipTemplateId", EmitDefaultValue=false)]
        public int? PackingSlipTemplateId { get; set; }

        /// <summary>
        /// Gets or Sets GiftMessage
        /// </summary>
        [DataMember(Name="giftMessage", EmitDefaultValue=false)]
        public string GiftMessage { get; set; }

        /// <summary>
        /// Gets or Sets BranchSector
        /// </summary>
        [DataMember(Name="branchSector", EmitDefaultValue=false)]
        public string BranchSector { get; set; }

        /// <summary>
        /// Gets or Sets BranchArea
        /// </summary>
        [DataMember(Name="branchArea", EmitDefaultValue=false)]
        public string BranchArea { get; set; }

        /// <summary>
        /// Gets or Sets BranchCustomerType
        /// </summary>
        [DataMember(Name="branchCustomerType", EmitDefaultValue=false)]
        public string BranchCustomerType { get; set; }

        /// <summary>
        /// Gets or Sets BranchId
        /// </summary>
        [DataMember(Name="branchId", EmitDefaultValue=false)]
        public string BranchId { get; set; }

        /// <summary>
        /// Gets or Sets OrderCode
        /// </summary>
        [DataMember(Name="orderCode", EmitDefaultValue=false)]
        public string OrderCode { get; set; }

        /// <summary>
        /// Gets or Sets LeadPackageId
        /// </summary>
        [DataMember(Name="leadPackageId", EmitDefaultValue=false)]
        public string LeadPackageId { get; set; }

        /// <summary>
        /// Gets or Sets TotalQty
        /// </summary>
        [DataMember(Name="totalQty", EmitDefaultValue=false)]
        public int? TotalQty { get; private set; }

        /// <summary>
        /// Gets or Sets EstimatedNumberOfPicks
        /// </summary>
        [DataMember(Name="estimatedNumberOfPicks", EmitDefaultValue=false)]
        public int? EstimatedNumberOfPicks { get; private set; }

        /// <summary>
        /// Gets or Sets OrderConfirmationEmailTemplateId
        /// </summary>
        [DataMember(Name="orderConfirmationEmailTemplateId", EmitDefaultValue=false)]
        public int? OrderConfirmationEmailTemplateId { get; set; }

        /// <summary>
        /// Gets or Sets ShipmentConfirmationEmailTemplateId
        /// </summary>
        [DataMember(Name="shipmentConfirmationEmailTemplateId", EmitDefaultValue=false)]
        public int? ShipmentConfirmationEmailTemplateId { get; set; }

        /// <summary>
        /// Gets or Sets ExternalShippingSystemId
        /// </summary>
        [DataMember(Name="externalShippingSystemId", EmitDefaultValue=false)]
        public int? ExternalShippingSystemId { get; private set; }

        /// <summary>
        /// Gets or Sets ShippingSystemName
        /// </summary>
        [DataMember(Name="shippingSystemName", EmitDefaultValue=false)]
        public string ShippingSystemName { get; set; }

        /// <summary>
        /// Gets or Sets OrderInvoiceTemplateId
        /// </summary>
        [DataMember(Name="orderInvoiceTemplateId", EmitDefaultValue=false)]
        public int? OrderInvoiceTemplateId { get; set; }

        /// <summary>
        /// Gets or Sets PriceMode
        /// </summary>
        [DataMember(Name="priceMode", EmitDefaultValue=false)]
        public string PriceMode { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseServiceTypeId
        /// </summary>
        [DataMember(Name="warehouseServiceTypeId", EmitDefaultValue=false)]
        public int? WarehouseServiceTypeId { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseServiceLevelId
        /// </summary>
        [DataMember(Name="warehouseServiceLevelId", EmitDefaultValue=false)]
        public int? WarehouseServiceLevelId { get; set; }

        /// <summary>
        /// Gets or Sets SlaDate
        /// </summary>
        [DataMember(Name="slaDate", EmitDefaultValue=false)]
        public DateTime? SlaDate { get; private set; }

        /// <summary>
        /// Gets or Sets SlaStatus
        /// </summary>
        [DataMember(Name="slaStatus", EmitDefaultValue=false)]
        public string SlaStatus { get; private set; }

        /// <summary>
        /// Gets or Sets ProductionType
        /// </summary>
        [DataMember(Name="productionType", EmitDefaultValue=false)]
        public string ProductionType { get; private set; }

        /// <summary>
        /// Gets or Sets BackOrderStatus
        /// </summary>
        [DataMember(Name="backOrderStatus", EmitDefaultValue=false)]
        public string BackOrderStatus { get; private set; }

        /// <summary>
        /// Gets or Sets BackOrderReleaseDate
        /// </summary>
        [DataMember(Name="backOrderReleaseDate", EmitDefaultValue=false)]
        public DateTime? BackOrderReleaseDate { get; private set; }

        /// <summary>
        /// Gets or Sets CartonTypeId
        /// </summary>
        [DataMember(Name="cartonTypeId", EmitDefaultValue=false)]
        public int? CartonTypeId { get; set; }

        /// <summary>
        /// Gets or Sets CartonAbbr
        /// </summary>
        [DataMember(Name="cartonAbbr", EmitDefaultValue=false)]
        public string CartonAbbr { get; set; }

        /// <summary>
        /// Gets or Sets CartonName
        /// </summary>
        [DataMember(Name="cartonName", EmitDefaultValue=false)]
        public string CartonName { get; set; }

        /// <summary>
        /// Gets or Sets CartonLength
        /// </summary>
        [DataMember(Name="cartonLength", EmitDefaultValue=false)]
        public decimal? CartonLength { get; set; }

        /// <summary>
        /// Gets or Sets CartonWidth
        /// </summary>
        [DataMember(Name="cartonWidth", EmitDefaultValue=false)]
        public decimal? CartonWidth { get; set; }

        /// <summary>
        /// Gets or Sets CartonHeight
        /// </summary>
        [DataMember(Name="cartonHeight", EmitDefaultValue=false)]
        public decimal? CartonHeight { get; set; }

        /// <summary>
        /// Gets or Sets CartonInnerLength
        /// </summary>
        [DataMember(Name="cartonInnerLength", EmitDefaultValue=false)]
        public decimal? CartonInnerLength { get; set; }

        /// <summary>
        /// Gets or Sets CartonInnerWidth
        /// </summary>
        [DataMember(Name="cartonInnerWidth", EmitDefaultValue=false)]
        public decimal? CartonInnerWidth { get; set; }

        /// <summary>
        /// Gets or Sets CartonInnerHeight
        /// </summary>
        [DataMember(Name="cartonInnerHeight", EmitDefaultValue=false)]
        public decimal? CartonInnerHeight { get; set; }

        /// <summary>
        /// Gets or Sets CartonWeight
        /// </summary>
        [DataMember(Name="cartonWeight", EmitDefaultValue=false)]
        public decimal? CartonWeight { get; set; }

        /// <summary>
        /// Gets or Sets PredefinedCartonId
        /// </summary>
        [DataMember(Name="predefinedCartonId", EmitDefaultValue=false)]
        public int? PredefinedCartonId { get; set; }

        /// <summary>
        /// Gets or Sets PredefinedCartonLabel
        /// </summary>
        [DataMember(Name="predefinedCartonLabel", EmitDefaultValue=false)]
        public string PredefinedCartonLabel { get; set; }

        /// <summary>
        /// Gets or Sets BillingQuantity
        /// </summary>
        [DataMember(Name="billingQuantity", EmitDefaultValue=false)]
        public decimal? BillingQuantity { get; private set; }

        /// <summary>
        /// Gets or Sets ChargeRate
        /// </summary>
        [DataMember(Name="chargeRate", EmitDefaultValue=false)]
        public decimal? ChargeRate { get; private set; }

        /// <summary>
        /// Gets or Sets ExtendedCharge
        /// </summary>
        [DataMember(Name="extendedCharge", EmitDefaultValue=false)]
        public decimal? ExtendedCharge { get; private set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name="customFields", EmitDefaultValue=false)]
        public Dictionary<string, Object> CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CartonActivity {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  ModifyDate: ").Append(ModifyDate).Append("\n");
            sb.Append("  LobId: ").Append(LobId).Append("\n");
            sb.Append("  OrderNo: ").Append(OrderNo).Append("\n");
            sb.Append("  ShipDate: ").Append(ShipDate).Append("\n");
            sb.Append("  DeliveredDate: ").Append(DeliveredDate).Append("\n");
            sb.Append("  TrackingNo: ").Append(TrackingNo).Append("\n");
            sb.Append("  WarehouseId: ").Append(WarehouseId).Append("\n");
            sb.Append("  WarehouseName: ").Append(WarehouseName).Append("\n");
            sb.Append("  CartonNo: ").Append(CartonNo).Append("\n");
            sb.Append("  NumberOfCartons: ").Append(NumberOfCartons).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Shipped: ").Append(Shipped).Append("\n");
            sb.Append("  CarrierServiceId: ").Append(CarrierServiceId).Append("\n");
            sb.Append("  Dim1In: ").Append(Dim1In).Append("\n");
            sb.Append("  Dim2In: ").Append(Dim2In).Append("\n");
            sb.Append("  Dim3In: ").Append(Dim3In).Append("\n");
            sb.Append("  EstimatedZone: ").Append(EstimatedZone).Append("\n");
            sb.Append("  ParcelAccountNo: ").Append(ParcelAccountNo).Append("\n");
            sb.Append("  ThirdPartyParcelAccountNo: ").Append(ThirdPartyParcelAccountNo).Append("\n");
            sb.Append("  ManifestId: ").Append(ManifestId).Append("\n");
            sb.Append("  Residential: ").Append(Residential).Append("\n");
            sb.Append("  BillingOption: ").Append(BillingOption).Append("\n");
            sb.Append("  WeightLbs: ").Append(WeightLbs).Append("\n");
            sb.Append("  DimWeight: ").Append(DimWeight).Append("\n");
            sb.Append("  LicensePlateNumber: ").Append(LicensePlateNumber).Append("\n");
            sb.Append("  ChargedFreightAmount: ").Append(ChargedFreightAmount).Append("\n");
            sb.Append("  PublishedFreightAmount: ").Append(PublishedFreightAmount).Append("\n");
            sb.Append("  RetailFreightAmount: ").Append(RetailFreightAmount).Append("\n");
            sb.Append("  CartonCreateDate: ").Append(CartonCreateDate).Append("\n");
            sb.Append("  CartonModifyDate: ").Append(CartonModifyDate).Append("\n");
            sb.Append("  AlternateUsage: ").Append(AlternateUsage).Append("\n");
            sb.Append("  GroupOrderId: ").Append(GroupOrderId).Append("\n");
            sb.Append("  OrderStatus: ").Append(OrderStatus).Append("\n");
            sb.Append("  OrderStatusName: ").Append(OrderStatusName).Append("\n");
            sb.Append("  FulfillmentProcessId: ").Append(FulfillmentProcessId).Append("\n");
            sb.Append("  CarrierId: ").Append(CarrierId).Append("\n");
            sb.Append("  CarrierName: ").Append(CarrierName).Append("\n");
            sb.Append("  MediaCode: ").Append(MediaCode).Append("\n");
            sb.Append("  LegacyRestrictionType: ").Append(LegacyRestrictionType).Append("\n");
            sb.Append("  ReqTypeName: ").Append(ReqTypeName).Append("\n");
            sb.Append("  LegacyServiceType: ").Append(LegacyServiceType).Append("\n");
            sb.Append("  LegacyServiceTypeName: ").Append(LegacyServiceTypeName).Append("\n");
            sb.Append("  AlcoholOrderType: ").Append(AlcoholOrderType).Append("\n");
            sb.Append("  DistributionChannel: ").Append(DistributionChannel).Append("\n");
            sb.Append("  DistributionChannelName: ").Append(DistributionChannelName).Append("\n");
            sb.Append("  PriorityCode: ").Append(PriorityCode).Append("\n");
            sb.Append("  OrderDate: ").Append(OrderDate).Append("\n");
            sb.Append("  EnteredBy: ").Append(EnteredBy).Append("\n");
            sb.Append("  OrderReason: ").Append(OrderReason).Append("\n");
            sb.Append("  CustomerOrderNo: ").Append(CustomerOrderNo).Append("\n");
            sb.Append("  PriceLevel: ").Append(PriceLevel).Append("\n");
            sb.Append("  OrderCreateDate: ").Append(OrderCreateDate).Append("\n");
            sb.Append("  OrderModifyDate: ").Append(OrderModifyDate).Append("\n");
            sb.Append("  ShipBy: ").Append(ShipBy).Append("\n");
            sb.Append("  StopBackOrders: ").Append(StopBackOrders).Append("\n");
            sb.Append("  OrderSourceId: ").Append(OrderSourceId).Append("\n");
            sb.Append("  OrderSourceName: ").Append(OrderSourceName).Append("\n");
            sb.Append("  IntegrationPartnerId: ").Append(IntegrationPartnerId).Append("\n");
            sb.Append("  IntegrationPartnerName: ").Append(IntegrationPartnerName).Append("\n");
            sb.Append("  OrderLoadProgramId: ").Append(OrderLoadProgramId).Append("\n");
            sb.Append("  OrderLoadProgramName: ").Append(OrderLoadProgramName).Append("\n");
            sb.Append("  OmsOrderNo: ").Append(OmsOrderNo).Append("\n");
            sb.Append("  OmsCustomerId: ").Append(OmsCustomerId).Append("\n");
            sb.Append("  ShipToAttention: ").Append(ShipToAttention).Append("\n");
            sb.Append("  ShipToCompany: ").Append(ShipToCompany).Append("\n");
            sb.Append("  ShipToStreet: ").Append(ShipToStreet).Append("\n");
            sb.Append("  ShipToStreet2: ").Append(ShipToStreet2).Append("\n");
            sb.Append("  ShipToStreet3: ").Append(ShipToStreet3).Append("\n");
            sb.Append("  ShipToCity: ").Append(ShipToCity).Append("\n");
            sb.Append("  ShipToState: ").Append(ShipToState).Append("\n");
            sb.Append("  ShipToZip: ").Append(ShipToZip).Append("\n");
            sb.Append("  ShipToCountry: ").Append(ShipToCountry).Append("\n");
            sb.Append("  ShipToPhone: ").Append(ShipToPhone).Append("\n");
            sb.Append("  ShipToEmail: ").Append(ShipToEmail).Append("\n");
            sb.Append("  BillToAttention: ").Append(BillToAttention).Append("\n");
            sb.Append("  BillToCompany: ").Append(BillToCompany).Append("\n");
            sb.Append("  BillToStreet: ").Append(BillToStreet).Append("\n");
            sb.Append("  BillToStreet2: ").Append(BillToStreet2).Append("\n");
            sb.Append("  BillToStreet3: ").Append(BillToStreet3).Append("\n");
            sb.Append("  BillToCity: ").Append(BillToCity).Append("\n");
            sb.Append("  BillToState: ").Append(BillToState).Append("\n");
            sb.Append("  BillToZip: ").Append(BillToZip).Append("\n");
            sb.Append("  BillToCountry: ").Append(BillToCountry).Append("\n");
            sb.Append("  BillToPhone: ").Append(BillToPhone).Append("\n");
            sb.Append("  BillToEmail: ").Append(BillToEmail).Append("\n");
            sb.Append("  OrderShipDate: ").Append(OrderShipDate).Append("\n");
            sb.Append("  Freight: ").Append(Freight).Append("\n");
            sb.Append("  OrderWeightLbs: ").Append(OrderWeightLbs).Append("\n");
            sb.Append("  OrderEstimatedWeightLbs: ").Append(OrderEstimatedWeightLbs).Append("\n");
            sb.Append("  NumberOfPallets: ").Append(NumberOfPallets).Append("\n");
            sb.Append("  NumberOfLineItems: ").Append(NumberOfLineItems).Append("\n");
            sb.Append("  CompletionStatus: ").Append(CompletionStatus).Append("\n");
            sb.Append("  HoldCode: ").Append(HoldCode).Append("\n");
            sb.Append("  ShipCode: ").Append(ShipCode).Append("\n");
            sb.Append("  OrderMessage: ").Append(OrderMessage).Append("\n");
            sb.Append("  Division: ").Append(Division).Append("\n");
            sb.Append("  CostCenter: ").Append(CostCenter).Append("\n");
            sb.Append("  AuthorizedBy: ").Append(AuthorizedBy).Append("\n");
            sb.Append("  BatchNo: ").Append(BatchNo).Append("\n");
            sb.Append("  FirstShipDate: ").Append(FirstShipDate).Append("\n");
            sb.Append("  LastShipDate: ").Append(LastShipDate).Append("\n");
            sb.Append("  DeliverOnDate: ").Append(DeliverOnDate).Append("\n");
            sb.Append("  CustomerPONo: ").Append(CustomerPONo).Append("\n");
            sb.Append("  ShipVia: ").Append(ShipVia).Append("\n");
            sb.Append("  NeedByDate: ").Append(NeedByDate).Append("\n");
            sb.Append("  Total: ").Append(Total).Append("\n");
            sb.Append("  BalanceDue: ").Append(BalanceDue).Append("\n");
            sb.Append("  TotalPaid: ").Append(TotalPaid).Append("\n");
            sb.Append("  AuthorizationAmount: ").Append(AuthorizationAmount).Append("\n");
            sb.Append("  Subtotal: ").Append(Subtotal).Append("\n");
            sb.Append("  TaxOnFreight: ").Append(TaxOnFreight).Append("\n");
            sb.Append("  Tax: ").Append(Tax).Append("\n");
            sb.Append("  DistributionCharges: ").Append(DistributionCharges).Append("\n");
            sb.Append("  ShippingCharge: ").Append(ShippingCharge).Append("\n");
            sb.Append("  TotalDiscount: ").Append(TotalDiscount).Append("\n");
            sb.Append("  ParcelAccountId: ").Append(ParcelAccountId).Append("\n");
            sb.Append("  ThirdPartyParcelAccountId: ").Append(ThirdPartyParcelAccountId).Append("\n");
            sb.Append("  PackingSlipTemplateId: ").Append(PackingSlipTemplateId).Append("\n");
            sb.Append("  GiftMessage: ").Append(GiftMessage).Append("\n");
            sb.Append("  BranchSector: ").Append(BranchSector).Append("\n");
            sb.Append("  BranchArea: ").Append(BranchArea).Append("\n");
            sb.Append("  BranchCustomerType: ").Append(BranchCustomerType).Append("\n");
            sb.Append("  BranchId: ").Append(BranchId).Append("\n");
            sb.Append("  OrderCode: ").Append(OrderCode).Append("\n");
            sb.Append("  LeadPackageId: ").Append(LeadPackageId).Append("\n");
            sb.Append("  TotalQty: ").Append(TotalQty).Append("\n");
            sb.Append("  EstimatedNumberOfPicks: ").Append(EstimatedNumberOfPicks).Append("\n");
            sb.Append("  OrderConfirmationEmailTemplateId: ").Append(OrderConfirmationEmailTemplateId).Append("\n");
            sb.Append("  ShipmentConfirmationEmailTemplateId: ").Append(ShipmentConfirmationEmailTemplateId).Append("\n");
            sb.Append("  ExternalShippingSystemId: ").Append(ExternalShippingSystemId).Append("\n");
            sb.Append("  ShippingSystemName: ").Append(ShippingSystemName).Append("\n");
            sb.Append("  OrderInvoiceTemplateId: ").Append(OrderInvoiceTemplateId).Append("\n");
            sb.Append("  PriceMode: ").Append(PriceMode).Append("\n");
            sb.Append("  WarehouseServiceTypeId: ").Append(WarehouseServiceTypeId).Append("\n");
            sb.Append("  WarehouseServiceLevelId: ").Append(WarehouseServiceLevelId).Append("\n");
            sb.Append("  SlaDate: ").Append(SlaDate).Append("\n");
            sb.Append("  SlaStatus: ").Append(SlaStatus).Append("\n");
            sb.Append("  ProductionType: ").Append(ProductionType).Append("\n");
            sb.Append("  BackOrderStatus: ").Append(BackOrderStatus).Append("\n");
            sb.Append("  BackOrderReleaseDate: ").Append(BackOrderReleaseDate).Append("\n");
            sb.Append("  CartonTypeId: ").Append(CartonTypeId).Append("\n");
            sb.Append("  CartonAbbr: ").Append(CartonAbbr).Append("\n");
            sb.Append("  CartonName: ").Append(CartonName).Append("\n");
            sb.Append("  CartonLength: ").Append(CartonLength).Append("\n");
            sb.Append("  CartonWidth: ").Append(CartonWidth).Append("\n");
            sb.Append("  CartonHeight: ").Append(CartonHeight).Append("\n");
            sb.Append("  CartonInnerLength: ").Append(CartonInnerLength).Append("\n");
            sb.Append("  CartonInnerWidth: ").Append(CartonInnerWidth).Append("\n");
            sb.Append("  CartonInnerHeight: ").Append(CartonInnerHeight).Append("\n");
            sb.Append("  CartonWeight: ").Append(CartonWeight).Append("\n");
            sb.Append("  PredefinedCartonId: ").Append(PredefinedCartonId).Append("\n");
            sb.Append("  PredefinedCartonLabel: ").Append(PredefinedCartonLabel).Append("\n");
            sb.Append("  BillingQuantity: ").Append(BillingQuantity).Append("\n");
            sb.Append("  ChargeRate: ").Append(ChargeRate).Append("\n");
            sb.Append("  ExtendedCharge: ").Append(ExtendedCharge).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CartonActivity);
        }

        /// <summary>
        /// Returns true if CartonActivity instances are equal
        /// </summary>
        /// <param name="input">Instance of CartonActivity to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CartonActivity input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.CreateDate == input.CreateDate ||
                    (this.CreateDate != null &&
                    this.CreateDate.Equals(input.CreateDate))
                ) && 
                (
                    this.ModifyDate == input.ModifyDate ||
                    (this.ModifyDate != null &&
                    this.ModifyDate.Equals(input.ModifyDate))
                ) && 
                (
                    this.LobId == input.LobId ||
                    (this.LobId != null &&
                    this.LobId.Equals(input.LobId))
                ) && 
                (
                    this.OrderNo == input.OrderNo ||
                    (this.OrderNo != null &&
                    this.OrderNo.Equals(input.OrderNo))
                ) && 
                (
                    this.ShipDate == input.ShipDate ||
                    (this.ShipDate != null &&
                    this.ShipDate.Equals(input.ShipDate))
                ) && 
                (
                    this.DeliveredDate == input.DeliveredDate ||
                    (this.DeliveredDate != null &&
                    this.DeliveredDate.Equals(input.DeliveredDate))
                ) && 
                (
                    this.TrackingNo == input.TrackingNo ||
                    (this.TrackingNo != null &&
                    this.TrackingNo.Equals(input.TrackingNo))
                ) && 
                (
                    this.WarehouseId == input.WarehouseId ||
                    (this.WarehouseId != null &&
                    this.WarehouseId.Equals(input.WarehouseId))
                ) && 
                (
                    this.WarehouseName == input.WarehouseName ||
                    (this.WarehouseName != null &&
                    this.WarehouseName.Equals(input.WarehouseName))
                ) && 
                (
                    this.CartonNo == input.CartonNo ||
                    (this.CartonNo != null &&
                    this.CartonNo.Equals(input.CartonNo))
                ) && 
                (
                    this.NumberOfCartons == input.NumberOfCartons ||
                    (this.NumberOfCartons != null &&
                    this.NumberOfCartons.Equals(input.NumberOfCartons))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.Shipped == input.Shipped ||
                    (this.Shipped != null &&
                    this.Shipped.Equals(input.Shipped))
                ) && 
                (
                    this.CarrierServiceId == input.CarrierServiceId ||
                    (this.CarrierServiceId != null &&
                    this.CarrierServiceId.Equals(input.CarrierServiceId))
                ) && 
                (
                    this.Dim1In == input.Dim1In ||
                    (this.Dim1In != null &&
                    this.Dim1In.Equals(input.Dim1In))
                ) && 
                (
                    this.Dim2In == input.Dim2In ||
                    (this.Dim2In != null &&
                    this.Dim2In.Equals(input.Dim2In))
                ) && 
                (
                    this.Dim3In == input.Dim3In ||
                    (this.Dim3In != null &&
                    this.Dim3In.Equals(input.Dim3In))
                ) && 
                (
                    this.EstimatedZone == input.EstimatedZone ||
                    (this.EstimatedZone != null &&
                    this.EstimatedZone.Equals(input.EstimatedZone))
                ) && 
                (
                    this.ParcelAccountNo == input.ParcelAccountNo ||
                    (this.ParcelAccountNo != null &&
                    this.ParcelAccountNo.Equals(input.ParcelAccountNo))
                ) && 
                (
                    this.ThirdPartyParcelAccountNo == input.ThirdPartyParcelAccountNo ||
                    (this.ThirdPartyParcelAccountNo != null &&
                    this.ThirdPartyParcelAccountNo.Equals(input.ThirdPartyParcelAccountNo))
                ) && 
                (
                    this.ManifestId == input.ManifestId ||
                    (this.ManifestId != null &&
                    this.ManifestId.Equals(input.ManifestId))
                ) && 
                (
                    this.Residential == input.Residential ||
                    (this.Residential != null &&
                    this.Residential.Equals(input.Residential))
                ) && 
                (
                    this.BillingOption == input.BillingOption ||
                    (this.BillingOption != null &&
                    this.BillingOption.Equals(input.BillingOption))
                ) && 
                (
                    this.WeightLbs == input.WeightLbs ||
                    (this.WeightLbs != null &&
                    this.WeightLbs.Equals(input.WeightLbs))
                ) && 
                (
                    this.DimWeight == input.DimWeight ||
                    (this.DimWeight != null &&
                    this.DimWeight.Equals(input.DimWeight))
                ) && 
                (
                    this.LicensePlateNumber == input.LicensePlateNumber ||
                    (this.LicensePlateNumber != null &&
                    this.LicensePlateNumber.Equals(input.LicensePlateNumber))
                ) && 
                (
                    this.ChargedFreightAmount == input.ChargedFreightAmount ||
                    (this.ChargedFreightAmount != null &&
                    this.ChargedFreightAmount.Equals(input.ChargedFreightAmount))
                ) && 
                (
                    this.PublishedFreightAmount == input.PublishedFreightAmount ||
                    (this.PublishedFreightAmount != null &&
                    this.PublishedFreightAmount.Equals(input.PublishedFreightAmount))
                ) && 
                (
                    this.RetailFreightAmount == input.RetailFreightAmount ||
                    (this.RetailFreightAmount != null &&
                    this.RetailFreightAmount.Equals(input.RetailFreightAmount))
                ) && 
                (
                    this.CartonCreateDate == input.CartonCreateDate ||
                    (this.CartonCreateDate != null &&
                    this.CartonCreateDate.Equals(input.CartonCreateDate))
                ) && 
                (
                    this.CartonModifyDate == input.CartonModifyDate ||
                    (this.CartonModifyDate != null &&
                    this.CartonModifyDate.Equals(input.CartonModifyDate))
                ) && 
                (
                    this.AlternateUsage == input.AlternateUsage ||
                    (this.AlternateUsage != null &&
                    this.AlternateUsage.Equals(input.AlternateUsage))
                ) && 
                (
                    this.GroupOrderId == input.GroupOrderId ||
                    (this.GroupOrderId != null &&
                    this.GroupOrderId.Equals(input.GroupOrderId))
                ) && 
                (
                    this.OrderStatus == input.OrderStatus ||
                    (this.OrderStatus != null &&
                    this.OrderStatus.Equals(input.OrderStatus))
                ) && 
                (
                    this.OrderStatusName == input.OrderStatusName ||
                    (this.OrderStatusName != null &&
                    this.OrderStatusName.Equals(input.OrderStatusName))
                ) && 
                (
                    this.FulfillmentProcessId == input.FulfillmentProcessId ||
                    (this.FulfillmentProcessId != null &&
                    this.FulfillmentProcessId.Equals(input.FulfillmentProcessId))
                ) && 
                (
                    this.CarrierId == input.CarrierId ||
                    (this.CarrierId != null &&
                    this.CarrierId.Equals(input.CarrierId))
                ) && 
                (
                    this.CarrierName == input.CarrierName ||
                    (this.CarrierName != null &&
                    this.CarrierName.Equals(input.CarrierName))
                ) && 
                (
                    this.MediaCode == input.MediaCode ||
                    (this.MediaCode != null &&
                    this.MediaCode.Equals(input.MediaCode))
                ) && 
                (
                    this.LegacyRestrictionType == input.LegacyRestrictionType ||
                    (this.LegacyRestrictionType != null &&
                    this.LegacyRestrictionType.Equals(input.LegacyRestrictionType))
                ) && 
                (
                    this.ReqTypeName == input.ReqTypeName ||
                    (this.ReqTypeName != null &&
                    this.ReqTypeName.Equals(input.ReqTypeName))
                ) && 
                (
                    this.LegacyServiceType == input.LegacyServiceType ||
                    (this.LegacyServiceType != null &&
                    this.LegacyServiceType.Equals(input.LegacyServiceType))
                ) && 
                (
                    this.LegacyServiceTypeName == input.LegacyServiceTypeName ||
                    (this.LegacyServiceTypeName != null &&
                    this.LegacyServiceTypeName.Equals(input.LegacyServiceTypeName))
                ) && 
                (
                    this.AlcoholOrderType == input.AlcoholOrderType ||
                    (this.AlcoholOrderType != null &&
                    this.AlcoholOrderType.Equals(input.AlcoholOrderType))
                ) && 
                (
                    this.DistributionChannel == input.DistributionChannel ||
                    (this.DistributionChannel != null &&
                    this.DistributionChannel.Equals(input.DistributionChannel))
                ) && 
                (
                    this.DistributionChannelName == input.DistributionChannelName ||
                    (this.DistributionChannelName != null &&
                    this.DistributionChannelName.Equals(input.DistributionChannelName))
                ) && 
                (
                    this.PriorityCode == input.PriorityCode ||
                    (this.PriorityCode != null &&
                    this.PriorityCode.Equals(input.PriorityCode))
                ) && 
                (
                    this.OrderDate == input.OrderDate ||
                    (this.OrderDate != null &&
                    this.OrderDate.Equals(input.OrderDate))
                ) && 
                (
                    this.EnteredBy == input.EnteredBy ||
                    (this.EnteredBy != null &&
                    this.EnteredBy.Equals(input.EnteredBy))
                ) && 
                (
                    this.OrderReason == input.OrderReason ||
                    (this.OrderReason != null &&
                    this.OrderReason.Equals(input.OrderReason))
                ) && 
                (
                    this.CustomerOrderNo == input.CustomerOrderNo ||
                    (this.CustomerOrderNo != null &&
                    this.CustomerOrderNo.Equals(input.CustomerOrderNo))
                ) && 
                (
                    this.PriceLevel == input.PriceLevel ||
                    (this.PriceLevel != null &&
                    this.PriceLevel.Equals(input.PriceLevel))
                ) && 
                (
                    this.OrderCreateDate == input.OrderCreateDate ||
                    (this.OrderCreateDate != null &&
                    this.OrderCreateDate.Equals(input.OrderCreateDate))
                ) && 
                (
                    this.OrderModifyDate == input.OrderModifyDate ||
                    (this.OrderModifyDate != null &&
                    this.OrderModifyDate.Equals(input.OrderModifyDate))
                ) && 
                (
                    this.ShipBy == input.ShipBy ||
                    (this.ShipBy != null &&
                    this.ShipBy.Equals(input.ShipBy))
                ) && 
                (
                    this.StopBackOrders == input.StopBackOrders ||
                    (this.StopBackOrders != null &&
                    this.StopBackOrders.Equals(input.StopBackOrders))
                ) && 
                (
                    this.OrderSourceId == input.OrderSourceId ||
                    (this.OrderSourceId != null &&
                    this.OrderSourceId.Equals(input.OrderSourceId))
                ) && 
                (
                    this.OrderSourceName == input.OrderSourceName ||
                    (this.OrderSourceName != null &&
                    this.OrderSourceName.Equals(input.OrderSourceName))
                ) && 
                (
                    this.IntegrationPartnerId == input.IntegrationPartnerId ||
                    (this.IntegrationPartnerId != null &&
                    this.IntegrationPartnerId.Equals(input.IntegrationPartnerId))
                ) && 
                (
                    this.IntegrationPartnerName == input.IntegrationPartnerName ||
                    (this.IntegrationPartnerName != null &&
                    this.IntegrationPartnerName.Equals(input.IntegrationPartnerName))
                ) && 
                (
                    this.OrderLoadProgramId == input.OrderLoadProgramId ||
                    (this.OrderLoadProgramId != null &&
                    this.OrderLoadProgramId.Equals(input.OrderLoadProgramId))
                ) && 
                (
                    this.OrderLoadProgramName == input.OrderLoadProgramName ||
                    (this.OrderLoadProgramName != null &&
                    this.OrderLoadProgramName.Equals(input.OrderLoadProgramName))
                ) && 
                (
                    this.OmsOrderNo == input.OmsOrderNo ||
                    (this.OmsOrderNo != null &&
                    this.OmsOrderNo.Equals(input.OmsOrderNo))
                ) && 
                (
                    this.OmsCustomerId == input.OmsCustomerId ||
                    (this.OmsCustomerId != null &&
                    this.OmsCustomerId.Equals(input.OmsCustomerId))
                ) && 
                (
                    this.ShipToAttention == input.ShipToAttention ||
                    (this.ShipToAttention != null &&
                    this.ShipToAttention.Equals(input.ShipToAttention))
                ) && 
                (
                    this.ShipToCompany == input.ShipToCompany ||
                    (this.ShipToCompany != null &&
                    this.ShipToCompany.Equals(input.ShipToCompany))
                ) && 
                (
                    this.ShipToStreet == input.ShipToStreet ||
                    (this.ShipToStreet != null &&
                    this.ShipToStreet.Equals(input.ShipToStreet))
                ) && 
                (
                    this.ShipToStreet2 == input.ShipToStreet2 ||
                    (this.ShipToStreet2 != null &&
                    this.ShipToStreet2.Equals(input.ShipToStreet2))
                ) && 
                (
                    this.ShipToStreet3 == input.ShipToStreet3 ||
                    (this.ShipToStreet3 != null &&
                    this.ShipToStreet3.Equals(input.ShipToStreet3))
                ) && 
                (
                    this.ShipToCity == input.ShipToCity ||
                    (this.ShipToCity != null &&
                    this.ShipToCity.Equals(input.ShipToCity))
                ) && 
                (
                    this.ShipToState == input.ShipToState ||
                    (this.ShipToState != null &&
                    this.ShipToState.Equals(input.ShipToState))
                ) && 
                (
                    this.ShipToZip == input.ShipToZip ||
                    (this.ShipToZip != null &&
                    this.ShipToZip.Equals(input.ShipToZip))
                ) && 
                (
                    this.ShipToCountry == input.ShipToCountry ||
                    (this.ShipToCountry != null &&
                    this.ShipToCountry.Equals(input.ShipToCountry))
                ) && 
                (
                    this.ShipToPhone == input.ShipToPhone ||
                    (this.ShipToPhone != null &&
                    this.ShipToPhone.Equals(input.ShipToPhone))
                ) && 
                (
                    this.ShipToEmail == input.ShipToEmail ||
                    (this.ShipToEmail != null &&
                    this.ShipToEmail.Equals(input.ShipToEmail))
                ) && 
                (
                    this.BillToAttention == input.BillToAttention ||
                    (this.BillToAttention != null &&
                    this.BillToAttention.Equals(input.BillToAttention))
                ) && 
                (
                    this.BillToCompany == input.BillToCompany ||
                    (this.BillToCompany != null &&
                    this.BillToCompany.Equals(input.BillToCompany))
                ) && 
                (
                    this.BillToStreet == input.BillToStreet ||
                    (this.BillToStreet != null &&
                    this.BillToStreet.Equals(input.BillToStreet))
                ) && 
                (
                    this.BillToStreet2 == input.BillToStreet2 ||
                    (this.BillToStreet2 != null &&
                    this.BillToStreet2.Equals(input.BillToStreet2))
                ) && 
                (
                    this.BillToStreet3 == input.BillToStreet3 ||
                    (this.BillToStreet3 != null &&
                    this.BillToStreet3.Equals(input.BillToStreet3))
                ) && 
                (
                    this.BillToCity == input.BillToCity ||
                    (this.BillToCity != null &&
                    this.BillToCity.Equals(input.BillToCity))
                ) && 
                (
                    this.BillToState == input.BillToState ||
                    (this.BillToState != null &&
                    this.BillToState.Equals(input.BillToState))
                ) && 
                (
                    this.BillToZip == input.BillToZip ||
                    (this.BillToZip != null &&
                    this.BillToZip.Equals(input.BillToZip))
                ) && 
                (
                    this.BillToCountry == input.BillToCountry ||
                    (this.BillToCountry != null &&
                    this.BillToCountry.Equals(input.BillToCountry))
                ) && 
                (
                    this.BillToPhone == input.BillToPhone ||
                    (this.BillToPhone != null &&
                    this.BillToPhone.Equals(input.BillToPhone))
                ) && 
                (
                    this.BillToEmail == input.BillToEmail ||
                    (this.BillToEmail != null &&
                    this.BillToEmail.Equals(input.BillToEmail))
                ) && 
                (
                    this.OrderShipDate == input.OrderShipDate ||
                    (this.OrderShipDate != null &&
                    this.OrderShipDate.Equals(input.OrderShipDate))
                ) && 
                (
                    this.Freight == input.Freight ||
                    (this.Freight != null &&
                    this.Freight.Equals(input.Freight))
                ) && 
                (
                    this.OrderWeightLbs == input.OrderWeightLbs ||
                    (this.OrderWeightLbs != null &&
                    this.OrderWeightLbs.Equals(input.OrderWeightLbs))
                ) && 
                (
                    this.OrderEstimatedWeightLbs == input.OrderEstimatedWeightLbs ||
                    (this.OrderEstimatedWeightLbs != null &&
                    this.OrderEstimatedWeightLbs.Equals(input.OrderEstimatedWeightLbs))
                ) && 
                (
                    this.NumberOfPallets == input.NumberOfPallets ||
                    (this.NumberOfPallets != null &&
                    this.NumberOfPallets.Equals(input.NumberOfPallets))
                ) && 
                (
                    this.NumberOfLineItems == input.NumberOfLineItems ||
                    (this.NumberOfLineItems != null &&
                    this.NumberOfLineItems.Equals(input.NumberOfLineItems))
                ) && 
                (
                    this.CompletionStatus == input.CompletionStatus ||
                    (this.CompletionStatus != null &&
                    this.CompletionStatus.Equals(input.CompletionStatus))
                ) && 
                (
                    this.HoldCode == input.HoldCode ||
                    (this.HoldCode != null &&
                    this.HoldCode.Equals(input.HoldCode))
                ) && 
                (
                    this.ShipCode == input.ShipCode ||
                    (this.ShipCode != null &&
                    this.ShipCode.Equals(input.ShipCode))
                ) && 
                (
                    this.OrderMessage == input.OrderMessage ||
                    (this.OrderMessage != null &&
                    this.OrderMessage.Equals(input.OrderMessage))
                ) && 
                (
                    this.Division == input.Division ||
                    (this.Division != null &&
                    this.Division.Equals(input.Division))
                ) && 
                (
                    this.CostCenter == input.CostCenter ||
                    (this.CostCenter != null &&
                    this.CostCenter.Equals(input.CostCenter))
                ) && 
                (
                    this.AuthorizedBy == input.AuthorizedBy ||
                    (this.AuthorizedBy != null &&
                    this.AuthorizedBy.Equals(input.AuthorizedBy))
                ) && 
                (
                    this.BatchNo == input.BatchNo ||
                    (this.BatchNo != null &&
                    this.BatchNo.Equals(input.BatchNo))
                ) && 
                (
                    this.FirstShipDate == input.FirstShipDate ||
                    (this.FirstShipDate != null &&
                    this.FirstShipDate.Equals(input.FirstShipDate))
                ) && 
                (
                    this.LastShipDate == input.LastShipDate ||
                    (this.LastShipDate != null &&
                    this.LastShipDate.Equals(input.LastShipDate))
                ) && 
                (
                    this.DeliverOnDate == input.DeliverOnDate ||
                    (this.DeliverOnDate != null &&
                    this.DeliverOnDate.Equals(input.DeliverOnDate))
                ) && 
                (
                    this.CustomerPONo == input.CustomerPONo ||
                    (this.CustomerPONo != null &&
                    this.CustomerPONo.Equals(input.CustomerPONo))
                ) && 
                (
                    this.ShipVia == input.ShipVia ||
                    (this.ShipVia != null &&
                    this.ShipVia.Equals(input.ShipVia))
                ) && 
                (
                    this.NeedByDate == input.NeedByDate ||
                    (this.NeedByDate != null &&
                    this.NeedByDate.Equals(input.NeedByDate))
                ) && 
                (
                    this.Total == input.Total ||
                    (this.Total != null &&
                    this.Total.Equals(input.Total))
                ) && 
                (
                    this.BalanceDue == input.BalanceDue ||
                    (this.BalanceDue != null &&
                    this.BalanceDue.Equals(input.BalanceDue))
                ) && 
                (
                    this.TotalPaid == input.TotalPaid ||
                    (this.TotalPaid != null &&
                    this.TotalPaid.Equals(input.TotalPaid))
                ) && 
                (
                    this.AuthorizationAmount == input.AuthorizationAmount ||
                    (this.AuthorizationAmount != null &&
                    this.AuthorizationAmount.Equals(input.AuthorizationAmount))
                ) && 
                (
                    this.Subtotal == input.Subtotal ||
                    (this.Subtotal != null &&
                    this.Subtotal.Equals(input.Subtotal))
                ) && 
                (
                    this.TaxOnFreight == input.TaxOnFreight ||
                    (this.TaxOnFreight != null &&
                    this.TaxOnFreight.Equals(input.TaxOnFreight))
                ) && 
                (
                    this.Tax == input.Tax ||
                    (this.Tax != null &&
                    this.Tax.Equals(input.Tax))
                ) && 
                (
                    this.DistributionCharges == input.DistributionCharges ||
                    (this.DistributionCharges != null &&
                    this.DistributionCharges.Equals(input.DistributionCharges))
                ) && 
                (
                    this.ShippingCharge == input.ShippingCharge ||
                    (this.ShippingCharge != null &&
                    this.ShippingCharge.Equals(input.ShippingCharge))
                ) && 
                (
                    this.TotalDiscount == input.TotalDiscount ||
                    (this.TotalDiscount != null &&
                    this.TotalDiscount.Equals(input.TotalDiscount))
                ) && 
                (
                    this.ParcelAccountId == input.ParcelAccountId ||
                    (this.ParcelAccountId != null &&
                    this.ParcelAccountId.Equals(input.ParcelAccountId))
                ) && 
                (
                    this.ThirdPartyParcelAccountId == input.ThirdPartyParcelAccountId ||
                    (this.ThirdPartyParcelAccountId != null &&
                    this.ThirdPartyParcelAccountId.Equals(input.ThirdPartyParcelAccountId))
                ) && 
                (
                    this.PackingSlipTemplateId == input.PackingSlipTemplateId ||
                    (this.PackingSlipTemplateId != null &&
                    this.PackingSlipTemplateId.Equals(input.PackingSlipTemplateId))
                ) && 
                (
                    this.GiftMessage == input.GiftMessage ||
                    (this.GiftMessage != null &&
                    this.GiftMessage.Equals(input.GiftMessage))
                ) && 
                (
                    this.BranchSector == input.BranchSector ||
                    (this.BranchSector != null &&
                    this.BranchSector.Equals(input.BranchSector))
                ) && 
                (
                    this.BranchArea == input.BranchArea ||
                    (this.BranchArea != null &&
                    this.BranchArea.Equals(input.BranchArea))
                ) && 
                (
                    this.BranchCustomerType == input.BranchCustomerType ||
                    (this.BranchCustomerType != null &&
                    this.BranchCustomerType.Equals(input.BranchCustomerType))
                ) && 
                (
                    this.BranchId == input.BranchId ||
                    (this.BranchId != null &&
                    this.BranchId.Equals(input.BranchId))
                ) && 
                (
                    this.OrderCode == input.OrderCode ||
                    (this.OrderCode != null &&
                    this.OrderCode.Equals(input.OrderCode))
                ) && 
                (
                    this.LeadPackageId == input.LeadPackageId ||
                    (this.LeadPackageId != null &&
                    this.LeadPackageId.Equals(input.LeadPackageId))
                ) && 
                (
                    this.TotalQty == input.TotalQty ||
                    (this.TotalQty != null &&
                    this.TotalQty.Equals(input.TotalQty))
                ) && 
                (
                    this.EstimatedNumberOfPicks == input.EstimatedNumberOfPicks ||
                    (this.EstimatedNumberOfPicks != null &&
                    this.EstimatedNumberOfPicks.Equals(input.EstimatedNumberOfPicks))
                ) && 
                (
                    this.OrderConfirmationEmailTemplateId == input.OrderConfirmationEmailTemplateId ||
                    (this.OrderConfirmationEmailTemplateId != null &&
                    this.OrderConfirmationEmailTemplateId.Equals(input.OrderConfirmationEmailTemplateId))
                ) && 
                (
                    this.ShipmentConfirmationEmailTemplateId == input.ShipmentConfirmationEmailTemplateId ||
                    (this.ShipmentConfirmationEmailTemplateId != null &&
                    this.ShipmentConfirmationEmailTemplateId.Equals(input.ShipmentConfirmationEmailTemplateId))
                ) && 
                (
                    this.ExternalShippingSystemId == input.ExternalShippingSystemId ||
                    (this.ExternalShippingSystemId != null &&
                    this.ExternalShippingSystemId.Equals(input.ExternalShippingSystemId))
                ) && 
                (
                    this.ShippingSystemName == input.ShippingSystemName ||
                    (this.ShippingSystemName != null &&
                    this.ShippingSystemName.Equals(input.ShippingSystemName))
                ) && 
                (
                    this.OrderInvoiceTemplateId == input.OrderInvoiceTemplateId ||
                    (this.OrderInvoiceTemplateId != null &&
                    this.OrderInvoiceTemplateId.Equals(input.OrderInvoiceTemplateId))
                ) && 
                (
                    this.PriceMode == input.PriceMode ||
                    (this.PriceMode != null &&
                    this.PriceMode.Equals(input.PriceMode))
                ) && 
                (
                    this.WarehouseServiceTypeId == input.WarehouseServiceTypeId ||
                    (this.WarehouseServiceTypeId != null &&
                    this.WarehouseServiceTypeId.Equals(input.WarehouseServiceTypeId))
                ) && 
                (
                    this.WarehouseServiceLevelId == input.WarehouseServiceLevelId ||
                    (this.WarehouseServiceLevelId != null &&
                    this.WarehouseServiceLevelId.Equals(input.WarehouseServiceLevelId))
                ) && 
                (
                    this.SlaDate == input.SlaDate ||
                    (this.SlaDate != null &&
                    this.SlaDate.Equals(input.SlaDate))
                ) && 
                (
                    this.SlaStatus == input.SlaStatus ||
                    (this.SlaStatus != null &&
                    this.SlaStatus.Equals(input.SlaStatus))
                ) && 
                (
                    this.ProductionType == input.ProductionType ||
                    (this.ProductionType != null &&
                    this.ProductionType.Equals(input.ProductionType))
                ) && 
                (
                    this.BackOrderStatus == input.BackOrderStatus ||
                    (this.BackOrderStatus != null &&
                    this.BackOrderStatus.Equals(input.BackOrderStatus))
                ) && 
                (
                    this.BackOrderReleaseDate == input.BackOrderReleaseDate ||
                    (this.BackOrderReleaseDate != null &&
                    this.BackOrderReleaseDate.Equals(input.BackOrderReleaseDate))
                ) && 
                (
                    this.CartonTypeId == input.CartonTypeId ||
                    (this.CartonTypeId != null &&
                    this.CartonTypeId.Equals(input.CartonTypeId))
                ) && 
                (
                    this.CartonAbbr == input.CartonAbbr ||
                    (this.CartonAbbr != null &&
                    this.CartonAbbr.Equals(input.CartonAbbr))
                ) && 
                (
                    this.CartonName == input.CartonName ||
                    (this.CartonName != null &&
                    this.CartonName.Equals(input.CartonName))
                ) && 
                (
                    this.CartonLength == input.CartonLength ||
                    (this.CartonLength != null &&
                    this.CartonLength.Equals(input.CartonLength))
                ) && 
                (
                    this.CartonWidth == input.CartonWidth ||
                    (this.CartonWidth != null &&
                    this.CartonWidth.Equals(input.CartonWidth))
                ) && 
                (
                    this.CartonHeight == input.CartonHeight ||
                    (this.CartonHeight != null &&
                    this.CartonHeight.Equals(input.CartonHeight))
                ) && 
                (
                    this.CartonInnerLength == input.CartonInnerLength ||
                    (this.CartonInnerLength != null &&
                    this.CartonInnerLength.Equals(input.CartonInnerLength))
                ) && 
                (
                    this.CartonInnerWidth == input.CartonInnerWidth ||
                    (this.CartonInnerWidth != null &&
                    this.CartonInnerWidth.Equals(input.CartonInnerWidth))
                ) && 
                (
                    this.CartonInnerHeight == input.CartonInnerHeight ||
                    (this.CartonInnerHeight != null &&
                    this.CartonInnerHeight.Equals(input.CartonInnerHeight))
                ) && 
                (
                    this.CartonWeight == input.CartonWeight ||
                    (this.CartonWeight != null &&
                    this.CartonWeight.Equals(input.CartonWeight))
                ) && 
                (
                    this.PredefinedCartonId == input.PredefinedCartonId ||
                    (this.PredefinedCartonId != null &&
                    this.PredefinedCartonId.Equals(input.PredefinedCartonId))
                ) && 
                (
                    this.PredefinedCartonLabel == input.PredefinedCartonLabel ||
                    (this.PredefinedCartonLabel != null &&
                    this.PredefinedCartonLabel.Equals(input.PredefinedCartonLabel))
                ) && 
                (
                    this.BillingQuantity == input.BillingQuantity ||
                    (this.BillingQuantity != null &&
                    this.BillingQuantity.Equals(input.BillingQuantity))
                ) && 
                (
                    this.ChargeRate == input.ChargeRate ||
                    (this.ChargeRate != null &&
                    this.ChargeRate.Equals(input.ChargeRate))
                ) && 
                (
                    this.ExtendedCharge == input.ExtendedCharge ||
                    (this.ExtendedCharge != null &&
                    this.ExtendedCharge.Equals(input.ExtendedCharge))
                ) && 
                (
                    this.CustomFields == input.CustomFields ||
                    this.CustomFields != null &&
                    this.CustomFields.SequenceEqual(input.CustomFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.CreateDate != null)
                    hashCode = hashCode * 59 + this.CreateDate.GetHashCode();
                if (this.ModifyDate != null)
                    hashCode = hashCode * 59 + this.ModifyDate.GetHashCode();
                if (this.LobId != null)
                    hashCode = hashCode * 59 + this.LobId.GetHashCode();
                if (this.OrderNo != null)
                    hashCode = hashCode * 59 + this.OrderNo.GetHashCode();
                if (this.ShipDate != null)
                    hashCode = hashCode * 59 + this.ShipDate.GetHashCode();
                if (this.DeliveredDate != null)
                    hashCode = hashCode * 59 + this.DeliveredDate.GetHashCode();
                if (this.TrackingNo != null)
                    hashCode = hashCode * 59 + this.TrackingNo.GetHashCode();
                if (this.WarehouseId != null)
                    hashCode = hashCode * 59 + this.WarehouseId.GetHashCode();
                if (this.WarehouseName != null)
                    hashCode = hashCode * 59 + this.WarehouseName.GetHashCode();
                if (this.CartonNo != null)
                    hashCode = hashCode * 59 + this.CartonNo.GetHashCode();
                if (this.NumberOfCartons != null)
                    hashCode = hashCode * 59 + this.NumberOfCartons.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.Shipped != null)
                    hashCode = hashCode * 59 + this.Shipped.GetHashCode();
                if (this.CarrierServiceId != null)
                    hashCode = hashCode * 59 + this.CarrierServiceId.GetHashCode();
                if (this.Dim1In != null)
                    hashCode = hashCode * 59 + this.Dim1In.GetHashCode();
                if (this.Dim2In != null)
                    hashCode = hashCode * 59 + this.Dim2In.GetHashCode();
                if (this.Dim3In != null)
                    hashCode = hashCode * 59 + this.Dim3In.GetHashCode();
                if (this.EstimatedZone != null)
                    hashCode = hashCode * 59 + this.EstimatedZone.GetHashCode();
                if (this.ParcelAccountNo != null)
                    hashCode = hashCode * 59 + this.ParcelAccountNo.GetHashCode();
                if (this.ThirdPartyParcelAccountNo != null)
                    hashCode = hashCode * 59 + this.ThirdPartyParcelAccountNo.GetHashCode();
                if (this.ManifestId != null)
                    hashCode = hashCode * 59 + this.ManifestId.GetHashCode();
                if (this.Residential != null)
                    hashCode = hashCode * 59 + this.Residential.GetHashCode();
                if (this.BillingOption != null)
                    hashCode = hashCode * 59 + this.BillingOption.GetHashCode();
                if (this.WeightLbs != null)
                    hashCode = hashCode * 59 + this.WeightLbs.GetHashCode();
                if (this.DimWeight != null)
                    hashCode = hashCode * 59 + this.DimWeight.GetHashCode();
                if (this.LicensePlateNumber != null)
                    hashCode = hashCode * 59 + this.LicensePlateNumber.GetHashCode();
                if (this.ChargedFreightAmount != null)
                    hashCode = hashCode * 59 + this.ChargedFreightAmount.GetHashCode();
                if (this.PublishedFreightAmount != null)
                    hashCode = hashCode * 59 + this.PublishedFreightAmount.GetHashCode();
                if (this.RetailFreightAmount != null)
                    hashCode = hashCode * 59 + this.RetailFreightAmount.GetHashCode();
                if (this.CartonCreateDate != null)
                    hashCode = hashCode * 59 + this.CartonCreateDate.GetHashCode();
                if (this.CartonModifyDate != null)
                    hashCode = hashCode * 59 + this.CartonModifyDate.GetHashCode();
                if (this.AlternateUsage != null)
                    hashCode = hashCode * 59 + this.AlternateUsage.GetHashCode();
                if (this.GroupOrderId != null)
                    hashCode = hashCode * 59 + this.GroupOrderId.GetHashCode();
                if (this.OrderStatus != null)
                    hashCode = hashCode * 59 + this.OrderStatus.GetHashCode();
                if (this.OrderStatusName != null)
                    hashCode = hashCode * 59 + this.OrderStatusName.GetHashCode();
                if (this.FulfillmentProcessId != null)
                    hashCode = hashCode * 59 + this.FulfillmentProcessId.GetHashCode();
                if (this.CarrierId != null)
                    hashCode = hashCode * 59 + this.CarrierId.GetHashCode();
                if (this.CarrierName != null)
                    hashCode = hashCode * 59 + this.CarrierName.GetHashCode();
                if (this.MediaCode != null)
                    hashCode = hashCode * 59 + this.MediaCode.GetHashCode();
                if (this.LegacyRestrictionType != null)
                    hashCode = hashCode * 59 + this.LegacyRestrictionType.GetHashCode();
                if (this.ReqTypeName != null)
                    hashCode = hashCode * 59 + this.ReqTypeName.GetHashCode();
                if (this.LegacyServiceType != null)
                    hashCode = hashCode * 59 + this.LegacyServiceType.GetHashCode();
                if (this.LegacyServiceTypeName != null)
                    hashCode = hashCode * 59 + this.LegacyServiceTypeName.GetHashCode();
                if (this.AlcoholOrderType != null)
                    hashCode = hashCode * 59 + this.AlcoholOrderType.GetHashCode();
                if (this.DistributionChannel != null)
                    hashCode = hashCode * 59 + this.DistributionChannel.GetHashCode();
                if (this.DistributionChannelName != null)
                    hashCode = hashCode * 59 + this.DistributionChannelName.GetHashCode();
                if (this.PriorityCode != null)
                    hashCode = hashCode * 59 + this.PriorityCode.GetHashCode();
                if (this.OrderDate != null)
                    hashCode = hashCode * 59 + this.OrderDate.GetHashCode();
                if (this.EnteredBy != null)
                    hashCode = hashCode * 59 + this.EnteredBy.GetHashCode();
                if (this.OrderReason != null)
                    hashCode = hashCode * 59 + this.OrderReason.GetHashCode();
                if (this.CustomerOrderNo != null)
                    hashCode = hashCode * 59 + this.CustomerOrderNo.GetHashCode();
                if (this.PriceLevel != null)
                    hashCode = hashCode * 59 + this.PriceLevel.GetHashCode();
                if (this.OrderCreateDate != null)
                    hashCode = hashCode * 59 + this.OrderCreateDate.GetHashCode();
                if (this.OrderModifyDate != null)
                    hashCode = hashCode * 59 + this.OrderModifyDate.GetHashCode();
                if (this.ShipBy != null)
                    hashCode = hashCode * 59 + this.ShipBy.GetHashCode();
                if (this.StopBackOrders != null)
                    hashCode = hashCode * 59 + this.StopBackOrders.GetHashCode();
                if (this.OrderSourceId != null)
                    hashCode = hashCode * 59 + this.OrderSourceId.GetHashCode();
                if (this.OrderSourceName != null)
                    hashCode = hashCode * 59 + this.OrderSourceName.GetHashCode();
                if (this.IntegrationPartnerId != null)
                    hashCode = hashCode * 59 + this.IntegrationPartnerId.GetHashCode();
                if (this.IntegrationPartnerName != null)
                    hashCode = hashCode * 59 + this.IntegrationPartnerName.GetHashCode();
                if (this.OrderLoadProgramId != null)
                    hashCode = hashCode * 59 + this.OrderLoadProgramId.GetHashCode();
                if (this.OrderLoadProgramName != null)
                    hashCode = hashCode * 59 + this.OrderLoadProgramName.GetHashCode();
                if (this.OmsOrderNo != null)
                    hashCode = hashCode * 59 + this.OmsOrderNo.GetHashCode();
                if (this.OmsCustomerId != null)
                    hashCode = hashCode * 59 + this.OmsCustomerId.GetHashCode();
                if (this.ShipToAttention != null)
                    hashCode = hashCode * 59 + this.ShipToAttention.GetHashCode();
                if (this.ShipToCompany != null)
                    hashCode = hashCode * 59 + this.ShipToCompany.GetHashCode();
                if (this.ShipToStreet != null)
                    hashCode = hashCode * 59 + this.ShipToStreet.GetHashCode();
                if (this.ShipToStreet2 != null)
                    hashCode = hashCode * 59 + this.ShipToStreet2.GetHashCode();
                if (this.ShipToStreet3 != null)
                    hashCode = hashCode * 59 + this.ShipToStreet3.GetHashCode();
                if (this.ShipToCity != null)
                    hashCode = hashCode * 59 + this.ShipToCity.GetHashCode();
                if (this.ShipToState != null)
                    hashCode = hashCode * 59 + this.ShipToState.GetHashCode();
                if (this.ShipToZip != null)
                    hashCode = hashCode * 59 + this.ShipToZip.GetHashCode();
                if (this.ShipToCountry != null)
                    hashCode = hashCode * 59 + this.ShipToCountry.GetHashCode();
                if (this.ShipToPhone != null)
                    hashCode = hashCode * 59 + this.ShipToPhone.GetHashCode();
                if (this.ShipToEmail != null)
                    hashCode = hashCode * 59 + this.ShipToEmail.GetHashCode();
                if (this.BillToAttention != null)
                    hashCode = hashCode * 59 + this.BillToAttention.GetHashCode();
                if (this.BillToCompany != null)
                    hashCode = hashCode * 59 + this.BillToCompany.GetHashCode();
                if (this.BillToStreet != null)
                    hashCode = hashCode * 59 + this.BillToStreet.GetHashCode();
                if (this.BillToStreet2 != null)
                    hashCode = hashCode * 59 + this.BillToStreet2.GetHashCode();
                if (this.BillToStreet3 != null)
                    hashCode = hashCode * 59 + this.BillToStreet3.GetHashCode();
                if (this.BillToCity != null)
                    hashCode = hashCode * 59 + this.BillToCity.GetHashCode();
                if (this.BillToState != null)
                    hashCode = hashCode * 59 + this.BillToState.GetHashCode();
                if (this.BillToZip != null)
                    hashCode = hashCode * 59 + this.BillToZip.GetHashCode();
                if (this.BillToCountry != null)
                    hashCode = hashCode * 59 + this.BillToCountry.GetHashCode();
                if (this.BillToPhone != null)
                    hashCode = hashCode * 59 + this.BillToPhone.GetHashCode();
                if (this.BillToEmail != null)
                    hashCode = hashCode * 59 + this.BillToEmail.GetHashCode();
                if (this.OrderShipDate != null)
                    hashCode = hashCode * 59 + this.OrderShipDate.GetHashCode();
                if (this.Freight != null)
                    hashCode = hashCode * 59 + this.Freight.GetHashCode();
                if (this.OrderWeightLbs != null)
                    hashCode = hashCode * 59 + this.OrderWeightLbs.GetHashCode();
                if (this.OrderEstimatedWeightLbs != null)
                    hashCode = hashCode * 59 + this.OrderEstimatedWeightLbs.GetHashCode();
                if (this.NumberOfPallets != null)
                    hashCode = hashCode * 59 + this.NumberOfPallets.GetHashCode();
                if (this.NumberOfLineItems != null)
                    hashCode = hashCode * 59 + this.NumberOfLineItems.GetHashCode();
                if (this.CompletionStatus != null)
                    hashCode = hashCode * 59 + this.CompletionStatus.GetHashCode();
                if (this.HoldCode != null)
                    hashCode = hashCode * 59 + this.HoldCode.GetHashCode();
                if (this.ShipCode != null)
                    hashCode = hashCode * 59 + this.ShipCode.GetHashCode();
                if (this.OrderMessage != null)
                    hashCode = hashCode * 59 + this.OrderMessage.GetHashCode();
                if (this.Division != null)
                    hashCode = hashCode * 59 + this.Division.GetHashCode();
                if (this.CostCenter != null)
                    hashCode = hashCode * 59 + this.CostCenter.GetHashCode();
                if (this.AuthorizedBy != null)
                    hashCode = hashCode * 59 + this.AuthorizedBy.GetHashCode();
                if (this.BatchNo != null)
                    hashCode = hashCode * 59 + this.BatchNo.GetHashCode();
                if (this.FirstShipDate != null)
                    hashCode = hashCode * 59 + this.FirstShipDate.GetHashCode();
                if (this.LastShipDate != null)
                    hashCode = hashCode * 59 + this.LastShipDate.GetHashCode();
                if (this.DeliverOnDate != null)
                    hashCode = hashCode * 59 + this.DeliverOnDate.GetHashCode();
                if (this.CustomerPONo != null)
                    hashCode = hashCode * 59 + this.CustomerPONo.GetHashCode();
                if (this.ShipVia != null)
                    hashCode = hashCode * 59 + this.ShipVia.GetHashCode();
                if (this.NeedByDate != null)
                    hashCode = hashCode * 59 + this.NeedByDate.GetHashCode();
                if (this.Total != null)
                    hashCode = hashCode * 59 + this.Total.GetHashCode();
                if (this.BalanceDue != null)
                    hashCode = hashCode * 59 + this.BalanceDue.GetHashCode();
                if (this.TotalPaid != null)
                    hashCode = hashCode * 59 + this.TotalPaid.GetHashCode();
                if (this.AuthorizationAmount != null)
                    hashCode = hashCode * 59 + this.AuthorizationAmount.GetHashCode();
                if (this.Subtotal != null)
                    hashCode = hashCode * 59 + this.Subtotal.GetHashCode();
                if (this.TaxOnFreight != null)
                    hashCode = hashCode * 59 + this.TaxOnFreight.GetHashCode();
                if (this.Tax != null)
                    hashCode = hashCode * 59 + this.Tax.GetHashCode();
                if (this.DistributionCharges != null)
                    hashCode = hashCode * 59 + this.DistributionCharges.GetHashCode();
                if (this.ShippingCharge != null)
                    hashCode = hashCode * 59 + this.ShippingCharge.GetHashCode();
                if (this.TotalDiscount != null)
                    hashCode = hashCode * 59 + this.TotalDiscount.GetHashCode();
                if (this.ParcelAccountId != null)
                    hashCode = hashCode * 59 + this.ParcelAccountId.GetHashCode();
                if (this.ThirdPartyParcelAccountId != null)
                    hashCode = hashCode * 59 + this.ThirdPartyParcelAccountId.GetHashCode();
                if (this.PackingSlipTemplateId != null)
                    hashCode = hashCode * 59 + this.PackingSlipTemplateId.GetHashCode();
                if (this.GiftMessage != null)
                    hashCode = hashCode * 59 + this.GiftMessage.GetHashCode();
                if (this.BranchSector != null)
                    hashCode = hashCode * 59 + this.BranchSector.GetHashCode();
                if (this.BranchArea != null)
                    hashCode = hashCode * 59 + this.BranchArea.GetHashCode();
                if (this.BranchCustomerType != null)
                    hashCode = hashCode * 59 + this.BranchCustomerType.GetHashCode();
                if (this.BranchId != null)
                    hashCode = hashCode * 59 + this.BranchId.GetHashCode();
                if (this.OrderCode != null)
                    hashCode = hashCode * 59 + this.OrderCode.GetHashCode();
                if (this.LeadPackageId != null)
                    hashCode = hashCode * 59 + this.LeadPackageId.GetHashCode();
                if (this.TotalQty != null)
                    hashCode = hashCode * 59 + this.TotalQty.GetHashCode();
                if (this.EstimatedNumberOfPicks != null)
                    hashCode = hashCode * 59 + this.EstimatedNumberOfPicks.GetHashCode();
                if (this.OrderConfirmationEmailTemplateId != null)
                    hashCode = hashCode * 59 + this.OrderConfirmationEmailTemplateId.GetHashCode();
                if (this.ShipmentConfirmationEmailTemplateId != null)
                    hashCode = hashCode * 59 + this.ShipmentConfirmationEmailTemplateId.GetHashCode();
                if (this.ExternalShippingSystemId != null)
                    hashCode = hashCode * 59 + this.ExternalShippingSystemId.GetHashCode();
                if (this.ShippingSystemName != null)
                    hashCode = hashCode * 59 + this.ShippingSystemName.GetHashCode();
                if (this.OrderInvoiceTemplateId != null)
                    hashCode = hashCode * 59 + this.OrderInvoiceTemplateId.GetHashCode();
                if (this.PriceMode != null)
                    hashCode = hashCode * 59 + this.PriceMode.GetHashCode();
                if (this.WarehouseServiceTypeId != null)
                    hashCode = hashCode * 59 + this.WarehouseServiceTypeId.GetHashCode();
                if (this.WarehouseServiceLevelId != null)
                    hashCode = hashCode * 59 + this.WarehouseServiceLevelId.GetHashCode();
                if (this.SlaDate != null)
                    hashCode = hashCode * 59 + this.SlaDate.GetHashCode();
                if (this.SlaStatus != null)
                    hashCode = hashCode * 59 + this.SlaStatus.GetHashCode();
                if (this.ProductionType != null)
                    hashCode = hashCode * 59 + this.ProductionType.GetHashCode();
                if (this.BackOrderStatus != null)
                    hashCode = hashCode * 59 + this.BackOrderStatus.GetHashCode();
                if (this.BackOrderReleaseDate != null)
                    hashCode = hashCode * 59 + this.BackOrderReleaseDate.GetHashCode();
                if (this.CartonTypeId != null)
                    hashCode = hashCode * 59 + this.CartonTypeId.GetHashCode();
                if (this.CartonAbbr != null)
                    hashCode = hashCode * 59 + this.CartonAbbr.GetHashCode();
                if (this.CartonName != null)
                    hashCode = hashCode * 59 + this.CartonName.GetHashCode();
                if (this.CartonLength != null)
                    hashCode = hashCode * 59 + this.CartonLength.GetHashCode();
                if (this.CartonWidth != null)
                    hashCode = hashCode * 59 + this.CartonWidth.GetHashCode();
                if (this.CartonHeight != null)
                    hashCode = hashCode * 59 + this.CartonHeight.GetHashCode();
                if (this.CartonInnerLength != null)
                    hashCode = hashCode * 59 + this.CartonInnerLength.GetHashCode();
                if (this.CartonInnerWidth != null)
                    hashCode = hashCode * 59 + this.CartonInnerWidth.GetHashCode();
                if (this.CartonInnerHeight != null)
                    hashCode = hashCode * 59 + this.CartonInnerHeight.GetHashCode();
                if (this.CartonWeight != null)
                    hashCode = hashCode * 59 + this.CartonWeight.GetHashCode();
                if (this.PredefinedCartonId != null)
                    hashCode = hashCode * 59 + this.PredefinedCartonId.GetHashCode();
                if (this.PredefinedCartonLabel != null)
                    hashCode = hashCode * 59 + this.PredefinedCartonLabel.GetHashCode();
                if (this.BillingQuantity != null)
                    hashCode = hashCode * 59 + this.BillingQuantity.GetHashCode();
                if (this.ChargeRate != null)
                    hashCode = hashCode * 59 + this.ChargeRate.GetHashCode();
                if (this.ExtendedCharge != null)
                    hashCode = hashCode * 59 + this.ExtendedCharge.GetHashCode();
                if (this.CustomFields != null)
                    hashCode = hashCode * 59 + this.CustomFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
