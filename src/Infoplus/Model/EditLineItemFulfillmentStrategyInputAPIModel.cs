/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Infoplus.Client.SwaggerDateConverter;

namespace Infoplus.Model
{
    /// <summary>
    /// EditLineItemFulfillmentStrategyInputAPIModel
    /// </summary>
    [DataContract]
    public partial class EditLineItemFulfillmentStrategyInputAPIModel :  IEquatable<EditLineItemFulfillmentStrategyInputAPIModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EditLineItemFulfillmentStrategyInputAPIModel" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EditLineItemFulfillmentStrategyInputAPIModel() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EditLineItemFulfillmentStrategyInputAPIModel" /> class.
        /// </summary>
        /// <param name="OrderNoList">OrderNoList.</param>
        /// <param name="FulfillmentChannelId">FulfillmentChannelId (required).</param>
        /// <param name="Sku">Sku.</param>
        public EditLineItemFulfillmentStrategyInputAPIModel(List<decimal?> OrderNoList = default(List<decimal?>), int? FulfillmentChannelId = default(int?), string Sku = default(string))
        {
            // to ensure "FulfillmentChannelId" is required (not null)
            if (FulfillmentChannelId == null)
            {
                throw new InvalidDataException("FulfillmentChannelId is a required property for EditLineItemFulfillmentStrategyInputAPIModel and cannot be null");
            }
            else
            {
                this.FulfillmentChannelId = FulfillmentChannelId;
            }
            this.OrderNoList = OrderNoList;
            this.Sku = Sku;
        }
        
        /// <summary>
        /// Gets or Sets OrderNoList
        /// </summary>
        [DataMember(Name="orderNoList", EmitDefaultValue=false)]
        public List<decimal?> OrderNoList { get; set; }

        /// <summary>
        /// Gets or Sets FulfillmentChannelId
        /// </summary>
        [DataMember(Name="fulfillmentChannelId", EmitDefaultValue=false)]
        public int? FulfillmentChannelId { get; set; }

        /// <summary>
        /// Gets or Sets Sku
        /// </summary>
        [DataMember(Name="sku", EmitDefaultValue=false)]
        public string Sku { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EditLineItemFulfillmentStrategyInputAPIModel {\n");
            sb.Append("  OrderNoList: ").Append(OrderNoList).Append("\n");
            sb.Append("  FulfillmentChannelId: ").Append(FulfillmentChannelId).Append("\n");
            sb.Append("  Sku: ").Append(Sku).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EditLineItemFulfillmentStrategyInputAPIModel);
        }

        /// <summary>
        /// Returns true if EditLineItemFulfillmentStrategyInputAPIModel instances are equal
        /// </summary>
        /// <param name="input">Instance of EditLineItemFulfillmentStrategyInputAPIModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EditLineItemFulfillmentStrategyInputAPIModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OrderNoList == input.OrderNoList ||
                    this.OrderNoList != null &&
                    this.OrderNoList.SequenceEqual(input.OrderNoList)
                ) && 
                (
                    this.FulfillmentChannelId == input.FulfillmentChannelId ||
                    (this.FulfillmentChannelId != null &&
                    this.FulfillmentChannelId.Equals(input.FulfillmentChannelId))
                ) && 
                (
                    this.Sku == input.Sku ||
                    (this.Sku != null &&
                    this.Sku.Equals(input.Sku))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OrderNoList != null)
                    hashCode = hashCode * 59 + this.OrderNoList.GetHashCode();
                if (this.FulfillmentChannelId != null)
                    hashCode = hashCode * 59 + this.FulfillmentChannelId.GetHashCode();
                if (this.Sku != null)
                    hashCode = hashCode * 59 + this.Sku.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
