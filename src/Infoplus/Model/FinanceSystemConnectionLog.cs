/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Infoplus.Client.SwaggerDateConverter;

namespace Infoplus.Model
{
    /// <summary>
    /// FinanceSystemConnectionLog
    /// </summary>
    [DataContract]
    public partial class FinanceSystemConnectionLog :  IEquatable<FinanceSystemConnectionLog>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FinanceSystemConnectionLog" /> class.
        /// </summary>
        /// <param name="FinanceSystemConnectionId">FinanceSystemConnectionId.</param>
        /// <param name="Type">Type.</param>
        /// <param name="Notes">Notes.</param>
        /// <param name="OrderNo">OrderNo.</param>
        /// <param name="FinanceSystemOrderNo">FinanceSystemOrderNo.</param>
        /// <param name="FinanceSystemOrderId">FinanceSystemOrderId.</param>
        /// <param name="AsnId">AsnId.</param>
        /// <param name="FinanceSystemPONo">FinanceSystemPONo.</param>
        /// <param name="FinanceSystemPOId">FinanceSystemPOId.</param>
        /// <param name="ItemReceiptIdId">ItemReceiptIdId.</param>
        /// <param name="AdjustmentIdId">AdjustmentIdId.</param>
        /// <param name="JobIdId">JobIdId.</param>
        /// <param name="CustomFields">CustomFields.</param>
        public FinanceSystemConnectionLog(int? FinanceSystemConnectionId = default(int?), string Type = default(string), string Notes = default(string), decimal? OrderNo = default(decimal?), string FinanceSystemOrderNo = default(string), string FinanceSystemOrderId = default(string), int? AsnId = default(int?), string FinanceSystemPONo = default(string), string FinanceSystemPOId = default(string), int? ItemReceiptIdId = default(int?), int? AdjustmentIdId = default(int?), int? JobIdId = default(int?), Dictionary<string, Object> CustomFields = default(Dictionary<string, Object>))
        {
            this.FinanceSystemConnectionId = FinanceSystemConnectionId;
            this.Type = Type;
            this.Notes = Notes;
            this.OrderNo = OrderNo;
            this.FinanceSystemOrderNo = FinanceSystemOrderNo;
            this.FinanceSystemOrderId = FinanceSystemOrderId;
            this.AsnId = AsnId;
            this.FinanceSystemPONo = FinanceSystemPONo;
            this.FinanceSystemPOId = FinanceSystemPOId;
            this.ItemReceiptIdId = ItemReceiptIdId;
            this.AdjustmentIdId = AdjustmentIdId;
            this.JobIdId = JobIdId;
            this.CustomFields = CustomFields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; private set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name="createDate", EmitDefaultValue=false)]
        public DateTime? CreateDate { get; private set; }

        /// <summary>
        /// Gets or Sets FinanceSystemConnectionId
        /// </summary>
        [DataMember(Name="financeSystemConnectionId", EmitDefaultValue=false)]
        public int? FinanceSystemConnectionId { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets Notes
        /// </summary>
        [DataMember(Name="notes", EmitDefaultValue=false)]
        public string Notes { get; set; }

        /// <summary>
        /// Gets or Sets OrderNo
        /// </summary>
        [DataMember(Name="orderNo", EmitDefaultValue=false)]
        public decimal? OrderNo { get; set; }

        /// <summary>
        /// Gets or Sets FinanceSystemOrderNo
        /// </summary>
        [DataMember(Name="financeSystemOrderNo", EmitDefaultValue=false)]
        public string FinanceSystemOrderNo { get; set; }

        /// <summary>
        /// Gets or Sets FinanceSystemOrderId
        /// </summary>
        [DataMember(Name="financeSystemOrderId", EmitDefaultValue=false)]
        public string FinanceSystemOrderId { get; set; }

        /// <summary>
        /// Gets or Sets AsnId
        /// </summary>
        [DataMember(Name="asnId", EmitDefaultValue=false)]
        public int? AsnId { get; set; }

        /// <summary>
        /// Gets or Sets FinanceSystemPONo
        /// </summary>
        [DataMember(Name="financeSystemPONo", EmitDefaultValue=false)]
        public string FinanceSystemPONo { get; set; }

        /// <summary>
        /// Gets or Sets FinanceSystemPOId
        /// </summary>
        [DataMember(Name="financeSystemPOId", EmitDefaultValue=false)]
        public string FinanceSystemPOId { get; set; }

        /// <summary>
        /// Gets or Sets ItemReceiptIdId
        /// </summary>
        [DataMember(Name="itemReceiptIdId", EmitDefaultValue=false)]
        public int? ItemReceiptIdId { get; set; }

        /// <summary>
        /// Gets or Sets AdjustmentIdId
        /// </summary>
        [DataMember(Name="adjustmentIdId", EmitDefaultValue=false)]
        public int? AdjustmentIdId { get; set; }

        /// <summary>
        /// Gets or Sets JobIdId
        /// </summary>
        [DataMember(Name="jobIdId", EmitDefaultValue=false)]
        public int? JobIdId { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name="customFields", EmitDefaultValue=false)]
        public Dictionary<string, Object> CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FinanceSystemConnectionLog {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  FinanceSystemConnectionId: ").Append(FinanceSystemConnectionId).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Notes: ").Append(Notes).Append("\n");
            sb.Append("  OrderNo: ").Append(OrderNo).Append("\n");
            sb.Append("  FinanceSystemOrderNo: ").Append(FinanceSystemOrderNo).Append("\n");
            sb.Append("  FinanceSystemOrderId: ").Append(FinanceSystemOrderId).Append("\n");
            sb.Append("  AsnId: ").Append(AsnId).Append("\n");
            sb.Append("  FinanceSystemPONo: ").Append(FinanceSystemPONo).Append("\n");
            sb.Append("  FinanceSystemPOId: ").Append(FinanceSystemPOId).Append("\n");
            sb.Append("  ItemReceiptIdId: ").Append(ItemReceiptIdId).Append("\n");
            sb.Append("  AdjustmentIdId: ").Append(AdjustmentIdId).Append("\n");
            sb.Append("  JobIdId: ").Append(JobIdId).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FinanceSystemConnectionLog);
        }

        /// <summary>
        /// Returns true if FinanceSystemConnectionLog instances are equal
        /// </summary>
        /// <param name="input">Instance of FinanceSystemConnectionLog to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FinanceSystemConnectionLog input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.CreateDate == input.CreateDate ||
                    (this.CreateDate != null &&
                    this.CreateDate.Equals(input.CreateDate))
                ) && 
                (
                    this.FinanceSystemConnectionId == input.FinanceSystemConnectionId ||
                    (this.FinanceSystemConnectionId != null &&
                    this.FinanceSystemConnectionId.Equals(input.FinanceSystemConnectionId))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.Notes == input.Notes ||
                    (this.Notes != null &&
                    this.Notes.Equals(input.Notes))
                ) && 
                (
                    this.OrderNo == input.OrderNo ||
                    (this.OrderNo != null &&
                    this.OrderNo.Equals(input.OrderNo))
                ) && 
                (
                    this.FinanceSystemOrderNo == input.FinanceSystemOrderNo ||
                    (this.FinanceSystemOrderNo != null &&
                    this.FinanceSystemOrderNo.Equals(input.FinanceSystemOrderNo))
                ) && 
                (
                    this.FinanceSystemOrderId == input.FinanceSystemOrderId ||
                    (this.FinanceSystemOrderId != null &&
                    this.FinanceSystemOrderId.Equals(input.FinanceSystemOrderId))
                ) && 
                (
                    this.AsnId == input.AsnId ||
                    (this.AsnId != null &&
                    this.AsnId.Equals(input.AsnId))
                ) && 
                (
                    this.FinanceSystemPONo == input.FinanceSystemPONo ||
                    (this.FinanceSystemPONo != null &&
                    this.FinanceSystemPONo.Equals(input.FinanceSystemPONo))
                ) && 
                (
                    this.FinanceSystemPOId == input.FinanceSystemPOId ||
                    (this.FinanceSystemPOId != null &&
                    this.FinanceSystemPOId.Equals(input.FinanceSystemPOId))
                ) && 
                (
                    this.ItemReceiptIdId == input.ItemReceiptIdId ||
                    (this.ItemReceiptIdId != null &&
                    this.ItemReceiptIdId.Equals(input.ItemReceiptIdId))
                ) && 
                (
                    this.AdjustmentIdId == input.AdjustmentIdId ||
                    (this.AdjustmentIdId != null &&
                    this.AdjustmentIdId.Equals(input.AdjustmentIdId))
                ) && 
                (
                    this.JobIdId == input.JobIdId ||
                    (this.JobIdId != null &&
                    this.JobIdId.Equals(input.JobIdId))
                ) && 
                (
                    this.CustomFields == input.CustomFields ||
                    this.CustomFields != null &&
                    this.CustomFields.SequenceEqual(input.CustomFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.CreateDate != null)
                    hashCode = hashCode * 59 + this.CreateDate.GetHashCode();
                if (this.FinanceSystemConnectionId != null)
                    hashCode = hashCode * 59 + this.FinanceSystemConnectionId.GetHashCode();
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.Notes != null)
                    hashCode = hashCode * 59 + this.Notes.GetHashCode();
                if (this.OrderNo != null)
                    hashCode = hashCode * 59 + this.OrderNo.GetHashCode();
                if (this.FinanceSystemOrderNo != null)
                    hashCode = hashCode * 59 + this.FinanceSystemOrderNo.GetHashCode();
                if (this.FinanceSystemOrderId != null)
                    hashCode = hashCode * 59 + this.FinanceSystemOrderId.GetHashCode();
                if (this.AsnId != null)
                    hashCode = hashCode * 59 + this.AsnId.GetHashCode();
                if (this.FinanceSystemPONo != null)
                    hashCode = hashCode * 59 + this.FinanceSystemPONo.GetHashCode();
                if (this.FinanceSystemPOId != null)
                    hashCode = hashCode * 59 + this.FinanceSystemPOId.GetHashCode();
                if (this.ItemReceiptIdId != null)
                    hashCode = hashCode * 59 + this.ItemReceiptIdId.GetHashCode();
                if (this.AdjustmentIdId != null)
                    hashCode = hashCode * 59 + this.AdjustmentIdId.GetHashCode();
                if (this.JobIdId != null)
                    hashCode = hashCode * 59 + this.JobIdId.GetHashCode();
                if (this.CustomFields != null)
                    hashCode = hashCode * 59 + this.CustomFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
