/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Infoplus.Client.SwaggerDateConverter;

namespace Infoplus.Model
{
    /// <summary>
    /// Gs1128Template
    /// </summary>
    [DataContract]
    public partial class Gs1128Template :  IEquatable<Gs1128Template>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Gs1128Template" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Gs1128Template() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Gs1128Template" /> class.
        /// </summary>
        /// <param name="Name">Name (required).</param>
        /// <param name="TemplateWidthIn">TemplateWidthIn (required).</param>
        /// <param name="TemplateHeightIn">TemplateHeightIn (required).</param>
        /// <param name="ScriptId">ScriptId.</param>
        /// <param name="ApiVersion">ApiVersion (required).</param>
        /// <param name="Row1Active">Row1Active (required) (default to false).</param>
        /// <param name="Row1RightColumnActive">Row1RightColumnActive (required) (default to false).</param>
        /// <param name="Row1Height">Row1Height.</param>
        /// <param name="Row1Width">Row1Width.</param>
        /// <param name="Row1ContentLeft">Row1ContentLeft.</param>
        /// <param name="Row1ContentRight">Row1ContentRight.</param>
        /// <param name="Row2Active">Row2Active (required) (default to false).</param>
        /// <param name="Row2RightColumnActive">Row2RightColumnActive (required) (default to false).</param>
        /// <param name="Row2Height">Row2Height.</param>
        /// <param name="Row2Width">Row2Width.</param>
        /// <param name="Row2ContentLeft">Row2ContentLeft.</param>
        /// <param name="Row2ContentRight">Row2ContentRight.</param>
        /// <param name="Row3Active">Row3Active (required) (default to false).</param>
        /// <param name="Row3RightColumnActive">Row3RightColumnActive (required) (default to false).</param>
        /// <param name="Row3Height">Row3Height.</param>
        /// <param name="Row3Width">Row3Width.</param>
        /// <param name="Row3ContentLeft">Row3ContentLeft.</param>
        /// <param name="Row3ContentRight">Row3ContentRight.</param>
        /// <param name="Row4Active">Row4Active (required) (default to false).</param>
        /// <param name="Row4RightColumnActive">Row4RightColumnActive (required) (default to false).</param>
        /// <param name="Row4Height">Row4Height.</param>
        /// <param name="Row4Width">Row4Width.</param>
        /// <param name="Row4ContentLeft">Row4ContentLeft.</param>
        /// <param name="Row4ContentRight">Row4ContentRight.</param>
        /// <param name="Row5Active">Row5Active (required) (default to false).</param>
        /// <param name="Row5RightColumnActive">Row5RightColumnActive (required) (default to false).</param>
        /// <param name="Row5Height">Row5Height.</param>
        /// <param name="Row5Width">Row5Width.</param>
        /// <param name="Row5ContentLeft">Row5ContentLeft.</param>
        /// <param name="Row5ContentRight">Row5ContentRight.</param>
        /// <param name="Row6Active">Row6Active (required) (default to false).</param>
        /// <param name="Row6RightColumnActive">Row6RightColumnActive (required) (default to false).</param>
        /// <param name="Row6Height">Row6Height.</param>
        /// <param name="Row6Width">Row6Width.</param>
        /// <param name="Row6ContentLeft">Row6ContentLeft.</param>
        /// <param name="Row6ContentRight">Row6ContentRight.</param>
        /// <param name="Row7Active">Row7Active (required) (default to false).</param>
        /// <param name="Row7RightColumnActive">Row7RightColumnActive (required) (default to false).</param>
        /// <param name="Row7Height">Row7Height.</param>
        /// <param name="Row7Width">Row7Width.</param>
        /// <param name="Row7ContentLeft">Row7ContentLeft.</param>
        /// <param name="Row7ContentRight">Row7ContentRight.</param>
        /// <param name="Row8Active">Row8Active (required) (default to false).</param>
        /// <param name="Row8RightColumnActive">Row8RightColumnActive (required) (default to false).</param>
        /// <param name="Row8Height">Row8Height.</param>
        /// <param name="Row8Width">Row8Width.</param>
        /// <param name="Row8ContentLeft">Row8ContentLeft.</param>
        /// <param name="Row8ContentRight">Row8ContentRight.</param>
        /// <param name="Row9Active">Row9Active (required) (default to false).</param>
        /// <param name="Row9RightColumnActive">Row9RightColumnActive (required) (default to false).</param>
        /// <param name="Row9Height">Row9Height.</param>
        /// <param name="Row9Width">Row9Width.</param>
        /// <param name="Row9ContentLeft">Row9ContentLeft.</param>
        /// <param name="Row9ContentRight">Row9ContentRight.</param>
        /// <param name="Row10Active">Row10Active (required) (default to false).</param>
        /// <param name="Row10RightColumnActive">Row10RightColumnActive (required) (default to false).</param>
        /// <param name="Row10Height">Row10Height.</param>
        /// <param name="Row10Width">Row10Width.</param>
        /// <param name="Row10ContentLeft">Row10ContentLeft.</param>
        /// <param name="Row10ContentRight">Row10ContentRight.</param>
        /// <param name="CustomFields">CustomFields.</param>
        public Gs1128Template(string Name = default(string), decimal? TemplateWidthIn = default(decimal?), decimal? TemplateHeightIn = default(decimal?), int? ScriptId = default(int?), string ApiVersion = default(string), bool? Row1Active = false, bool? Row1RightColumnActive = false, decimal? Row1Height = default(decimal?), decimal? Row1Width = default(decimal?), string Row1ContentLeft = default(string), string Row1ContentRight = default(string), bool? Row2Active = false, bool? Row2RightColumnActive = false, decimal? Row2Height = default(decimal?), decimal? Row2Width = default(decimal?), string Row2ContentLeft = default(string), string Row2ContentRight = default(string), bool? Row3Active = false, bool? Row3RightColumnActive = false, decimal? Row3Height = default(decimal?), decimal? Row3Width = default(decimal?), string Row3ContentLeft = default(string), string Row3ContentRight = default(string), bool? Row4Active = false, bool? Row4RightColumnActive = false, decimal? Row4Height = default(decimal?), decimal? Row4Width = default(decimal?), string Row4ContentLeft = default(string), string Row4ContentRight = default(string), bool? Row5Active = false, bool? Row5RightColumnActive = false, decimal? Row5Height = default(decimal?), decimal? Row5Width = default(decimal?), string Row5ContentLeft = default(string), string Row5ContentRight = default(string), bool? Row6Active = false, bool? Row6RightColumnActive = false, decimal? Row6Height = default(decimal?), decimal? Row6Width = default(decimal?), string Row6ContentLeft = default(string), string Row6ContentRight = default(string), bool? Row7Active = false, bool? Row7RightColumnActive = false, decimal? Row7Height = default(decimal?), decimal? Row7Width = default(decimal?), string Row7ContentLeft = default(string), string Row7ContentRight = default(string), bool? Row8Active = false, bool? Row8RightColumnActive = false, decimal? Row8Height = default(decimal?), decimal? Row8Width = default(decimal?), string Row8ContentLeft = default(string), string Row8ContentRight = default(string), bool? Row9Active = false, bool? Row9RightColumnActive = false, decimal? Row9Height = default(decimal?), decimal? Row9Width = default(decimal?), string Row9ContentLeft = default(string), string Row9ContentRight = default(string), bool? Row10Active = false, bool? Row10RightColumnActive = false, decimal? Row10Height = default(decimal?), decimal? Row10Width = default(decimal?), string Row10ContentLeft = default(string), string Row10ContentRight = default(string), Dictionary<string, Object> CustomFields = default(Dictionary<string, Object>))
        {
            // to ensure "Name" is required (not null)
            if (Name == null)
            {
                throw new InvalidDataException("Name is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Name = Name;
            }
            // to ensure "TemplateWidthIn" is required (not null)
            if (TemplateWidthIn == null)
            {
                throw new InvalidDataException("TemplateWidthIn is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.TemplateWidthIn = TemplateWidthIn;
            }
            // to ensure "TemplateHeightIn" is required (not null)
            if (TemplateHeightIn == null)
            {
                throw new InvalidDataException("TemplateHeightIn is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.TemplateHeightIn = TemplateHeightIn;
            }
            // to ensure "ApiVersion" is required (not null)
            if (ApiVersion == null)
            {
                throw new InvalidDataException("ApiVersion is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.ApiVersion = ApiVersion;
            }
            // to ensure "Row1Active" is required (not null)
            if (Row1Active == null)
            {
                throw new InvalidDataException("Row1Active is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row1Active = Row1Active;
            }
            // to ensure "Row1RightColumnActive" is required (not null)
            if (Row1RightColumnActive == null)
            {
                throw new InvalidDataException("Row1RightColumnActive is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row1RightColumnActive = Row1RightColumnActive;
            }
            // to ensure "Row2Active" is required (not null)
            if (Row2Active == null)
            {
                throw new InvalidDataException("Row2Active is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row2Active = Row2Active;
            }
            // to ensure "Row2RightColumnActive" is required (not null)
            if (Row2RightColumnActive == null)
            {
                throw new InvalidDataException("Row2RightColumnActive is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row2RightColumnActive = Row2RightColumnActive;
            }
            // to ensure "Row3Active" is required (not null)
            if (Row3Active == null)
            {
                throw new InvalidDataException("Row3Active is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row3Active = Row3Active;
            }
            // to ensure "Row3RightColumnActive" is required (not null)
            if (Row3RightColumnActive == null)
            {
                throw new InvalidDataException("Row3RightColumnActive is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row3RightColumnActive = Row3RightColumnActive;
            }
            // to ensure "Row4Active" is required (not null)
            if (Row4Active == null)
            {
                throw new InvalidDataException("Row4Active is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row4Active = Row4Active;
            }
            // to ensure "Row4RightColumnActive" is required (not null)
            if (Row4RightColumnActive == null)
            {
                throw new InvalidDataException("Row4RightColumnActive is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row4RightColumnActive = Row4RightColumnActive;
            }
            // to ensure "Row5Active" is required (not null)
            if (Row5Active == null)
            {
                throw new InvalidDataException("Row5Active is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row5Active = Row5Active;
            }
            // to ensure "Row5RightColumnActive" is required (not null)
            if (Row5RightColumnActive == null)
            {
                throw new InvalidDataException("Row5RightColumnActive is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row5RightColumnActive = Row5RightColumnActive;
            }
            // to ensure "Row6Active" is required (not null)
            if (Row6Active == null)
            {
                throw new InvalidDataException("Row6Active is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row6Active = Row6Active;
            }
            // to ensure "Row6RightColumnActive" is required (not null)
            if (Row6RightColumnActive == null)
            {
                throw new InvalidDataException("Row6RightColumnActive is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row6RightColumnActive = Row6RightColumnActive;
            }
            // to ensure "Row7Active" is required (not null)
            if (Row7Active == null)
            {
                throw new InvalidDataException("Row7Active is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row7Active = Row7Active;
            }
            // to ensure "Row7RightColumnActive" is required (not null)
            if (Row7RightColumnActive == null)
            {
                throw new InvalidDataException("Row7RightColumnActive is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row7RightColumnActive = Row7RightColumnActive;
            }
            // to ensure "Row8Active" is required (not null)
            if (Row8Active == null)
            {
                throw new InvalidDataException("Row8Active is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row8Active = Row8Active;
            }
            // to ensure "Row8RightColumnActive" is required (not null)
            if (Row8RightColumnActive == null)
            {
                throw new InvalidDataException("Row8RightColumnActive is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row8RightColumnActive = Row8RightColumnActive;
            }
            // to ensure "Row9Active" is required (not null)
            if (Row9Active == null)
            {
                throw new InvalidDataException("Row9Active is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row9Active = Row9Active;
            }
            // to ensure "Row9RightColumnActive" is required (not null)
            if (Row9RightColumnActive == null)
            {
                throw new InvalidDataException("Row9RightColumnActive is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row9RightColumnActive = Row9RightColumnActive;
            }
            // to ensure "Row10Active" is required (not null)
            if (Row10Active == null)
            {
                throw new InvalidDataException("Row10Active is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row10Active = Row10Active;
            }
            // to ensure "Row10RightColumnActive" is required (not null)
            if (Row10RightColumnActive == null)
            {
                throw new InvalidDataException("Row10RightColumnActive is a required property for Gs1128Template and cannot be null");
            }
            else
            {
                this.Row10RightColumnActive = Row10RightColumnActive;
            }
            this.ScriptId = ScriptId;
            this.Row1Height = Row1Height;
            this.Row1Width = Row1Width;
            this.Row1ContentLeft = Row1ContentLeft;
            this.Row1ContentRight = Row1ContentRight;
            this.Row2Height = Row2Height;
            this.Row2Width = Row2Width;
            this.Row2ContentLeft = Row2ContentLeft;
            this.Row2ContentRight = Row2ContentRight;
            this.Row3Height = Row3Height;
            this.Row3Width = Row3Width;
            this.Row3ContentLeft = Row3ContentLeft;
            this.Row3ContentRight = Row3ContentRight;
            this.Row4Height = Row4Height;
            this.Row4Width = Row4Width;
            this.Row4ContentLeft = Row4ContentLeft;
            this.Row4ContentRight = Row4ContentRight;
            this.Row5Height = Row5Height;
            this.Row5Width = Row5Width;
            this.Row5ContentLeft = Row5ContentLeft;
            this.Row5ContentRight = Row5ContentRight;
            this.Row6Height = Row6Height;
            this.Row6Width = Row6Width;
            this.Row6ContentLeft = Row6ContentLeft;
            this.Row6ContentRight = Row6ContentRight;
            this.Row7Height = Row7Height;
            this.Row7Width = Row7Width;
            this.Row7ContentLeft = Row7ContentLeft;
            this.Row7ContentRight = Row7ContentRight;
            this.Row8Height = Row8Height;
            this.Row8Width = Row8Width;
            this.Row8ContentLeft = Row8ContentLeft;
            this.Row8ContentRight = Row8ContentRight;
            this.Row9Height = Row9Height;
            this.Row9Width = Row9Width;
            this.Row9ContentLeft = Row9ContentLeft;
            this.Row9ContentRight = Row9ContentRight;
            this.Row10Height = Row10Height;
            this.Row10Width = Row10Width;
            this.Row10ContentLeft = Row10ContentLeft;
            this.Row10ContentRight = Row10ContentRight;
            this.CustomFields = CustomFields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; private set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets TemplateWidthIn
        /// </summary>
        [DataMember(Name="templateWidthIn", EmitDefaultValue=false)]
        public decimal? TemplateWidthIn { get; set; }

        /// <summary>
        /// Gets or Sets TemplateHeightIn
        /// </summary>
        [DataMember(Name="templateHeightIn", EmitDefaultValue=false)]
        public decimal? TemplateHeightIn { get; set; }

        /// <summary>
        /// Gets or Sets ScriptId
        /// </summary>
        [DataMember(Name="scriptId", EmitDefaultValue=false)]
        public int? ScriptId { get; set; }

        /// <summary>
        /// Gets or Sets ApiVersion
        /// </summary>
        [DataMember(Name="apiVersion", EmitDefaultValue=false)]
        public string ApiVersion { get; set; }

        /// <summary>
        /// Gets or Sets Row1Active
        /// </summary>
        [DataMember(Name="row1Active", EmitDefaultValue=false)]
        public bool? Row1Active { get; set; }

        /// <summary>
        /// Gets or Sets Row1RightColumnActive
        /// </summary>
        [DataMember(Name="row1RightColumnActive", EmitDefaultValue=false)]
        public bool? Row1RightColumnActive { get; set; }

        /// <summary>
        /// Gets or Sets Row1Height
        /// </summary>
        [DataMember(Name="row1Height", EmitDefaultValue=false)]
        public decimal? Row1Height { get; set; }

        /// <summary>
        /// Gets or Sets Row1Width
        /// </summary>
        [DataMember(Name="row1Width", EmitDefaultValue=false)]
        public decimal? Row1Width { get; set; }

        /// <summary>
        /// Gets or Sets Row1ContentLeft
        /// </summary>
        [DataMember(Name="row1ContentLeft", EmitDefaultValue=false)]
        public string Row1ContentLeft { get; set; }

        /// <summary>
        /// Gets or Sets Row1ContentRight
        /// </summary>
        [DataMember(Name="row1ContentRight", EmitDefaultValue=false)]
        public string Row1ContentRight { get; set; }

        /// <summary>
        /// Gets or Sets Row2Active
        /// </summary>
        [DataMember(Name="row2Active", EmitDefaultValue=false)]
        public bool? Row2Active { get; set; }

        /// <summary>
        /// Gets or Sets Row2RightColumnActive
        /// </summary>
        [DataMember(Name="row2RightColumnActive", EmitDefaultValue=false)]
        public bool? Row2RightColumnActive { get; set; }

        /// <summary>
        /// Gets or Sets Row2Height
        /// </summary>
        [DataMember(Name="row2Height", EmitDefaultValue=false)]
        public decimal? Row2Height { get; set; }

        /// <summary>
        /// Gets or Sets Row2Width
        /// </summary>
        [DataMember(Name="row2Width", EmitDefaultValue=false)]
        public decimal? Row2Width { get; set; }

        /// <summary>
        /// Gets or Sets Row2ContentLeft
        /// </summary>
        [DataMember(Name="row2ContentLeft", EmitDefaultValue=false)]
        public string Row2ContentLeft { get; set; }

        /// <summary>
        /// Gets or Sets Row2ContentRight
        /// </summary>
        [DataMember(Name="row2ContentRight", EmitDefaultValue=false)]
        public string Row2ContentRight { get; set; }

        /// <summary>
        /// Gets or Sets Row3Active
        /// </summary>
        [DataMember(Name="row3Active", EmitDefaultValue=false)]
        public bool? Row3Active { get; set; }

        /// <summary>
        /// Gets or Sets Row3RightColumnActive
        /// </summary>
        [DataMember(Name="row3RightColumnActive", EmitDefaultValue=false)]
        public bool? Row3RightColumnActive { get; set; }

        /// <summary>
        /// Gets or Sets Row3Height
        /// </summary>
        [DataMember(Name="row3Height", EmitDefaultValue=false)]
        public decimal? Row3Height { get; set; }

        /// <summary>
        /// Gets or Sets Row3Width
        /// </summary>
        [DataMember(Name="row3Width", EmitDefaultValue=false)]
        public decimal? Row3Width { get; set; }

        /// <summary>
        /// Gets or Sets Row3ContentLeft
        /// </summary>
        [DataMember(Name="row3ContentLeft", EmitDefaultValue=false)]
        public string Row3ContentLeft { get; set; }

        /// <summary>
        /// Gets or Sets Row3ContentRight
        /// </summary>
        [DataMember(Name="row3ContentRight", EmitDefaultValue=false)]
        public string Row3ContentRight { get; set; }

        /// <summary>
        /// Gets or Sets Row4Active
        /// </summary>
        [DataMember(Name="row4Active", EmitDefaultValue=false)]
        public bool? Row4Active { get; set; }

        /// <summary>
        /// Gets or Sets Row4RightColumnActive
        /// </summary>
        [DataMember(Name="row4RightColumnActive", EmitDefaultValue=false)]
        public bool? Row4RightColumnActive { get; set; }

        /// <summary>
        /// Gets or Sets Row4Height
        /// </summary>
        [DataMember(Name="row4Height", EmitDefaultValue=false)]
        public decimal? Row4Height { get; set; }

        /// <summary>
        /// Gets or Sets Row4Width
        /// </summary>
        [DataMember(Name="row4Width", EmitDefaultValue=false)]
        public decimal? Row4Width { get; set; }

        /// <summary>
        /// Gets or Sets Row4ContentLeft
        /// </summary>
        [DataMember(Name="row4ContentLeft", EmitDefaultValue=false)]
        public string Row4ContentLeft { get; set; }

        /// <summary>
        /// Gets or Sets Row4ContentRight
        /// </summary>
        [DataMember(Name="row4ContentRight", EmitDefaultValue=false)]
        public string Row4ContentRight { get; set; }

        /// <summary>
        /// Gets or Sets Row5Active
        /// </summary>
        [DataMember(Name="row5Active", EmitDefaultValue=false)]
        public bool? Row5Active { get; set; }

        /// <summary>
        /// Gets or Sets Row5RightColumnActive
        /// </summary>
        [DataMember(Name="row5RightColumnActive", EmitDefaultValue=false)]
        public bool? Row5RightColumnActive { get; set; }

        /// <summary>
        /// Gets or Sets Row5Height
        /// </summary>
        [DataMember(Name="row5Height", EmitDefaultValue=false)]
        public decimal? Row5Height { get; set; }

        /// <summary>
        /// Gets or Sets Row5Width
        /// </summary>
        [DataMember(Name="row5Width", EmitDefaultValue=false)]
        public decimal? Row5Width { get; set; }

        /// <summary>
        /// Gets or Sets Row5ContentLeft
        /// </summary>
        [DataMember(Name="row5ContentLeft", EmitDefaultValue=false)]
        public string Row5ContentLeft { get; set; }

        /// <summary>
        /// Gets or Sets Row5ContentRight
        /// </summary>
        [DataMember(Name="row5ContentRight", EmitDefaultValue=false)]
        public string Row5ContentRight { get; set; }

        /// <summary>
        /// Gets or Sets Row6Active
        /// </summary>
        [DataMember(Name="row6Active", EmitDefaultValue=false)]
        public bool? Row6Active { get; set; }

        /// <summary>
        /// Gets or Sets Row6RightColumnActive
        /// </summary>
        [DataMember(Name="row6RightColumnActive", EmitDefaultValue=false)]
        public bool? Row6RightColumnActive { get; set; }

        /// <summary>
        /// Gets or Sets Row6Height
        /// </summary>
        [DataMember(Name="row6Height", EmitDefaultValue=false)]
        public decimal? Row6Height { get; set; }

        /// <summary>
        /// Gets or Sets Row6Width
        /// </summary>
        [DataMember(Name="row6Width", EmitDefaultValue=false)]
        public decimal? Row6Width { get; set; }

        /// <summary>
        /// Gets or Sets Row6ContentLeft
        /// </summary>
        [DataMember(Name="row6ContentLeft", EmitDefaultValue=false)]
        public string Row6ContentLeft { get; set; }

        /// <summary>
        /// Gets or Sets Row6ContentRight
        /// </summary>
        [DataMember(Name="row6ContentRight", EmitDefaultValue=false)]
        public string Row6ContentRight { get; set; }

        /// <summary>
        /// Gets or Sets Row7Active
        /// </summary>
        [DataMember(Name="row7Active", EmitDefaultValue=false)]
        public bool? Row7Active { get; set; }

        /// <summary>
        /// Gets or Sets Row7RightColumnActive
        /// </summary>
        [DataMember(Name="row7RightColumnActive", EmitDefaultValue=false)]
        public bool? Row7RightColumnActive { get; set; }

        /// <summary>
        /// Gets or Sets Row7Height
        /// </summary>
        [DataMember(Name="row7Height", EmitDefaultValue=false)]
        public decimal? Row7Height { get; set; }

        /// <summary>
        /// Gets or Sets Row7Width
        /// </summary>
        [DataMember(Name="row7Width", EmitDefaultValue=false)]
        public decimal? Row7Width { get; set; }

        /// <summary>
        /// Gets or Sets Row7ContentLeft
        /// </summary>
        [DataMember(Name="row7ContentLeft", EmitDefaultValue=false)]
        public string Row7ContentLeft { get; set; }

        /// <summary>
        /// Gets or Sets Row7ContentRight
        /// </summary>
        [DataMember(Name="row7ContentRight", EmitDefaultValue=false)]
        public string Row7ContentRight { get; set; }

        /// <summary>
        /// Gets or Sets Row8Active
        /// </summary>
        [DataMember(Name="row8Active", EmitDefaultValue=false)]
        public bool? Row8Active { get; set; }

        /// <summary>
        /// Gets or Sets Row8RightColumnActive
        /// </summary>
        [DataMember(Name="row8RightColumnActive", EmitDefaultValue=false)]
        public bool? Row8RightColumnActive { get; set; }

        /// <summary>
        /// Gets or Sets Row8Height
        /// </summary>
        [DataMember(Name="row8Height", EmitDefaultValue=false)]
        public decimal? Row8Height { get; set; }

        /// <summary>
        /// Gets or Sets Row8Width
        /// </summary>
        [DataMember(Name="row8Width", EmitDefaultValue=false)]
        public decimal? Row8Width { get; set; }

        /// <summary>
        /// Gets or Sets Row8ContentLeft
        /// </summary>
        [DataMember(Name="row8ContentLeft", EmitDefaultValue=false)]
        public string Row8ContentLeft { get; set; }

        /// <summary>
        /// Gets or Sets Row8ContentRight
        /// </summary>
        [DataMember(Name="row8ContentRight", EmitDefaultValue=false)]
        public string Row8ContentRight { get; set; }

        /// <summary>
        /// Gets or Sets Row9Active
        /// </summary>
        [DataMember(Name="row9Active", EmitDefaultValue=false)]
        public bool? Row9Active { get; set; }

        /// <summary>
        /// Gets or Sets Row9RightColumnActive
        /// </summary>
        [DataMember(Name="row9RightColumnActive", EmitDefaultValue=false)]
        public bool? Row9RightColumnActive { get; set; }

        /// <summary>
        /// Gets or Sets Row9Height
        /// </summary>
        [DataMember(Name="row9Height", EmitDefaultValue=false)]
        public decimal? Row9Height { get; set; }

        /// <summary>
        /// Gets or Sets Row9Width
        /// </summary>
        [DataMember(Name="row9Width", EmitDefaultValue=false)]
        public decimal? Row9Width { get; set; }

        /// <summary>
        /// Gets or Sets Row9ContentLeft
        /// </summary>
        [DataMember(Name="row9ContentLeft", EmitDefaultValue=false)]
        public string Row9ContentLeft { get; set; }

        /// <summary>
        /// Gets or Sets Row9ContentRight
        /// </summary>
        [DataMember(Name="row9ContentRight", EmitDefaultValue=false)]
        public string Row9ContentRight { get; set; }

        /// <summary>
        /// Gets or Sets Row10Active
        /// </summary>
        [DataMember(Name="row10Active", EmitDefaultValue=false)]
        public bool? Row10Active { get; set; }

        /// <summary>
        /// Gets or Sets Row10RightColumnActive
        /// </summary>
        [DataMember(Name="row10RightColumnActive", EmitDefaultValue=false)]
        public bool? Row10RightColumnActive { get; set; }

        /// <summary>
        /// Gets or Sets Row10Height
        /// </summary>
        [DataMember(Name="row10Height", EmitDefaultValue=false)]
        public decimal? Row10Height { get; set; }

        /// <summary>
        /// Gets or Sets Row10Width
        /// </summary>
        [DataMember(Name="row10Width", EmitDefaultValue=false)]
        public decimal? Row10Width { get; set; }

        /// <summary>
        /// Gets or Sets Row10ContentLeft
        /// </summary>
        [DataMember(Name="row10ContentLeft", EmitDefaultValue=false)]
        public string Row10ContentLeft { get; set; }

        /// <summary>
        /// Gets or Sets Row10ContentRight
        /// </summary>
        [DataMember(Name="row10ContentRight", EmitDefaultValue=false)]
        public string Row10ContentRight { get; set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name="createDate", EmitDefaultValue=false)]
        public DateTime? CreateDate { get; private set; }

        /// <summary>
        /// Gets or Sets ModifyDate
        /// </summary>
        [DataMember(Name="modifyDate", EmitDefaultValue=false)]
        public DateTime? ModifyDate { get; private set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name="customFields", EmitDefaultValue=false)]
        public Dictionary<string, Object> CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Gs1128Template {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  TemplateWidthIn: ").Append(TemplateWidthIn).Append("\n");
            sb.Append("  TemplateHeightIn: ").Append(TemplateHeightIn).Append("\n");
            sb.Append("  ScriptId: ").Append(ScriptId).Append("\n");
            sb.Append("  ApiVersion: ").Append(ApiVersion).Append("\n");
            sb.Append("  Row1Active: ").Append(Row1Active).Append("\n");
            sb.Append("  Row1RightColumnActive: ").Append(Row1RightColumnActive).Append("\n");
            sb.Append("  Row1Height: ").Append(Row1Height).Append("\n");
            sb.Append("  Row1Width: ").Append(Row1Width).Append("\n");
            sb.Append("  Row1ContentLeft: ").Append(Row1ContentLeft).Append("\n");
            sb.Append("  Row1ContentRight: ").Append(Row1ContentRight).Append("\n");
            sb.Append("  Row2Active: ").Append(Row2Active).Append("\n");
            sb.Append("  Row2RightColumnActive: ").Append(Row2RightColumnActive).Append("\n");
            sb.Append("  Row2Height: ").Append(Row2Height).Append("\n");
            sb.Append("  Row2Width: ").Append(Row2Width).Append("\n");
            sb.Append("  Row2ContentLeft: ").Append(Row2ContentLeft).Append("\n");
            sb.Append("  Row2ContentRight: ").Append(Row2ContentRight).Append("\n");
            sb.Append("  Row3Active: ").Append(Row3Active).Append("\n");
            sb.Append("  Row3RightColumnActive: ").Append(Row3RightColumnActive).Append("\n");
            sb.Append("  Row3Height: ").Append(Row3Height).Append("\n");
            sb.Append("  Row3Width: ").Append(Row3Width).Append("\n");
            sb.Append("  Row3ContentLeft: ").Append(Row3ContentLeft).Append("\n");
            sb.Append("  Row3ContentRight: ").Append(Row3ContentRight).Append("\n");
            sb.Append("  Row4Active: ").Append(Row4Active).Append("\n");
            sb.Append("  Row4RightColumnActive: ").Append(Row4RightColumnActive).Append("\n");
            sb.Append("  Row4Height: ").Append(Row4Height).Append("\n");
            sb.Append("  Row4Width: ").Append(Row4Width).Append("\n");
            sb.Append("  Row4ContentLeft: ").Append(Row4ContentLeft).Append("\n");
            sb.Append("  Row4ContentRight: ").Append(Row4ContentRight).Append("\n");
            sb.Append("  Row5Active: ").Append(Row5Active).Append("\n");
            sb.Append("  Row5RightColumnActive: ").Append(Row5RightColumnActive).Append("\n");
            sb.Append("  Row5Height: ").Append(Row5Height).Append("\n");
            sb.Append("  Row5Width: ").Append(Row5Width).Append("\n");
            sb.Append("  Row5ContentLeft: ").Append(Row5ContentLeft).Append("\n");
            sb.Append("  Row5ContentRight: ").Append(Row5ContentRight).Append("\n");
            sb.Append("  Row6Active: ").Append(Row6Active).Append("\n");
            sb.Append("  Row6RightColumnActive: ").Append(Row6RightColumnActive).Append("\n");
            sb.Append("  Row6Height: ").Append(Row6Height).Append("\n");
            sb.Append("  Row6Width: ").Append(Row6Width).Append("\n");
            sb.Append("  Row6ContentLeft: ").Append(Row6ContentLeft).Append("\n");
            sb.Append("  Row6ContentRight: ").Append(Row6ContentRight).Append("\n");
            sb.Append("  Row7Active: ").Append(Row7Active).Append("\n");
            sb.Append("  Row7RightColumnActive: ").Append(Row7RightColumnActive).Append("\n");
            sb.Append("  Row7Height: ").Append(Row7Height).Append("\n");
            sb.Append("  Row7Width: ").Append(Row7Width).Append("\n");
            sb.Append("  Row7ContentLeft: ").Append(Row7ContentLeft).Append("\n");
            sb.Append("  Row7ContentRight: ").Append(Row7ContentRight).Append("\n");
            sb.Append("  Row8Active: ").Append(Row8Active).Append("\n");
            sb.Append("  Row8RightColumnActive: ").Append(Row8RightColumnActive).Append("\n");
            sb.Append("  Row8Height: ").Append(Row8Height).Append("\n");
            sb.Append("  Row8Width: ").Append(Row8Width).Append("\n");
            sb.Append("  Row8ContentLeft: ").Append(Row8ContentLeft).Append("\n");
            sb.Append("  Row8ContentRight: ").Append(Row8ContentRight).Append("\n");
            sb.Append("  Row9Active: ").Append(Row9Active).Append("\n");
            sb.Append("  Row9RightColumnActive: ").Append(Row9RightColumnActive).Append("\n");
            sb.Append("  Row9Height: ").Append(Row9Height).Append("\n");
            sb.Append("  Row9Width: ").Append(Row9Width).Append("\n");
            sb.Append("  Row9ContentLeft: ").Append(Row9ContentLeft).Append("\n");
            sb.Append("  Row9ContentRight: ").Append(Row9ContentRight).Append("\n");
            sb.Append("  Row10Active: ").Append(Row10Active).Append("\n");
            sb.Append("  Row10RightColumnActive: ").Append(Row10RightColumnActive).Append("\n");
            sb.Append("  Row10Height: ").Append(Row10Height).Append("\n");
            sb.Append("  Row10Width: ").Append(Row10Width).Append("\n");
            sb.Append("  Row10ContentLeft: ").Append(Row10ContentLeft).Append("\n");
            sb.Append("  Row10ContentRight: ").Append(Row10ContentRight).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  ModifyDate: ").Append(ModifyDate).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Gs1128Template);
        }

        /// <summary>
        /// Returns true if Gs1128Template instances are equal
        /// </summary>
        /// <param name="input">Instance of Gs1128Template to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Gs1128Template input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.TemplateWidthIn == input.TemplateWidthIn ||
                    (this.TemplateWidthIn != null &&
                    this.TemplateWidthIn.Equals(input.TemplateWidthIn))
                ) && 
                (
                    this.TemplateHeightIn == input.TemplateHeightIn ||
                    (this.TemplateHeightIn != null &&
                    this.TemplateHeightIn.Equals(input.TemplateHeightIn))
                ) && 
                (
                    this.ScriptId == input.ScriptId ||
                    (this.ScriptId != null &&
                    this.ScriptId.Equals(input.ScriptId))
                ) && 
                (
                    this.ApiVersion == input.ApiVersion ||
                    (this.ApiVersion != null &&
                    this.ApiVersion.Equals(input.ApiVersion))
                ) && 
                (
                    this.Row1Active == input.Row1Active ||
                    (this.Row1Active != null &&
                    this.Row1Active.Equals(input.Row1Active))
                ) && 
                (
                    this.Row1RightColumnActive == input.Row1RightColumnActive ||
                    (this.Row1RightColumnActive != null &&
                    this.Row1RightColumnActive.Equals(input.Row1RightColumnActive))
                ) && 
                (
                    this.Row1Height == input.Row1Height ||
                    (this.Row1Height != null &&
                    this.Row1Height.Equals(input.Row1Height))
                ) && 
                (
                    this.Row1Width == input.Row1Width ||
                    (this.Row1Width != null &&
                    this.Row1Width.Equals(input.Row1Width))
                ) && 
                (
                    this.Row1ContentLeft == input.Row1ContentLeft ||
                    (this.Row1ContentLeft != null &&
                    this.Row1ContentLeft.Equals(input.Row1ContentLeft))
                ) && 
                (
                    this.Row1ContentRight == input.Row1ContentRight ||
                    (this.Row1ContentRight != null &&
                    this.Row1ContentRight.Equals(input.Row1ContentRight))
                ) && 
                (
                    this.Row2Active == input.Row2Active ||
                    (this.Row2Active != null &&
                    this.Row2Active.Equals(input.Row2Active))
                ) && 
                (
                    this.Row2RightColumnActive == input.Row2RightColumnActive ||
                    (this.Row2RightColumnActive != null &&
                    this.Row2RightColumnActive.Equals(input.Row2RightColumnActive))
                ) && 
                (
                    this.Row2Height == input.Row2Height ||
                    (this.Row2Height != null &&
                    this.Row2Height.Equals(input.Row2Height))
                ) && 
                (
                    this.Row2Width == input.Row2Width ||
                    (this.Row2Width != null &&
                    this.Row2Width.Equals(input.Row2Width))
                ) && 
                (
                    this.Row2ContentLeft == input.Row2ContentLeft ||
                    (this.Row2ContentLeft != null &&
                    this.Row2ContentLeft.Equals(input.Row2ContentLeft))
                ) && 
                (
                    this.Row2ContentRight == input.Row2ContentRight ||
                    (this.Row2ContentRight != null &&
                    this.Row2ContentRight.Equals(input.Row2ContentRight))
                ) && 
                (
                    this.Row3Active == input.Row3Active ||
                    (this.Row3Active != null &&
                    this.Row3Active.Equals(input.Row3Active))
                ) && 
                (
                    this.Row3RightColumnActive == input.Row3RightColumnActive ||
                    (this.Row3RightColumnActive != null &&
                    this.Row3RightColumnActive.Equals(input.Row3RightColumnActive))
                ) && 
                (
                    this.Row3Height == input.Row3Height ||
                    (this.Row3Height != null &&
                    this.Row3Height.Equals(input.Row3Height))
                ) && 
                (
                    this.Row3Width == input.Row3Width ||
                    (this.Row3Width != null &&
                    this.Row3Width.Equals(input.Row3Width))
                ) && 
                (
                    this.Row3ContentLeft == input.Row3ContentLeft ||
                    (this.Row3ContentLeft != null &&
                    this.Row3ContentLeft.Equals(input.Row3ContentLeft))
                ) && 
                (
                    this.Row3ContentRight == input.Row3ContentRight ||
                    (this.Row3ContentRight != null &&
                    this.Row3ContentRight.Equals(input.Row3ContentRight))
                ) && 
                (
                    this.Row4Active == input.Row4Active ||
                    (this.Row4Active != null &&
                    this.Row4Active.Equals(input.Row4Active))
                ) && 
                (
                    this.Row4RightColumnActive == input.Row4RightColumnActive ||
                    (this.Row4RightColumnActive != null &&
                    this.Row4RightColumnActive.Equals(input.Row4RightColumnActive))
                ) && 
                (
                    this.Row4Height == input.Row4Height ||
                    (this.Row4Height != null &&
                    this.Row4Height.Equals(input.Row4Height))
                ) && 
                (
                    this.Row4Width == input.Row4Width ||
                    (this.Row4Width != null &&
                    this.Row4Width.Equals(input.Row4Width))
                ) && 
                (
                    this.Row4ContentLeft == input.Row4ContentLeft ||
                    (this.Row4ContentLeft != null &&
                    this.Row4ContentLeft.Equals(input.Row4ContentLeft))
                ) && 
                (
                    this.Row4ContentRight == input.Row4ContentRight ||
                    (this.Row4ContentRight != null &&
                    this.Row4ContentRight.Equals(input.Row4ContentRight))
                ) && 
                (
                    this.Row5Active == input.Row5Active ||
                    (this.Row5Active != null &&
                    this.Row5Active.Equals(input.Row5Active))
                ) && 
                (
                    this.Row5RightColumnActive == input.Row5RightColumnActive ||
                    (this.Row5RightColumnActive != null &&
                    this.Row5RightColumnActive.Equals(input.Row5RightColumnActive))
                ) && 
                (
                    this.Row5Height == input.Row5Height ||
                    (this.Row5Height != null &&
                    this.Row5Height.Equals(input.Row5Height))
                ) && 
                (
                    this.Row5Width == input.Row5Width ||
                    (this.Row5Width != null &&
                    this.Row5Width.Equals(input.Row5Width))
                ) && 
                (
                    this.Row5ContentLeft == input.Row5ContentLeft ||
                    (this.Row5ContentLeft != null &&
                    this.Row5ContentLeft.Equals(input.Row5ContentLeft))
                ) && 
                (
                    this.Row5ContentRight == input.Row5ContentRight ||
                    (this.Row5ContentRight != null &&
                    this.Row5ContentRight.Equals(input.Row5ContentRight))
                ) && 
                (
                    this.Row6Active == input.Row6Active ||
                    (this.Row6Active != null &&
                    this.Row6Active.Equals(input.Row6Active))
                ) && 
                (
                    this.Row6RightColumnActive == input.Row6RightColumnActive ||
                    (this.Row6RightColumnActive != null &&
                    this.Row6RightColumnActive.Equals(input.Row6RightColumnActive))
                ) && 
                (
                    this.Row6Height == input.Row6Height ||
                    (this.Row6Height != null &&
                    this.Row6Height.Equals(input.Row6Height))
                ) && 
                (
                    this.Row6Width == input.Row6Width ||
                    (this.Row6Width != null &&
                    this.Row6Width.Equals(input.Row6Width))
                ) && 
                (
                    this.Row6ContentLeft == input.Row6ContentLeft ||
                    (this.Row6ContentLeft != null &&
                    this.Row6ContentLeft.Equals(input.Row6ContentLeft))
                ) && 
                (
                    this.Row6ContentRight == input.Row6ContentRight ||
                    (this.Row6ContentRight != null &&
                    this.Row6ContentRight.Equals(input.Row6ContentRight))
                ) && 
                (
                    this.Row7Active == input.Row7Active ||
                    (this.Row7Active != null &&
                    this.Row7Active.Equals(input.Row7Active))
                ) && 
                (
                    this.Row7RightColumnActive == input.Row7RightColumnActive ||
                    (this.Row7RightColumnActive != null &&
                    this.Row7RightColumnActive.Equals(input.Row7RightColumnActive))
                ) && 
                (
                    this.Row7Height == input.Row7Height ||
                    (this.Row7Height != null &&
                    this.Row7Height.Equals(input.Row7Height))
                ) && 
                (
                    this.Row7Width == input.Row7Width ||
                    (this.Row7Width != null &&
                    this.Row7Width.Equals(input.Row7Width))
                ) && 
                (
                    this.Row7ContentLeft == input.Row7ContentLeft ||
                    (this.Row7ContentLeft != null &&
                    this.Row7ContentLeft.Equals(input.Row7ContentLeft))
                ) && 
                (
                    this.Row7ContentRight == input.Row7ContentRight ||
                    (this.Row7ContentRight != null &&
                    this.Row7ContentRight.Equals(input.Row7ContentRight))
                ) && 
                (
                    this.Row8Active == input.Row8Active ||
                    (this.Row8Active != null &&
                    this.Row8Active.Equals(input.Row8Active))
                ) && 
                (
                    this.Row8RightColumnActive == input.Row8RightColumnActive ||
                    (this.Row8RightColumnActive != null &&
                    this.Row8RightColumnActive.Equals(input.Row8RightColumnActive))
                ) && 
                (
                    this.Row8Height == input.Row8Height ||
                    (this.Row8Height != null &&
                    this.Row8Height.Equals(input.Row8Height))
                ) && 
                (
                    this.Row8Width == input.Row8Width ||
                    (this.Row8Width != null &&
                    this.Row8Width.Equals(input.Row8Width))
                ) && 
                (
                    this.Row8ContentLeft == input.Row8ContentLeft ||
                    (this.Row8ContentLeft != null &&
                    this.Row8ContentLeft.Equals(input.Row8ContentLeft))
                ) && 
                (
                    this.Row8ContentRight == input.Row8ContentRight ||
                    (this.Row8ContentRight != null &&
                    this.Row8ContentRight.Equals(input.Row8ContentRight))
                ) && 
                (
                    this.Row9Active == input.Row9Active ||
                    (this.Row9Active != null &&
                    this.Row9Active.Equals(input.Row9Active))
                ) && 
                (
                    this.Row9RightColumnActive == input.Row9RightColumnActive ||
                    (this.Row9RightColumnActive != null &&
                    this.Row9RightColumnActive.Equals(input.Row9RightColumnActive))
                ) && 
                (
                    this.Row9Height == input.Row9Height ||
                    (this.Row9Height != null &&
                    this.Row9Height.Equals(input.Row9Height))
                ) && 
                (
                    this.Row9Width == input.Row9Width ||
                    (this.Row9Width != null &&
                    this.Row9Width.Equals(input.Row9Width))
                ) && 
                (
                    this.Row9ContentLeft == input.Row9ContentLeft ||
                    (this.Row9ContentLeft != null &&
                    this.Row9ContentLeft.Equals(input.Row9ContentLeft))
                ) && 
                (
                    this.Row9ContentRight == input.Row9ContentRight ||
                    (this.Row9ContentRight != null &&
                    this.Row9ContentRight.Equals(input.Row9ContentRight))
                ) && 
                (
                    this.Row10Active == input.Row10Active ||
                    (this.Row10Active != null &&
                    this.Row10Active.Equals(input.Row10Active))
                ) && 
                (
                    this.Row10RightColumnActive == input.Row10RightColumnActive ||
                    (this.Row10RightColumnActive != null &&
                    this.Row10RightColumnActive.Equals(input.Row10RightColumnActive))
                ) && 
                (
                    this.Row10Height == input.Row10Height ||
                    (this.Row10Height != null &&
                    this.Row10Height.Equals(input.Row10Height))
                ) && 
                (
                    this.Row10Width == input.Row10Width ||
                    (this.Row10Width != null &&
                    this.Row10Width.Equals(input.Row10Width))
                ) && 
                (
                    this.Row10ContentLeft == input.Row10ContentLeft ||
                    (this.Row10ContentLeft != null &&
                    this.Row10ContentLeft.Equals(input.Row10ContentLeft))
                ) && 
                (
                    this.Row10ContentRight == input.Row10ContentRight ||
                    (this.Row10ContentRight != null &&
                    this.Row10ContentRight.Equals(input.Row10ContentRight))
                ) && 
                (
                    this.CreateDate == input.CreateDate ||
                    (this.CreateDate != null &&
                    this.CreateDate.Equals(input.CreateDate))
                ) && 
                (
                    this.ModifyDate == input.ModifyDate ||
                    (this.ModifyDate != null &&
                    this.ModifyDate.Equals(input.ModifyDate))
                ) && 
                (
                    this.CustomFields == input.CustomFields ||
                    this.CustomFields != null &&
                    this.CustomFields.SequenceEqual(input.CustomFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.TemplateWidthIn != null)
                    hashCode = hashCode * 59 + this.TemplateWidthIn.GetHashCode();
                if (this.TemplateHeightIn != null)
                    hashCode = hashCode * 59 + this.TemplateHeightIn.GetHashCode();
                if (this.ScriptId != null)
                    hashCode = hashCode * 59 + this.ScriptId.GetHashCode();
                if (this.ApiVersion != null)
                    hashCode = hashCode * 59 + this.ApiVersion.GetHashCode();
                if (this.Row1Active != null)
                    hashCode = hashCode * 59 + this.Row1Active.GetHashCode();
                if (this.Row1RightColumnActive != null)
                    hashCode = hashCode * 59 + this.Row1RightColumnActive.GetHashCode();
                if (this.Row1Height != null)
                    hashCode = hashCode * 59 + this.Row1Height.GetHashCode();
                if (this.Row1Width != null)
                    hashCode = hashCode * 59 + this.Row1Width.GetHashCode();
                if (this.Row1ContentLeft != null)
                    hashCode = hashCode * 59 + this.Row1ContentLeft.GetHashCode();
                if (this.Row1ContentRight != null)
                    hashCode = hashCode * 59 + this.Row1ContentRight.GetHashCode();
                if (this.Row2Active != null)
                    hashCode = hashCode * 59 + this.Row2Active.GetHashCode();
                if (this.Row2RightColumnActive != null)
                    hashCode = hashCode * 59 + this.Row2RightColumnActive.GetHashCode();
                if (this.Row2Height != null)
                    hashCode = hashCode * 59 + this.Row2Height.GetHashCode();
                if (this.Row2Width != null)
                    hashCode = hashCode * 59 + this.Row2Width.GetHashCode();
                if (this.Row2ContentLeft != null)
                    hashCode = hashCode * 59 + this.Row2ContentLeft.GetHashCode();
                if (this.Row2ContentRight != null)
                    hashCode = hashCode * 59 + this.Row2ContentRight.GetHashCode();
                if (this.Row3Active != null)
                    hashCode = hashCode * 59 + this.Row3Active.GetHashCode();
                if (this.Row3RightColumnActive != null)
                    hashCode = hashCode * 59 + this.Row3RightColumnActive.GetHashCode();
                if (this.Row3Height != null)
                    hashCode = hashCode * 59 + this.Row3Height.GetHashCode();
                if (this.Row3Width != null)
                    hashCode = hashCode * 59 + this.Row3Width.GetHashCode();
                if (this.Row3ContentLeft != null)
                    hashCode = hashCode * 59 + this.Row3ContentLeft.GetHashCode();
                if (this.Row3ContentRight != null)
                    hashCode = hashCode * 59 + this.Row3ContentRight.GetHashCode();
                if (this.Row4Active != null)
                    hashCode = hashCode * 59 + this.Row4Active.GetHashCode();
                if (this.Row4RightColumnActive != null)
                    hashCode = hashCode * 59 + this.Row4RightColumnActive.GetHashCode();
                if (this.Row4Height != null)
                    hashCode = hashCode * 59 + this.Row4Height.GetHashCode();
                if (this.Row4Width != null)
                    hashCode = hashCode * 59 + this.Row4Width.GetHashCode();
                if (this.Row4ContentLeft != null)
                    hashCode = hashCode * 59 + this.Row4ContentLeft.GetHashCode();
                if (this.Row4ContentRight != null)
                    hashCode = hashCode * 59 + this.Row4ContentRight.GetHashCode();
                if (this.Row5Active != null)
                    hashCode = hashCode * 59 + this.Row5Active.GetHashCode();
                if (this.Row5RightColumnActive != null)
                    hashCode = hashCode * 59 + this.Row5RightColumnActive.GetHashCode();
                if (this.Row5Height != null)
                    hashCode = hashCode * 59 + this.Row5Height.GetHashCode();
                if (this.Row5Width != null)
                    hashCode = hashCode * 59 + this.Row5Width.GetHashCode();
                if (this.Row5ContentLeft != null)
                    hashCode = hashCode * 59 + this.Row5ContentLeft.GetHashCode();
                if (this.Row5ContentRight != null)
                    hashCode = hashCode * 59 + this.Row5ContentRight.GetHashCode();
                if (this.Row6Active != null)
                    hashCode = hashCode * 59 + this.Row6Active.GetHashCode();
                if (this.Row6RightColumnActive != null)
                    hashCode = hashCode * 59 + this.Row6RightColumnActive.GetHashCode();
                if (this.Row6Height != null)
                    hashCode = hashCode * 59 + this.Row6Height.GetHashCode();
                if (this.Row6Width != null)
                    hashCode = hashCode * 59 + this.Row6Width.GetHashCode();
                if (this.Row6ContentLeft != null)
                    hashCode = hashCode * 59 + this.Row6ContentLeft.GetHashCode();
                if (this.Row6ContentRight != null)
                    hashCode = hashCode * 59 + this.Row6ContentRight.GetHashCode();
                if (this.Row7Active != null)
                    hashCode = hashCode * 59 + this.Row7Active.GetHashCode();
                if (this.Row7RightColumnActive != null)
                    hashCode = hashCode * 59 + this.Row7RightColumnActive.GetHashCode();
                if (this.Row7Height != null)
                    hashCode = hashCode * 59 + this.Row7Height.GetHashCode();
                if (this.Row7Width != null)
                    hashCode = hashCode * 59 + this.Row7Width.GetHashCode();
                if (this.Row7ContentLeft != null)
                    hashCode = hashCode * 59 + this.Row7ContentLeft.GetHashCode();
                if (this.Row7ContentRight != null)
                    hashCode = hashCode * 59 + this.Row7ContentRight.GetHashCode();
                if (this.Row8Active != null)
                    hashCode = hashCode * 59 + this.Row8Active.GetHashCode();
                if (this.Row8RightColumnActive != null)
                    hashCode = hashCode * 59 + this.Row8RightColumnActive.GetHashCode();
                if (this.Row8Height != null)
                    hashCode = hashCode * 59 + this.Row8Height.GetHashCode();
                if (this.Row8Width != null)
                    hashCode = hashCode * 59 + this.Row8Width.GetHashCode();
                if (this.Row8ContentLeft != null)
                    hashCode = hashCode * 59 + this.Row8ContentLeft.GetHashCode();
                if (this.Row8ContentRight != null)
                    hashCode = hashCode * 59 + this.Row8ContentRight.GetHashCode();
                if (this.Row9Active != null)
                    hashCode = hashCode * 59 + this.Row9Active.GetHashCode();
                if (this.Row9RightColumnActive != null)
                    hashCode = hashCode * 59 + this.Row9RightColumnActive.GetHashCode();
                if (this.Row9Height != null)
                    hashCode = hashCode * 59 + this.Row9Height.GetHashCode();
                if (this.Row9Width != null)
                    hashCode = hashCode * 59 + this.Row9Width.GetHashCode();
                if (this.Row9ContentLeft != null)
                    hashCode = hashCode * 59 + this.Row9ContentLeft.GetHashCode();
                if (this.Row9ContentRight != null)
                    hashCode = hashCode * 59 + this.Row9ContentRight.GetHashCode();
                if (this.Row10Active != null)
                    hashCode = hashCode * 59 + this.Row10Active.GetHashCode();
                if (this.Row10RightColumnActive != null)
                    hashCode = hashCode * 59 + this.Row10RightColumnActive.GetHashCode();
                if (this.Row10Height != null)
                    hashCode = hashCode * 59 + this.Row10Height.GetHashCode();
                if (this.Row10Width != null)
                    hashCode = hashCode * 59 + this.Row10Width.GetHashCode();
                if (this.Row10ContentLeft != null)
                    hashCode = hashCode * 59 + this.Row10ContentLeft.GetHashCode();
                if (this.Row10ContentRight != null)
                    hashCode = hashCode * 59 + this.Row10ContentRight.GetHashCode();
                if (this.CreateDate != null)
                    hashCode = hashCode * 59 + this.CreateDate.GetHashCode();
                if (this.ModifyDate != null)
                    hashCode = hashCode * 59 + this.ModifyDate.GetHashCode();
                if (this.CustomFields != null)
                    hashCode = hashCode * 59 + this.CustomFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
