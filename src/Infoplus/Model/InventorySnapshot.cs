/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Infoplus.Client.SwaggerDateConverter;

namespace Infoplus.Model
{
    /// <summary>
    /// InventorySnapshot
    /// </summary>
    [DataContract]
    public partial class InventorySnapshot :  IEquatable<InventorySnapshot>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InventorySnapshot" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected InventorySnapshot() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="InventorySnapshot" /> class.
        /// </summary>
        /// <param name="ItemDescription">ItemDescription.</param>
        /// <param name="LobId">LobId (required).</param>
        /// <param name="IsMixedReceipts">IsMixedReceipts (default to false).</param>
        /// <param name="Quantity">Quantity.</param>
        /// <param name="Address">Address.</param>
        /// <param name="EstimatedInnerPacks">EstimatedInnerPacks.</param>
        /// <param name="EstimatedCases">EstimatedCases.</param>
        /// <param name="EstimatedPallets">EstimatedPallets.</param>
        /// <param name="InventoryValue">InventoryValue.</param>
        /// <param name="InventoryAgeDays">InventoryAgeDays.</param>
        /// <param name="WarehouseId">WarehouseId.</param>
        /// <param name="WarehouseName">WarehouseName.</param>
        /// <param name="WarehouseZoneId">WarehouseZoneId.</param>
        /// <param name="WarehouseZoneName">WarehouseZoneName.</param>
        /// <param name="WarehouseZoneAddress">WarehouseZoneAddress.</param>
        /// <param name="WarehouseBuildingId">WarehouseBuildingId.</param>
        /// <param name="WarehouseBuildingName">WarehouseBuildingName.</param>
        /// <param name="WarehouseAisleId">WarehouseAisleId.</param>
        /// <param name="WarehouseAisleAddress">WarehouseAisleAddress.</param>
        /// <param name="WarehouseLocationOriginId">WarehouseLocationOriginId.</param>
        /// <param name="WarehouseLocationOriginName">WarehouseLocationOriginName.</param>
        /// <param name="WarehouseLocationBillingTypeId">WarehouseLocationBillingTypeId.</param>
        /// <param name="WarehouseLocationBillingTypeName">WarehouseLocationBillingTypeName.</param>
        /// <param name="WarehouseLocationBehaviorTypeId">WarehouseLocationBehaviorTypeId.</param>
        /// <param name="WarehouseLocationBehaviorTypeName">WarehouseLocationBehaviorTypeName.</param>
        /// <param name="WarehouseLocationFootprintId">WarehouseLocationFootprintId.</param>
        /// <param name="WarehouseLocationFootprintName">WarehouseLocationFootprintName.</param>
        /// <param name="WarehouseLocationFootprintWidth">WarehouseLocationFootprintWidth.</param>
        /// <param name="WarehouseLocationFootprintHeight">WarehouseLocationFootprintHeight.</param>
        /// <param name="WarehouseLocationFootprintDepth">WarehouseLocationFootprintDepth.</param>
        /// <param name="WarehouseLocationCubicFeet">WarehouseLocationCubicFeet.</param>
        /// <param name="WarehouseLocationLevel">WarehouseLocationLevel.</param>
        /// <param name="WarehouseLocationBay">WarehouseLocationBay.</param>
        /// <param name="WarehouseLocationNumber">WarehouseLocationNumber.</param>
        /// <param name="WarehouseLocationOnline">WarehouseLocationOnline (default to false).</param>
        /// <param name="WarehouseLocationPriorityCode">WarehouseLocationPriorityCode.</param>
        /// <param name="WarehouseLocationAllowItemMixing">WarehouseLocationAllowItemMixing (default to false).</param>
        /// <param name="WarehouseLocationCost">WarehouseLocationCost.</param>
        /// <param name="Sku">Sku.</param>
        /// <param name="ItemVendorSku">ItemVendorSku.</param>
        /// <param name="ItemUpc">ItemUpc.</param>
        /// <param name="ItemMajorGroup">ItemMajorGroup.</param>
        /// <param name="ItemMajorGroupName">ItemMajorGroupName.</param>
        /// <param name="ItemSubGroup">ItemSubGroup.</param>
        /// <param name="ItemSubGroupName">ItemSubGroupName.</param>
        /// <param name="ItemProductCode">ItemProductCode.</param>
        /// <param name="ItemProductCodeName">ItemProductCodeName.</param>
        /// <param name="ItemAccountCode">ItemAccountCode.</param>
        /// <param name="ItemAccountCodeName">ItemAccountCodeName.</param>
        /// <param name="ItemSummaryCode">ItemSummaryCode.</param>
        /// <param name="ItemSummaryCodeName">ItemSummaryCodeName.</param>
        /// <param name="ItemSector">ItemSector.</param>
        /// <param name="ItemCubicFeet">ItemCubicFeet.</param>
        /// <param name="PoNo">PoNo.</param>
        /// <param name="ReceiptDistributionDate">ReceiptDistributionDate.</param>
        /// <param name="ReceiptUnitsPerWrap">ReceiptUnitsPerWrap.</param>
        /// <param name="ReceiptQuantityPerInnerPack">ReceiptQuantityPerInnerPack.</param>
        /// <param name="ReceiptQuantityPerCase">ReceiptQuantityPerCase.</param>
        /// <param name="ReceiptQuantityPerPallet">ReceiptQuantityPerPallet.</param>
        /// <param name="ReceiptRevisionDate">ReceiptRevisionDate.</param>
        /// <param name="ReceiptProductionLot">ReceiptProductionLot.</param>
        /// <param name="ReceiptReceiveDate">ReceiptReceiveDate.</param>
        /// <param name="ReceiptStatus">ReceiptStatus.</param>
        /// <param name="ReceiptStatusName">ReceiptStatusName.</param>
        /// <param name="ReceiptUnitCode">ReceiptUnitCode.</param>
        /// <param name="ReceiptUnitCodeText">ReceiptUnitCodeText.</param>
        /// <param name="ReceiptWrapCode">ReceiptWrapCode.</param>
        /// <param name="ReceiptWrapCodeText">ReceiptWrapCodeText.</param>
        /// <param name="ReceiptCaseWeight">ReceiptCaseWeight.</param>
        /// <param name="ReceiptProductIdTag">ReceiptProductIdTag.</param>
        /// <param name="AlcoholType">AlcoholType.</param>
        /// <param name="AlcoholContainer">AlcoholContainer.</param>
        /// <param name="AlcoholCountry">AlcoholCountry.</param>
        /// <param name="CustomFields">CustomFields.</param>
        public InventorySnapshot(string ItemDescription = default(string), int? LobId = default(int?), bool? IsMixedReceipts = false, int? Quantity = default(int?), string Address = default(string), int? EstimatedInnerPacks = default(int?), int? EstimatedCases = default(int?), int? EstimatedPallets = default(int?), decimal? InventoryValue = default(decimal?), int? InventoryAgeDays = default(int?), int? WarehouseId = default(int?), string WarehouseName = default(string), int? WarehouseZoneId = default(int?), string WarehouseZoneName = default(string), string WarehouseZoneAddress = default(string), int? WarehouseBuildingId = default(int?), string WarehouseBuildingName = default(string), int? WarehouseAisleId = default(int?), string WarehouseAisleAddress = default(string), int? WarehouseLocationOriginId = default(int?), string WarehouseLocationOriginName = default(string), int? WarehouseLocationBillingTypeId = default(int?), string WarehouseLocationBillingTypeName = default(string), int? WarehouseLocationBehaviorTypeId = default(int?), string WarehouseLocationBehaviorTypeName = default(string), int? WarehouseLocationFootprintId = default(int?), string WarehouseLocationFootprintName = default(string), int? WarehouseLocationFootprintWidth = default(int?), int? WarehouseLocationFootprintHeight = default(int?), int? WarehouseLocationFootprintDepth = default(int?), decimal? WarehouseLocationCubicFeet = default(decimal?), int? WarehouseLocationLevel = default(int?), int? WarehouseLocationBay = default(int?), int? WarehouseLocationNumber = default(int?), bool? WarehouseLocationOnline = false, int? WarehouseLocationPriorityCode = default(int?), bool? WarehouseLocationAllowItemMixing = false, int? WarehouseLocationCost = default(int?), string Sku = default(string), string ItemVendorSku = default(string), string ItemUpc = default(string), int? ItemMajorGroup = default(int?), string ItemMajorGroupName = default(string), int? ItemSubGroup = default(int?), string ItemSubGroupName = default(string), int? ItemProductCode = default(int?), string ItemProductCodeName = default(string), string ItemAccountCode = default(string), string ItemAccountCodeName = default(string), int? ItemSummaryCode = default(int?), string ItemSummaryCodeName = default(string), string ItemSector = default(string), decimal? ItemCubicFeet = default(decimal?), string PoNo = default(string), DateTime? ReceiptDistributionDate = default(DateTime?), int? ReceiptUnitsPerWrap = default(int?), int? ReceiptQuantityPerInnerPack = default(int?), int? ReceiptQuantityPerCase = default(int?), int? ReceiptQuantityPerPallet = default(int?), string ReceiptRevisionDate = default(string), string ReceiptProductionLot = default(string), DateTime? ReceiptReceiveDate = default(DateTime?), string ReceiptStatus = default(string), string ReceiptStatusName = default(string), int? ReceiptUnitCode = default(int?), string ReceiptUnitCodeText = default(string), int? ReceiptWrapCode = default(int?), string ReceiptWrapCodeText = default(string), decimal? ReceiptCaseWeight = default(decimal?), string ReceiptProductIdTag = default(string), string AlcoholType = default(string), string AlcoholContainer = default(string), string AlcoholCountry = default(string), Dictionary<string, Object> CustomFields = default(Dictionary<string, Object>))
        {
            // to ensure "LobId" is required (not null)
            if (LobId == null)
            {
                throw new InvalidDataException("LobId is a required property for InventorySnapshot and cannot be null");
            }
            else
            {
                this.LobId = LobId;
            }
            this.ItemDescription = ItemDescription;
            // use default value if no "IsMixedReceipts" provided
            if (IsMixedReceipts == null)
            {
                this.IsMixedReceipts = false;
            }
            else
            {
                this.IsMixedReceipts = IsMixedReceipts;
            }
            this.Quantity = Quantity;
            this.Address = Address;
            this.EstimatedInnerPacks = EstimatedInnerPacks;
            this.EstimatedCases = EstimatedCases;
            this.EstimatedPallets = EstimatedPallets;
            this.InventoryValue = InventoryValue;
            this.InventoryAgeDays = InventoryAgeDays;
            this.WarehouseId = WarehouseId;
            this.WarehouseName = WarehouseName;
            this.WarehouseZoneId = WarehouseZoneId;
            this.WarehouseZoneName = WarehouseZoneName;
            this.WarehouseZoneAddress = WarehouseZoneAddress;
            this.WarehouseBuildingId = WarehouseBuildingId;
            this.WarehouseBuildingName = WarehouseBuildingName;
            this.WarehouseAisleId = WarehouseAisleId;
            this.WarehouseAisleAddress = WarehouseAisleAddress;
            this.WarehouseLocationOriginId = WarehouseLocationOriginId;
            this.WarehouseLocationOriginName = WarehouseLocationOriginName;
            this.WarehouseLocationBillingTypeId = WarehouseLocationBillingTypeId;
            this.WarehouseLocationBillingTypeName = WarehouseLocationBillingTypeName;
            this.WarehouseLocationBehaviorTypeId = WarehouseLocationBehaviorTypeId;
            this.WarehouseLocationBehaviorTypeName = WarehouseLocationBehaviorTypeName;
            this.WarehouseLocationFootprintId = WarehouseLocationFootprintId;
            this.WarehouseLocationFootprintName = WarehouseLocationFootprintName;
            this.WarehouseLocationFootprintWidth = WarehouseLocationFootprintWidth;
            this.WarehouseLocationFootprintHeight = WarehouseLocationFootprintHeight;
            this.WarehouseLocationFootprintDepth = WarehouseLocationFootprintDepth;
            this.WarehouseLocationCubicFeet = WarehouseLocationCubicFeet;
            this.WarehouseLocationLevel = WarehouseLocationLevel;
            this.WarehouseLocationBay = WarehouseLocationBay;
            this.WarehouseLocationNumber = WarehouseLocationNumber;
            // use default value if no "WarehouseLocationOnline" provided
            if (WarehouseLocationOnline == null)
            {
                this.WarehouseLocationOnline = false;
            }
            else
            {
                this.WarehouseLocationOnline = WarehouseLocationOnline;
            }
            this.WarehouseLocationPriorityCode = WarehouseLocationPriorityCode;
            // use default value if no "WarehouseLocationAllowItemMixing" provided
            if (WarehouseLocationAllowItemMixing == null)
            {
                this.WarehouseLocationAllowItemMixing = false;
            }
            else
            {
                this.WarehouseLocationAllowItemMixing = WarehouseLocationAllowItemMixing;
            }
            this.WarehouseLocationCost = WarehouseLocationCost;
            this.Sku = Sku;
            this.ItemVendorSku = ItemVendorSku;
            this.ItemUpc = ItemUpc;
            this.ItemMajorGroup = ItemMajorGroup;
            this.ItemMajorGroupName = ItemMajorGroupName;
            this.ItemSubGroup = ItemSubGroup;
            this.ItemSubGroupName = ItemSubGroupName;
            this.ItemProductCode = ItemProductCode;
            this.ItemProductCodeName = ItemProductCodeName;
            this.ItemAccountCode = ItemAccountCode;
            this.ItemAccountCodeName = ItemAccountCodeName;
            this.ItemSummaryCode = ItemSummaryCode;
            this.ItemSummaryCodeName = ItemSummaryCodeName;
            this.ItemSector = ItemSector;
            this.ItemCubicFeet = ItemCubicFeet;
            this.PoNo = PoNo;
            this.ReceiptDistributionDate = ReceiptDistributionDate;
            this.ReceiptUnitsPerWrap = ReceiptUnitsPerWrap;
            this.ReceiptQuantityPerInnerPack = ReceiptQuantityPerInnerPack;
            this.ReceiptQuantityPerCase = ReceiptQuantityPerCase;
            this.ReceiptQuantityPerPallet = ReceiptQuantityPerPallet;
            this.ReceiptRevisionDate = ReceiptRevisionDate;
            this.ReceiptProductionLot = ReceiptProductionLot;
            this.ReceiptReceiveDate = ReceiptReceiveDate;
            this.ReceiptStatus = ReceiptStatus;
            this.ReceiptStatusName = ReceiptStatusName;
            this.ReceiptUnitCode = ReceiptUnitCode;
            this.ReceiptUnitCodeText = ReceiptUnitCodeText;
            this.ReceiptWrapCode = ReceiptWrapCode;
            this.ReceiptWrapCodeText = ReceiptWrapCodeText;
            this.ReceiptCaseWeight = ReceiptCaseWeight;
            this.ReceiptProductIdTag = ReceiptProductIdTag;
            this.AlcoholType = AlcoholType;
            this.AlcoholContainer = AlcoholContainer;
            this.AlcoholCountry = AlcoholCountry;
            this.CustomFields = CustomFields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; private set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationId
        /// </summary>
        [DataMember(Name="warehouseLocationId", EmitDefaultValue=false)]
        public int? WarehouseLocationId { get; private set; }

        /// <summary>
        /// Gets or Sets ItemId
        /// </summary>
        [DataMember(Name="itemId", EmitDefaultValue=false)]
        public int? ItemId { get; private set; }

        /// <summary>
        /// Gets or Sets ItemDescription
        /// </summary>
        [DataMember(Name="itemDescription", EmitDefaultValue=false)]
        public string ItemDescription { get; set; }

        /// <summary>
        /// Gets or Sets LobId
        /// </summary>
        [DataMember(Name="lobId", EmitDefaultValue=false)]
        public int? LobId { get; set; }

        /// <summary>
        /// Gets or Sets SnapshotDate
        /// </summary>
        [DataMember(Name="snapshotDate", EmitDefaultValue=false)]
        public DateTime? SnapshotDate { get; private set; }

        /// <summary>
        /// Gets or Sets IsMixedReceipts
        /// </summary>
        [DataMember(Name="isMixedReceipts", EmitDefaultValue=false)]
        public bool? IsMixedReceipts { get; set; }

        /// <summary>
        /// Gets or Sets Quantity
        /// </summary>
        [DataMember(Name="quantity", EmitDefaultValue=false)]
        public int? Quantity { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public string Address { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedInnerPacks
        /// </summary>
        [DataMember(Name="estimatedInnerPacks", EmitDefaultValue=false)]
        public int? EstimatedInnerPacks { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedCases
        /// </summary>
        [DataMember(Name="estimatedCases", EmitDefaultValue=false)]
        public int? EstimatedCases { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedPallets
        /// </summary>
        [DataMember(Name="estimatedPallets", EmitDefaultValue=false)]
        public int? EstimatedPallets { get; set; }

        /// <summary>
        /// Gets or Sets InventoryValue
        /// </summary>
        [DataMember(Name="inventoryValue", EmitDefaultValue=false)]
        public decimal? InventoryValue { get; set; }

        /// <summary>
        /// Gets or Sets InventoryAgeDays
        /// </summary>
        [DataMember(Name="inventoryAgeDays", EmitDefaultValue=false)]
        public int? InventoryAgeDays { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseId
        /// </summary>
        [DataMember(Name="warehouseId", EmitDefaultValue=false)]
        public int? WarehouseId { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseName
        /// </summary>
        [DataMember(Name="warehouseName", EmitDefaultValue=false)]
        public string WarehouseName { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseZoneId
        /// </summary>
        [DataMember(Name="warehouseZoneId", EmitDefaultValue=false)]
        public int? WarehouseZoneId { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseZoneName
        /// </summary>
        [DataMember(Name="warehouseZoneName", EmitDefaultValue=false)]
        public string WarehouseZoneName { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseZoneAddress
        /// </summary>
        [DataMember(Name="warehouseZoneAddress", EmitDefaultValue=false)]
        public string WarehouseZoneAddress { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseBuildingId
        /// </summary>
        [DataMember(Name="warehouseBuildingId", EmitDefaultValue=false)]
        public int? WarehouseBuildingId { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseBuildingName
        /// </summary>
        [DataMember(Name="warehouseBuildingName", EmitDefaultValue=false)]
        public string WarehouseBuildingName { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseAisleId
        /// </summary>
        [DataMember(Name="warehouseAisleId", EmitDefaultValue=false)]
        public int? WarehouseAisleId { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseAisleAddress
        /// </summary>
        [DataMember(Name="warehouseAisleAddress", EmitDefaultValue=false)]
        public string WarehouseAisleAddress { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationOriginId
        /// </summary>
        [DataMember(Name="warehouseLocationOriginId", EmitDefaultValue=false)]
        public int? WarehouseLocationOriginId { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationOriginName
        /// </summary>
        [DataMember(Name="warehouseLocationOriginName", EmitDefaultValue=false)]
        public string WarehouseLocationOriginName { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationBillingTypeId
        /// </summary>
        [DataMember(Name="warehouseLocationBillingTypeId", EmitDefaultValue=false)]
        public int? WarehouseLocationBillingTypeId { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationBillingTypeName
        /// </summary>
        [DataMember(Name="warehouseLocationBillingTypeName", EmitDefaultValue=false)]
        public string WarehouseLocationBillingTypeName { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationBehaviorTypeId
        /// </summary>
        [DataMember(Name="warehouseLocationBehaviorTypeId", EmitDefaultValue=false)]
        public int? WarehouseLocationBehaviorTypeId { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationBehaviorTypeName
        /// </summary>
        [DataMember(Name="warehouseLocationBehaviorTypeName", EmitDefaultValue=false)]
        public string WarehouseLocationBehaviorTypeName { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationFootprintId
        /// </summary>
        [DataMember(Name="warehouseLocationFootprintId", EmitDefaultValue=false)]
        public int? WarehouseLocationFootprintId { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationFootprintName
        /// </summary>
        [DataMember(Name="warehouseLocationFootprintName", EmitDefaultValue=false)]
        public string WarehouseLocationFootprintName { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationFootprintWidth
        /// </summary>
        [DataMember(Name="warehouseLocationFootprintWidth", EmitDefaultValue=false)]
        public int? WarehouseLocationFootprintWidth { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationFootprintHeight
        /// </summary>
        [DataMember(Name="warehouseLocationFootprintHeight", EmitDefaultValue=false)]
        public int? WarehouseLocationFootprintHeight { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationFootprintDepth
        /// </summary>
        [DataMember(Name="warehouseLocationFootprintDepth", EmitDefaultValue=false)]
        public int? WarehouseLocationFootprintDepth { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationCubicFeet
        /// </summary>
        [DataMember(Name="warehouseLocationCubicFeet", EmitDefaultValue=false)]
        public decimal? WarehouseLocationCubicFeet { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationLevel
        /// </summary>
        [DataMember(Name="warehouseLocationLevel", EmitDefaultValue=false)]
        public int? WarehouseLocationLevel { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationBay
        /// </summary>
        [DataMember(Name="warehouseLocationBay", EmitDefaultValue=false)]
        public int? WarehouseLocationBay { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationNumber
        /// </summary>
        [DataMember(Name="warehouseLocationNumber", EmitDefaultValue=false)]
        public int? WarehouseLocationNumber { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationOnline
        /// </summary>
        [DataMember(Name="warehouseLocationOnline", EmitDefaultValue=false)]
        public bool? WarehouseLocationOnline { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationPriorityCode
        /// </summary>
        [DataMember(Name="warehouseLocationPriorityCode", EmitDefaultValue=false)]
        public int? WarehouseLocationPriorityCode { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationAllowItemMixing
        /// </summary>
        [DataMember(Name="warehouseLocationAllowItemMixing", EmitDefaultValue=false)]
        public bool? WarehouseLocationAllowItemMixing { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseLocationCost
        /// </summary>
        [DataMember(Name="warehouseLocationCost", EmitDefaultValue=false)]
        public int? WarehouseLocationCost { get; set; }

        /// <summary>
        /// Gets or Sets Sku
        /// </summary>
        [DataMember(Name="sku", EmitDefaultValue=false)]
        public string Sku { get; set; }

        /// <summary>
        /// Gets or Sets ItemVendorSku
        /// </summary>
        [DataMember(Name="itemVendorSku", EmitDefaultValue=false)]
        public string ItemVendorSku { get; set; }

        /// <summary>
        /// Gets or Sets ItemUpc
        /// </summary>
        [DataMember(Name="itemUpc", EmitDefaultValue=false)]
        public string ItemUpc { get; set; }

        /// <summary>
        /// Gets or Sets ItemMajorGroup
        /// </summary>
        [DataMember(Name="itemMajorGroup", EmitDefaultValue=false)]
        public int? ItemMajorGroup { get; set; }

        /// <summary>
        /// Gets or Sets ItemMajorGroupName
        /// </summary>
        [DataMember(Name="itemMajorGroupName", EmitDefaultValue=false)]
        public string ItemMajorGroupName { get; set; }

        /// <summary>
        /// Gets or Sets ItemSubGroup
        /// </summary>
        [DataMember(Name="itemSubGroup", EmitDefaultValue=false)]
        public int? ItemSubGroup { get; set; }

        /// <summary>
        /// Gets or Sets ItemSubGroupName
        /// </summary>
        [DataMember(Name="itemSubGroupName", EmitDefaultValue=false)]
        public string ItemSubGroupName { get; set; }

        /// <summary>
        /// Gets or Sets ItemProductCode
        /// </summary>
        [DataMember(Name="itemProductCode", EmitDefaultValue=false)]
        public int? ItemProductCode { get; set; }

        /// <summary>
        /// Gets or Sets ItemProductCodeName
        /// </summary>
        [DataMember(Name="itemProductCodeName", EmitDefaultValue=false)]
        public string ItemProductCodeName { get; set; }

        /// <summary>
        /// Gets or Sets ItemAccountCode
        /// </summary>
        [DataMember(Name="itemAccountCode", EmitDefaultValue=false)]
        public string ItemAccountCode { get; set; }

        /// <summary>
        /// Gets or Sets ItemAccountCodeName
        /// </summary>
        [DataMember(Name="itemAccountCodeName", EmitDefaultValue=false)]
        public string ItemAccountCodeName { get; set; }

        /// <summary>
        /// Gets or Sets ItemSummaryCode
        /// </summary>
        [DataMember(Name="itemSummaryCode", EmitDefaultValue=false)]
        public int? ItemSummaryCode { get; set; }

        /// <summary>
        /// Gets or Sets ItemSummaryCodeName
        /// </summary>
        [DataMember(Name="itemSummaryCodeName", EmitDefaultValue=false)]
        public string ItemSummaryCodeName { get; set; }

        /// <summary>
        /// Gets or Sets ItemSector
        /// </summary>
        [DataMember(Name="itemSector", EmitDefaultValue=false)]
        public string ItemSector { get; set; }

        /// <summary>
        /// Gets or Sets ItemCubicFeet
        /// </summary>
        [DataMember(Name="itemCubicFeet", EmitDefaultValue=false)]
        public decimal? ItemCubicFeet { get; set; }

        /// <summary>
        /// Gets or Sets PoNo
        /// </summary>
        [DataMember(Name="poNo", EmitDefaultValue=false)]
        public string PoNo { get; set; }

        /// <summary>
        /// Gets or Sets ReceiptDistributionDate
        /// </summary>
        [DataMember(Name="receiptDistributionDate", EmitDefaultValue=false)]
        public DateTime? ReceiptDistributionDate { get; set; }

        /// <summary>
        /// Gets or Sets ReceiptUnitsPerWrap
        /// </summary>
        [DataMember(Name="receiptUnitsPerWrap", EmitDefaultValue=false)]
        public int? ReceiptUnitsPerWrap { get; set; }

        /// <summary>
        /// Gets or Sets ReceiptQuantityPerInnerPack
        /// </summary>
        [DataMember(Name="receiptQuantityPerInnerPack", EmitDefaultValue=false)]
        public int? ReceiptQuantityPerInnerPack { get; set; }

        /// <summary>
        /// Gets or Sets ReceiptQuantityPerCase
        /// </summary>
        [DataMember(Name="receiptQuantityPerCase", EmitDefaultValue=false)]
        public int? ReceiptQuantityPerCase { get; set; }

        /// <summary>
        /// Gets or Sets ReceiptQuantityPerPallet
        /// </summary>
        [DataMember(Name="receiptQuantityPerPallet", EmitDefaultValue=false)]
        public int? ReceiptQuantityPerPallet { get; set; }

        /// <summary>
        /// Gets or Sets ReceiptRevisionDate
        /// </summary>
        [DataMember(Name="receiptRevisionDate", EmitDefaultValue=false)]
        public string ReceiptRevisionDate { get; set; }

        /// <summary>
        /// Gets or Sets ReceiptProductionLot
        /// </summary>
        [DataMember(Name="receiptProductionLot", EmitDefaultValue=false)]
        public string ReceiptProductionLot { get; set; }

        /// <summary>
        /// Gets or Sets ReceiptReceiveDate
        /// </summary>
        [DataMember(Name="receiptReceiveDate", EmitDefaultValue=false)]
        public DateTime? ReceiptReceiveDate { get; set; }

        /// <summary>
        /// Gets or Sets ReceiptStatus
        /// </summary>
        [DataMember(Name="receiptStatus", EmitDefaultValue=false)]
        public string ReceiptStatus { get; set; }

        /// <summary>
        /// Gets or Sets ReceiptStatusName
        /// </summary>
        [DataMember(Name="receiptStatusName", EmitDefaultValue=false)]
        public string ReceiptStatusName { get; set; }

        /// <summary>
        /// Gets or Sets ReceiptUnitCode
        /// </summary>
        [DataMember(Name="receiptUnitCode", EmitDefaultValue=false)]
        public int? ReceiptUnitCode { get; set; }

        /// <summary>
        /// Gets or Sets ReceiptUnitCodeText
        /// </summary>
        [DataMember(Name="receiptUnitCodeText", EmitDefaultValue=false)]
        public string ReceiptUnitCodeText { get; set; }

        /// <summary>
        /// Gets or Sets ReceiptWrapCode
        /// </summary>
        [DataMember(Name="receiptWrapCode", EmitDefaultValue=false)]
        public int? ReceiptWrapCode { get; set; }

        /// <summary>
        /// Gets or Sets ReceiptWrapCodeText
        /// </summary>
        [DataMember(Name="receiptWrapCodeText", EmitDefaultValue=false)]
        public string ReceiptWrapCodeText { get; set; }

        /// <summary>
        /// Gets or Sets ReceiptCaseWeight
        /// </summary>
        [DataMember(Name="receiptCaseWeight", EmitDefaultValue=false)]
        public decimal? ReceiptCaseWeight { get; set; }

        /// <summary>
        /// Gets or Sets ReceiptProductIdTag
        /// </summary>
        [DataMember(Name="receiptProductIdTag", EmitDefaultValue=false)]
        public string ReceiptProductIdTag { get; set; }

        /// <summary>
        /// Gets or Sets AlcoholType
        /// </summary>
        [DataMember(Name="alcoholType", EmitDefaultValue=false)]
        public string AlcoholType { get; set; }

        /// <summary>
        /// Gets or Sets AlcoholTypeName
        /// </summary>
        [DataMember(Name="alcoholTypeName", EmitDefaultValue=false)]
        public string AlcoholTypeName { get; private set; }

        /// <summary>
        /// Gets or Sets AlcoholContent
        /// </summary>
        [DataMember(Name="alcoholContent", EmitDefaultValue=false)]
        public decimal? AlcoholContent { get; private set; }

        /// <summary>
        /// Gets or Sets AlcoholContainer
        /// </summary>
        [DataMember(Name="alcoholContainer", EmitDefaultValue=false)]
        public string AlcoholContainer { get; set; }

        /// <summary>
        /// Gets or Sets AlcoholContainerName
        /// </summary>
        [DataMember(Name="alcoholContainerName", EmitDefaultValue=false)]
        public string AlcoholContainerName { get; private set; }

        /// <summary>
        /// Gets or Sets AlcoholContainerVolume
        /// </summary>
        [DataMember(Name="alcoholContainerVolume", EmitDefaultValue=false)]
        public int? AlcoholContainerVolume { get; private set; }

        /// <summary>
        /// Gets or Sets AlcoholVintageYear
        /// </summary>
        [DataMember(Name="alcoholVintageYear", EmitDefaultValue=false)]
        public string AlcoholVintageYear { get; private set; }

        /// <summary>
        /// Gets or Sets AlcoholCountry
        /// </summary>
        [DataMember(Name="alcoholCountry", EmitDefaultValue=false)]
        public string AlcoholCountry { get; set; }

        /// <summary>
        /// Gets or Sets AlcoholCountryName
        /// </summary>
        [DataMember(Name="alcoholCountryName", EmitDefaultValue=false)]
        public string AlcoholCountryName { get; private set; }

        /// <summary>
        /// Gets or Sets AlcoholState
        /// </summary>
        [DataMember(Name="alcoholState", EmitDefaultValue=false)]
        public string AlcoholState { get; private set; }

        /// <summary>
        /// Gets or Sets AlcoholRegion
        /// </summary>
        [DataMember(Name="alcoholRegion", EmitDefaultValue=false)]
        public string AlcoholRegion { get; private set; }

        /// <summary>
        /// Gets or Sets AlcoholBrand
        /// </summary>
        [DataMember(Name="alcoholBrand", EmitDefaultValue=false)]
        public string AlcoholBrand { get; private set; }

        /// <summary>
        /// Gets or Sets AlcoholUPCCode
        /// </summary>
        [DataMember(Name="alcoholUPCCode", EmitDefaultValue=false)]
        public string AlcoholUPCCode { get; private set; }

        /// <summary>
        /// Gets or Sets AlcoholNABCACode
        /// </summary>
        [DataMember(Name="alcoholNABCACode", EmitDefaultValue=false)]
        public string AlcoholNABCACode { get; private set; }

        /// <summary>
        /// Gets or Sets AlcoholUNIMERCCode
        /// </summary>
        [DataMember(Name="alcoholUNIMERCCode", EmitDefaultValue=false)]
        public string AlcoholUNIMERCCode { get; private set; }

        /// <summary>
        /// Gets or Sets AlcoholSCCCode
        /// </summary>
        [DataMember(Name="alcoholSCCCode", EmitDefaultValue=false)]
        public string AlcoholSCCCode { get; private set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name="customFields", EmitDefaultValue=false)]
        public Dictionary<string, Object> CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InventorySnapshot {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  WarehouseLocationId: ").Append(WarehouseLocationId).Append("\n");
            sb.Append("  ItemId: ").Append(ItemId).Append("\n");
            sb.Append("  ItemDescription: ").Append(ItemDescription).Append("\n");
            sb.Append("  LobId: ").Append(LobId).Append("\n");
            sb.Append("  SnapshotDate: ").Append(SnapshotDate).Append("\n");
            sb.Append("  IsMixedReceipts: ").Append(IsMixedReceipts).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  EstimatedInnerPacks: ").Append(EstimatedInnerPacks).Append("\n");
            sb.Append("  EstimatedCases: ").Append(EstimatedCases).Append("\n");
            sb.Append("  EstimatedPallets: ").Append(EstimatedPallets).Append("\n");
            sb.Append("  InventoryValue: ").Append(InventoryValue).Append("\n");
            sb.Append("  InventoryAgeDays: ").Append(InventoryAgeDays).Append("\n");
            sb.Append("  WarehouseId: ").Append(WarehouseId).Append("\n");
            sb.Append("  WarehouseName: ").Append(WarehouseName).Append("\n");
            sb.Append("  WarehouseZoneId: ").Append(WarehouseZoneId).Append("\n");
            sb.Append("  WarehouseZoneName: ").Append(WarehouseZoneName).Append("\n");
            sb.Append("  WarehouseZoneAddress: ").Append(WarehouseZoneAddress).Append("\n");
            sb.Append("  WarehouseBuildingId: ").Append(WarehouseBuildingId).Append("\n");
            sb.Append("  WarehouseBuildingName: ").Append(WarehouseBuildingName).Append("\n");
            sb.Append("  WarehouseAisleId: ").Append(WarehouseAisleId).Append("\n");
            sb.Append("  WarehouseAisleAddress: ").Append(WarehouseAisleAddress).Append("\n");
            sb.Append("  WarehouseLocationOriginId: ").Append(WarehouseLocationOriginId).Append("\n");
            sb.Append("  WarehouseLocationOriginName: ").Append(WarehouseLocationOriginName).Append("\n");
            sb.Append("  WarehouseLocationBillingTypeId: ").Append(WarehouseLocationBillingTypeId).Append("\n");
            sb.Append("  WarehouseLocationBillingTypeName: ").Append(WarehouseLocationBillingTypeName).Append("\n");
            sb.Append("  WarehouseLocationBehaviorTypeId: ").Append(WarehouseLocationBehaviorTypeId).Append("\n");
            sb.Append("  WarehouseLocationBehaviorTypeName: ").Append(WarehouseLocationBehaviorTypeName).Append("\n");
            sb.Append("  WarehouseLocationFootprintId: ").Append(WarehouseLocationFootprintId).Append("\n");
            sb.Append("  WarehouseLocationFootprintName: ").Append(WarehouseLocationFootprintName).Append("\n");
            sb.Append("  WarehouseLocationFootprintWidth: ").Append(WarehouseLocationFootprintWidth).Append("\n");
            sb.Append("  WarehouseLocationFootprintHeight: ").Append(WarehouseLocationFootprintHeight).Append("\n");
            sb.Append("  WarehouseLocationFootprintDepth: ").Append(WarehouseLocationFootprintDepth).Append("\n");
            sb.Append("  WarehouseLocationCubicFeet: ").Append(WarehouseLocationCubicFeet).Append("\n");
            sb.Append("  WarehouseLocationLevel: ").Append(WarehouseLocationLevel).Append("\n");
            sb.Append("  WarehouseLocationBay: ").Append(WarehouseLocationBay).Append("\n");
            sb.Append("  WarehouseLocationNumber: ").Append(WarehouseLocationNumber).Append("\n");
            sb.Append("  WarehouseLocationOnline: ").Append(WarehouseLocationOnline).Append("\n");
            sb.Append("  WarehouseLocationPriorityCode: ").Append(WarehouseLocationPriorityCode).Append("\n");
            sb.Append("  WarehouseLocationAllowItemMixing: ").Append(WarehouseLocationAllowItemMixing).Append("\n");
            sb.Append("  WarehouseLocationCost: ").Append(WarehouseLocationCost).Append("\n");
            sb.Append("  Sku: ").Append(Sku).Append("\n");
            sb.Append("  ItemVendorSku: ").Append(ItemVendorSku).Append("\n");
            sb.Append("  ItemUpc: ").Append(ItemUpc).Append("\n");
            sb.Append("  ItemMajorGroup: ").Append(ItemMajorGroup).Append("\n");
            sb.Append("  ItemMajorGroupName: ").Append(ItemMajorGroupName).Append("\n");
            sb.Append("  ItemSubGroup: ").Append(ItemSubGroup).Append("\n");
            sb.Append("  ItemSubGroupName: ").Append(ItemSubGroupName).Append("\n");
            sb.Append("  ItemProductCode: ").Append(ItemProductCode).Append("\n");
            sb.Append("  ItemProductCodeName: ").Append(ItemProductCodeName).Append("\n");
            sb.Append("  ItemAccountCode: ").Append(ItemAccountCode).Append("\n");
            sb.Append("  ItemAccountCodeName: ").Append(ItemAccountCodeName).Append("\n");
            sb.Append("  ItemSummaryCode: ").Append(ItemSummaryCode).Append("\n");
            sb.Append("  ItemSummaryCodeName: ").Append(ItemSummaryCodeName).Append("\n");
            sb.Append("  ItemSector: ").Append(ItemSector).Append("\n");
            sb.Append("  ItemCubicFeet: ").Append(ItemCubicFeet).Append("\n");
            sb.Append("  PoNo: ").Append(PoNo).Append("\n");
            sb.Append("  ReceiptDistributionDate: ").Append(ReceiptDistributionDate).Append("\n");
            sb.Append("  ReceiptUnitsPerWrap: ").Append(ReceiptUnitsPerWrap).Append("\n");
            sb.Append("  ReceiptQuantityPerInnerPack: ").Append(ReceiptQuantityPerInnerPack).Append("\n");
            sb.Append("  ReceiptQuantityPerCase: ").Append(ReceiptQuantityPerCase).Append("\n");
            sb.Append("  ReceiptQuantityPerPallet: ").Append(ReceiptQuantityPerPallet).Append("\n");
            sb.Append("  ReceiptRevisionDate: ").Append(ReceiptRevisionDate).Append("\n");
            sb.Append("  ReceiptProductionLot: ").Append(ReceiptProductionLot).Append("\n");
            sb.Append("  ReceiptReceiveDate: ").Append(ReceiptReceiveDate).Append("\n");
            sb.Append("  ReceiptStatus: ").Append(ReceiptStatus).Append("\n");
            sb.Append("  ReceiptStatusName: ").Append(ReceiptStatusName).Append("\n");
            sb.Append("  ReceiptUnitCode: ").Append(ReceiptUnitCode).Append("\n");
            sb.Append("  ReceiptUnitCodeText: ").Append(ReceiptUnitCodeText).Append("\n");
            sb.Append("  ReceiptWrapCode: ").Append(ReceiptWrapCode).Append("\n");
            sb.Append("  ReceiptWrapCodeText: ").Append(ReceiptWrapCodeText).Append("\n");
            sb.Append("  ReceiptCaseWeight: ").Append(ReceiptCaseWeight).Append("\n");
            sb.Append("  ReceiptProductIdTag: ").Append(ReceiptProductIdTag).Append("\n");
            sb.Append("  AlcoholType: ").Append(AlcoholType).Append("\n");
            sb.Append("  AlcoholTypeName: ").Append(AlcoholTypeName).Append("\n");
            sb.Append("  AlcoholContent: ").Append(AlcoholContent).Append("\n");
            sb.Append("  AlcoholContainer: ").Append(AlcoholContainer).Append("\n");
            sb.Append("  AlcoholContainerName: ").Append(AlcoholContainerName).Append("\n");
            sb.Append("  AlcoholContainerVolume: ").Append(AlcoholContainerVolume).Append("\n");
            sb.Append("  AlcoholVintageYear: ").Append(AlcoholVintageYear).Append("\n");
            sb.Append("  AlcoholCountry: ").Append(AlcoholCountry).Append("\n");
            sb.Append("  AlcoholCountryName: ").Append(AlcoholCountryName).Append("\n");
            sb.Append("  AlcoholState: ").Append(AlcoholState).Append("\n");
            sb.Append("  AlcoholRegion: ").Append(AlcoholRegion).Append("\n");
            sb.Append("  AlcoholBrand: ").Append(AlcoholBrand).Append("\n");
            sb.Append("  AlcoholUPCCode: ").Append(AlcoholUPCCode).Append("\n");
            sb.Append("  AlcoholNABCACode: ").Append(AlcoholNABCACode).Append("\n");
            sb.Append("  AlcoholUNIMERCCode: ").Append(AlcoholUNIMERCCode).Append("\n");
            sb.Append("  AlcoholSCCCode: ").Append(AlcoholSCCCode).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InventorySnapshot);
        }

        /// <summary>
        /// Returns true if InventorySnapshot instances are equal
        /// </summary>
        /// <param name="input">Instance of InventorySnapshot to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InventorySnapshot input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.WarehouseLocationId == input.WarehouseLocationId ||
                    (this.WarehouseLocationId != null &&
                    this.WarehouseLocationId.Equals(input.WarehouseLocationId))
                ) && 
                (
                    this.ItemId == input.ItemId ||
                    (this.ItemId != null &&
                    this.ItemId.Equals(input.ItemId))
                ) && 
                (
                    this.ItemDescription == input.ItemDescription ||
                    (this.ItemDescription != null &&
                    this.ItemDescription.Equals(input.ItemDescription))
                ) && 
                (
                    this.LobId == input.LobId ||
                    (this.LobId != null &&
                    this.LobId.Equals(input.LobId))
                ) && 
                (
                    this.SnapshotDate == input.SnapshotDate ||
                    (this.SnapshotDate != null &&
                    this.SnapshotDate.Equals(input.SnapshotDate))
                ) && 
                (
                    this.IsMixedReceipts == input.IsMixedReceipts ||
                    (this.IsMixedReceipts != null &&
                    this.IsMixedReceipts.Equals(input.IsMixedReceipts))
                ) && 
                (
                    this.Quantity == input.Quantity ||
                    (this.Quantity != null &&
                    this.Quantity.Equals(input.Quantity))
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.EstimatedInnerPacks == input.EstimatedInnerPacks ||
                    (this.EstimatedInnerPacks != null &&
                    this.EstimatedInnerPacks.Equals(input.EstimatedInnerPacks))
                ) && 
                (
                    this.EstimatedCases == input.EstimatedCases ||
                    (this.EstimatedCases != null &&
                    this.EstimatedCases.Equals(input.EstimatedCases))
                ) && 
                (
                    this.EstimatedPallets == input.EstimatedPallets ||
                    (this.EstimatedPallets != null &&
                    this.EstimatedPallets.Equals(input.EstimatedPallets))
                ) && 
                (
                    this.InventoryValue == input.InventoryValue ||
                    (this.InventoryValue != null &&
                    this.InventoryValue.Equals(input.InventoryValue))
                ) && 
                (
                    this.InventoryAgeDays == input.InventoryAgeDays ||
                    (this.InventoryAgeDays != null &&
                    this.InventoryAgeDays.Equals(input.InventoryAgeDays))
                ) && 
                (
                    this.WarehouseId == input.WarehouseId ||
                    (this.WarehouseId != null &&
                    this.WarehouseId.Equals(input.WarehouseId))
                ) && 
                (
                    this.WarehouseName == input.WarehouseName ||
                    (this.WarehouseName != null &&
                    this.WarehouseName.Equals(input.WarehouseName))
                ) && 
                (
                    this.WarehouseZoneId == input.WarehouseZoneId ||
                    (this.WarehouseZoneId != null &&
                    this.WarehouseZoneId.Equals(input.WarehouseZoneId))
                ) && 
                (
                    this.WarehouseZoneName == input.WarehouseZoneName ||
                    (this.WarehouseZoneName != null &&
                    this.WarehouseZoneName.Equals(input.WarehouseZoneName))
                ) && 
                (
                    this.WarehouseZoneAddress == input.WarehouseZoneAddress ||
                    (this.WarehouseZoneAddress != null &&
                    this.WarehouseZoneAddress.Equals(input.WarehouseZoneAddress))
                ) && 
                (
                    this.WarehouseBuildingId == input.WarehouseBuildingId ||
                    (this.WarehouseBuildingId != null &&
                    this.WarehouseBuildingId.Equals(input.WarehouseBuildingId))
                ) && 
                (
                    this.WarehouseBuildingName == input.WarehouseBuildingName ||
                    (this.WarehouseBuildingName != null &&
                    this.WarehouseBuildingName.Equals(input.WarehouseBuildingName))
                ) && 
                (
                    this.WarehouseAisleId == input.WarehouseAisleId ||
                    (this.WarehouseAisleId != null &&
                    this.WarehouseAisleId.Equals(input.WarehouseAisleId))
                ) && 
                (
                    this.WarehouseAisleAddress == input.WarehouseAisleAddress ||
                    (this.WarehouseAisleAddress != null &&
                    this.WarehouseAisleAddress.Equals(input.WarehouseAisleAddress))
                ) && 
                (
                    this.WarehouseLocationOriginId == input.WarehouseLocationOriginId ||
                    (this.WarehouseLocationOriginId != null &&
                    this.WarehouseLocationOriginId.Equals(input.WarehouseLocationOriginId))
                ) && 
                (
                    this.WarehouseLocationOriginName == input.WarehouseLocationOriginName ||
                    (this.WarehouseLocationOriginName != null &&
                    this.WarehouseLocationOriginName.Equals(input.WarehouseLocationOriginName))
                ) && 
                (
                    this.WarehouseLocationBillingTypeId == input.WarehouseLocationBillingTypeId ||
                    (this.WarehouseLocationBillingTypeId != null &&
                    this.WarehouseLocationBillingTypeId.Equals(input.WarehouseLocationBillingTypeId))
                ) && 
                (
                    this.WarehouseLocationBillingTypeName == input.WarehouseLocationBillingTypeName ||
                    (this.WarehouseLocationBillingTypeName != null &&
                    this.WarehouseLocationBillingTypeName.Equals(input.WarehouseLocationBillingTypeName))
                ) && 
                (
                    this.WarehouseLocationBehaviorTypeId == input.WarehouseLocationBehaviorTypeId ||
                    (this.WarehouseLocationBehaviorTypeId != null &&
                    this.WarehouseLocationBehaviorTypeId.Equals(input.WarehouseLocationBehaviorTypeId))
                ) && 
                (
                    this.WarehouseLocationBehaviorTypeName == input.WarehouseLocationBehaviorTypeName ||
                    (this.WarehouseLocationBehaviorTypeName != null &&
                    this.WarehouseLocationBehaviorTypeName.Equals(input.WarehouseLocationBehaviorTypeName))
                ) && 
                (
                    this.WarehouseLocationFootprintId == input.WarehouseLocationFootprintId ||
                    (this.WarehouseLocationFootprintId != null &&
                    this.WarehouseLocationFootprintId.Equals(input.WarehouseLocationFootprintId))
                ) && 
                (
                    this.WarehouseLocationFootprintName == input.WarehouseLocationFootprintName ||
                    (this.WarehouseLocationFootprintName != null &&
                    this.WarehouseLocationFootprintName.Equals(input.WarehouseLocationFootprintName))
                ) && 
                (
                    this.WarehouseLocationFootprintWidth == input.WarehouseLocationFootprintWidth ||
                    (this.WarehouseLocationFootprintWidth != null &&
                    this.WarehouseLocationFootprintWidth.Equals(input.WarehouseLocationFootprintWidth))
                ) && 
                (
                    this.WarehouseLocationFootprintHeight == input.WarehouseLocationFootprintHeight ||
                    (this.WarehouseLocationFootprintHeight != null &&
                    this.WarehouseLocationFootprintHeight.Equals(input.WarehouseLocationFootprintHeight))
                ) && 
                (
                    this.WarehouseLocationFootprintDepth == input.WarehouseLocationFootprintDepth ||
                    (this.WarehouseLocationFootprintDepth != null &&
                    this.WarehouseLocationFootprintDepth.Equals(input.WarehouseLocationFootprintDepth))
                ) && 
                (
                    this.WarehouseLocationCubicFeet == input.WarehouseLocationCubicFeet ||
                    (this.WarehouseLocationCubicFeet != null &&
                    this.WarehouseLocationCubicFeet.Equals(input.WarehouseLocationCubicFeet))
                ) && 
                (
                    this.WarehouseLocationLevel == input.WarehouseLocationLevel ||
                    (this.WarehouseLocationLevel != null &&
                    this.WarehouseLocationLevel.Equals(input.WarehouseLocationLevel))
                ) && 
                (
                    this.WarehouseLocationBay == input.WarehouseLocationBay ||
                    (this.WarehouseLocationBay != null &&
                    this.WarehouseLocationBay.Equals(input.WarehouseLocationBay))
                ) && 
                (
                    this.WarehouseLocationNumber == input.WarehouseLocationNumber ||
                    (this.WarehouseLocationNumber != null &&
                    this.WarehouseLocationNumber.Equals(input.WarehouseLocationNumber))
                ) && 
                (
                    this.WarehouseLocationOnline == input.WarehouseLocationOnline ||
                    (this.WarehouseLocationOnline != null &&
                    this.WarehouseLocationOnline.Equals(input.WarehouseLocationOnline))
                ) && 
                (
                    this.WarehouseLocationPriorityCode == input.WarehouseLocationPriorityCode ||
                    (this.WarehouseLocationPriorityCode != null &&
                    this.WarehouseLocationPriorityCode.Equals(input.WarehouseLocationPriorityCode))
                ) && 
                (
                    this.WarehouseLocationAllowItemMixing == input.WarehouseLocationAllowItemMixing ||
                    (this.WarehouseLocationAllowItemMixing != null &&
                    this.WarehouseLocationAllowItemMixing.Equals(input.WarehouseLocationAllowItemMixing))
                ) && 
                (
                    this.WarehouseLocationCost == input.WarehouseLocationCost ||
                    (this.WarehouseLocationCost != null &&
                    this.WarehouseLocationCost.Equals(input.WarehouseLocationCost))
                ) && 
                (
                    this.Sku == input.Sku ||
                    (this.Sku != null &&
                    this.Sku.Equals(input.Sku))
                ) && 
                (
                    this.ItemVendorSku == input.ItemVendorSku ||
                    (this.ItemVendorSku != null &&
                    this.ItemVendorSku.Equals(input.ItemVendorSku))
                ) && 
                (
                    this.ItemUpc == input.ItemUpc ||
                    (this.ItemUpc != null &&
                    this.ItemUpc.Equals(input.ItemUpc))
                ) && 
                (
                    this.ItemMajorGroup == input.ItemMajorGroup ||
                    (this.ItemMajorGroup != null &&
                    this.ItemMajorGroup.Equals(input.ItemMajorGroup))
                ) && 
                (
                    this.ItemMajorGroupName == input.ItemMajorGroupName ||
                    (this.ItemMajorGroupName != null &&
                    this.ItemMajorGroupName.Equals(input.ItemMajorGroupName))
                ) && 
                (
                    this.ItemSubGroup == input.ItemSubGroup ||
                    (this.ItemSubGroup != null &&
                    this.ItemSubGroup.Equals(input.ItemSubGroup))
                ) && 
                (
                    this.ItemSubGroupName == input.ItemSubGroupName ||
                    (this.ItemSubGroupName != null &&
                    this.ItemSubGroupName.Equals(input.ItemSubGroupName))
                ) && 
                (
                    this.ItemProductCode == input.ItemProductCode ||
                    (this.ItemProductCode != null &&
                    this.ItemProductCode.Equals(input.ItemProductCode))
                ) && 
                (
                    this.ItemProductCodeName == input.ItemProductCodeName ||
                    (this.ItemProductCodeName != null &&
                    this.ItemProductCodeName.Equals(input.ItemProductCodeName))
                ) && 
                (
                    this.ItemAccountCode == input.ItemAccountCode ||
                    (this.ItemAccountCode != null &&
                    this.ItemAccountCode.Equals(input.ItemAccountCode))
                ) && 
                (
                    this.ItemAccountCodeName == input.ItemAccountCodeName ||
                    (this.ItemAccountCodeName != null &&
                    this.ItemAccountCodeName.Equals(input.ItemAccountCodeName))
                ) && 
                (
                    this.ItemSummaryCode == input.ItemSummaryCode ||
                    (this.ItemSummaryCode != null &&
                    this.ItemSummaryCode.Equals(input.ItemSummaryCode))
                ) && 
                (
                    this.ItemSummaryCodeName == input.ItemSummaryCodeName ||
                    (this.ItemSummaryCodeName != null &&
                    this.ItemSummaryCodeName.Equals(input.ItemSummaryCodeName))
                ) && 
                (
                    this.ItemSector == input.ItemSector ||
                    (this.ItemSector != null &&
                    this.ItemSector.Equals(input.ItemSector))
                ) && 
                (
                    this.ItemCubicFeet == input.ItemCubicFeet ||
                    (this.ItemCubicFeet != null &&
                    this.ItemCubicFeet.Equals(input.ItemCubicFeet))
                ) && 
                (
                    this.PoNo == input.PoNo ||
                    (this.PoNo != null &&
                    this.PoNo.Equals(input.PoNo))
                ) && 
                (
                    this.ReceiptDistributionDate == input.ReceiptDistributionDate ||
                    (this.ReceiptDistributionDate != null &&
                    this.ReceiptDistributionDate.Equals(input.ReceiptDistributionDate))
                ) && 
                (
                    this.ReceiptUnitsPerWrap == input.ReceiptUnitsPerWrap ||
                    (this.ReceiptUnitsPerWrap != null &&
                    this.ReceiptUnitsPerWrap.Equals(input.ReceiptUnitsPerWrap))
                ) && 
                (
                    this.ReceiptQuantityPerInnerPack == input.ReceiptQuantityPerInnerPack ||
                    (this.ReceiptQuantityPerInnerPack != null &&
                    this.ReceiptQuantityPerInnerPack.Equals(input.ReceiptQuantityPerInnerPack))
                ) && 
                (
                    this.ReceiptQuantityPerCase == input.ReceiptQuantityPerCase ||
                    (this.ReceiptQuantityPerCase != null &&
                    this.ReceiptQuantityPerCase.Equals(input.ReceiptQuantityPerCase))
                ) && 
                (
                    this.ReceiptQuantityPerPallet == input.ReceiptQuantityPerPallet ||
                    (this.ReceiptQuantityPerPallet != null &&
                    this.ReceiptQuantityPerPallet.Equals(input.ReceiptQuantityPerPallet))
                ) && 
                (
                    this.ReceiptRevisionDate == input.ReceiptRevisionDate ||
                    (this.ReceiptRevisionDate != null &&
                    this.ReceiptRevisionDate.Equals(input.ReceiptRevisionDate))
                ) && 
                (
                    this.ReceiptProductionLot == input.ReceiptProductionLot ||
                    (this.ReceiptProductionLot != null &&
                    this.ReceiptProductionLot.Equals(input.ReceiptProductionLot))
                ) && 
                (
                    this.ReceiptReceiveDate == input.ReceiptReceiveDate ||
                    (this.ReceiptReceiveDate != null &&
                    this.ReceiptReceiveDate.Equals(input.ReceiptReceiveDate))
                ) && 
                (
                    this.ReceiptStatus == input.ReceiptStatus ||
                    (this.ReceiptStatus != null &&
                    this.ReceiptStatus.Equals(input.ReceiptStatus))
                ) && 
                (
                    this.ReceiptStatusName == input.ReceiptStatusName ||
                    (this.ReceiptStatusName != null &&
                    this.ReceiptStatusName.Equals(input.ReceiptStatusName))
                ) && 
                (
                    this.ReceiptUnitCode == input.ReceiptUnitCode ||
                    (this.ReceiptUnitCode != null &&
                    this.ReceiptUnitCode.Equals(input.ReceiptUnitCode))
                ) && 
                (
                    this.ReceiptUnitCodeText == input.ReceiptUnitCodeText ||
                    (this.ReceiptUnitCodeText != null &&
                    this.ReceiptUnitCodeText.Equals(input.ReceiptUnitCodeText))
                ) && 
                (
                    this.ReceiptWrapCode == input.ReceiptWrapCode ||
                    (this.ReceiptWrapCode != null &&
                    this.ReceiptWrapCode.Equals(input.ReceiptWrapCode))
                ) && 
                (
                    this.ReceiptWrapCodeText == input.ReceiptWrapCodeText ||
                    (this.ReceiptWrapCodeText != null &&
                    this.ReceiptWrapCodeText.Equals(input.ReceiptWrapCodeText))
                ) && 
                (
                    this.ReceiptCaseWeight == input.ReceiptCaseWeight ||
                    (this.ReceiptCaseWeight != null &&
                    this.ReceiptCaseWeight.Equals(input.ReceiptCaseWeight))
                ) && 
                (
                    this.ReceiptProductIdTag == input.ReceiptProductIdTag ||
                    (this.ReceiptProductIdTag != null &&
                    this.ReceiptProductIdTag.Equals(input.ReceiptProductIdTag))
                ) && 
                (
                    this.AlcoholType == input.AlcoholType ||
                    (this.AlcoholType != null &&
                    this.AlcoholType.Equals(input.AlcoholType))
                ) && 
                (
                    this.AlcoholTypeName == input.AlcoholTypeName ||
                    (this.AlcoholTypeName != null &&
                    this.AlcoholTypeName.Equals(input.AlcoholTypeName))
                ) && 
                (
                    this.AlcoholContent == input.AlcoholContent ||
                    (this.AlcoholContent != null &&
                    this.AlcoholContent.Equals(input.AlcoholContent))
                ) && 
                (
                    this.AlcoholContainer == input.AlcoholContainer ||
                    (this.AlcoholContainer != null &&
                    this.AlcoholContainer.Equals(input.AlcoholContainer))
                ) && 
                (
                    this.AlcoholContainerName == input.AlcoholContainerName ||
                    (this.AlcoholContainerName != null &&
                    this.AlcoholContainerName.Equals(input.AlcoholContainerName))
                ) && 
                (
                    this.AlcoholContainerVolume == input.AlcoholContainerVolume ||
                    (this.AlcoholContainerVolume != null &&
                    this.AlcoholContainerVolume.Equals(input.AlcoholContainerVolume))
                ) && 
                (
                    this.AlcoholVintageYear == input.AlcoholVintageYear ||
                    (this.AlcoholVintageYear != null &&
                    this.AlcoholVintageYear.Equals(input.AlcoholVintageYear))
                ) && 
                (
                    this.AlcoholCountry == input.AlcoholCountry ||
                    (this.AlcoholCountry != null &&
                    this.AlcoholCountry.Equals(input.AlcoholCountry))
                ) && 
                (
                    this.AlcoholCountryName == input.AlcoholCountryName ||
                    (this.AlcoholCountryName != null &&
                    this.AlcoholCountryName.Equals(input.AlcoholCountryName))
                ) && 
                (
                    this.AlcoholState == input.AlcoholState ||
                    (this.AlcoholState != null &&
                    this.AlcoholState.Equals(input.AlcoholState))
                ) && 
                (
                    this.AlcoholRegion == input.AlcoholRegion ||
                    (this.AlcoholRegion != null &&
                    this.AlcoholRegion.Equals(input.AlcoholRegion))
                ) && 
                (
                    this.AlcoholBrand == input.AlcoholBrand ||
                    (this.AlcoholBrand != null &&
                    this.AlcoholBrand.Equals(input.AlcoholBrand))
                ) && 
                (
                    this.AlcoholUPCCode == input.AlcoholUPCCode ||
                    (this.AlcoholUPCCode != null &&
                    this.AlcoholUPCCode.Equals(input.AlcoholUPCCode))
                ) && 
                (
                    this.AlcoholNABCACode == input.AlcoholNABCACode ||
                    (this.AlcoholNABCACode != null &&
                    this.AlcoholNABCACode.Equals(input.AlcoholNABCACode))
                ) && 
                (
                    this.AlcoholUNIMERCCode == input.AlcoholUNIMERCCode ||
                    (this.AlcoholUNIMERCCode != null &&
                    this.AlcoholUNIMERCCode.Equals(input.AlcoholUNIMERCCode))
                ) && 
                (
                    this.AlcoholSCCCode == input.AlcoholSCCCode ||
                    (this.AlcoholSCCCode != null &&
                    this.AlcoholSCCCode.Equals(input.AlcoholSCCCode))
                ) && 
                (
                    this.CustomFields == input.CustomFields ||
                    this.CustomFields != null &&
                    this.CustomFields.SequenceEqual(input.CustomFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.WarehouseLocationId != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationId.GetHashCode();
                if (this.ItemId != null)
                    hashCode = hashCode * 59 + this.ItemId.GetHashCode();
                if (this.ItemDescription != null)
                    hashCode = hashCode * 59 + this.ItemDescription.GetHashCode();
                if (this.LobId != null)
                    hashCode = hashCode * 59 + this.LobId.GetHashCode();
                if (this.SnapshotDate != null)
                    hashCode = hashCode * 59 + this.SnapshotDate.GetHashCode();
                if (this.IsMixedReceipts != null)
                    hashCode = hashCode * 59 + this.IsMixedReceipts.GetHashCode();
                if (this.Quantity != null)
                    hashCode = hashCode * 59 + this.Quantity.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.EstimatedInnerPacks != null)
                    hashCode = hashCode * 59 + this.EstimatedInnerPacks.GetHashCode();
                if (this.EstimatedCases != null)
                    hashCode = hashCode * 59 + this.EstimatedCases.GetHashCode();
                if (this.EstimatedPallets != null)
                    hashCode = hashCode * 59 + this.EstimatedPallets.GetHashCode();
                if (this.InventoryValue != null)
                    hashCode = hashCode * 59 + this.InventoryValue.GetHashCode();
                if (this.InventoryAgeDays != null)
                    hashCode = hashCode * 59 + this.InventoryAgeDays.GetHashCode();
                if (this.WarehouseId != null)
                    hashCode = hashCode * 59 + this.WarehouseId.GetHashCode();
                if (this.WarehouseName != null)
                    hashCode = hashCode * 59 + this.WarehouseName.GetHashCode();
                if (this.WarehouseZoneId != null)
                    hashCode = hashCode * 59 + this.WarehouseZoneId.GetHashCode();
                if (this.WarehouseZoneName != null)
                    hashCode = hashCode * 59 + this.WarehouseZoneName.GetHashCode();
                if (this.WarehouseZoneAddress != null)
                    hashCode = hashCode * 59 + this.WarehouseZoneAddress.GetHashCode();
                if (this.WarehouseBuildingId != null)
                    hashCode = hashCode * 59 + this.WarehouseBuildingId.GetHashCode();
                if (this.WarehouseBuildingName != null)
                    hashCode = hashCode * 59 + this.WarehouseBuildingName.GetHashCode();
                if (this.WarehouseAisleId != null)
                    hashCode = hashCode * 59 + this.WarehouseAisleId.GetHashCode();
                if (this.WarehouseAisleAddress != null)
                    hashCode = hashCode * 59 + this.WarehouseAisleAddress.GetHashCode();
                if (this.WarehouseLocationOriginId != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationOriginId.GetHashCode();
                if (this.WarehouseLocationOriginName != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationOriginName.GetHashCode();
                if (this.WarehouseLocationBillingTypeId != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationBillingTypeId.GetHashCode();
                if (this.WarehouseLocationBillingTypeName != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationBillingTypeName.GetHashCode();
                if (this.WarehouseLocationBehaviorTypeId != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationBehaviorTypeId.GetHashCode();
                if (this.WarehouseLocationBehaviorTypeName != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationBehaviorTypeName.GetHashCode();
                if (this.WarehouseLocationFootprintId != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationFootprintId.GetHashCode();
                if (this.WarehouseLocationFootprintName != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationFootprintName.GetHashCode();
                if (this.WarehouseLocationFootprintWidth != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationFootprintWidth.GetHashCode();
                if (this.WarehouseLocationFootprintHeight != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationFootprintHeight.GetHashCode();
                if (this.WarehouseLocationFootprintDepth != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationFootprintDepth.GetHashCode();
                if (this.WarehouseLocationCubicFeet != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationCubicFeet.GetHashCode();
                if (this.WarehouseLocationLevel != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationLevel.GetHashCode();
                if (this.WarehouseLocationBay != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationBay.GetHashCode();
                if (this.WarehouseLocationNumber != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationNumber.GetHashCode();
                if (this.WarehouseLocationOnline != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationOnline.GetHashCode();
                if (this.WarehouseLocationPriorityCode != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationPriorityCode.GetHashCode();
                if (this.WarehouseLocationAllowItemMixing != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationAllowItemMixing.GetHashCode();
                if (this.WarehouseLocationCost != null)
                    hashCode = hashCode * 59 + this.WarehouseLocationCost.GetHashCode();
                if (this.Sku != null)
                    hashCode = hashCode * 59 + this.Sku.GetHashCode();
                if (this.ItemVendorSku != null)
                    hashCode = hashCode * 59 + this.ItemVendorSku.GetHashCode();
                if (this.ItemUpc != null)
                    hashCode = hashCode * 59 + this.ItemUpc.GetHashCode();
                if (this.ItemMajorGroup != null)
                    hashCode = hashCode * 59 + this.ItemMajorGroup.GetHashCode();
                if (this.ItemMajorGroupName != null)
                    hashCode = hashCode * 59 + this.ItemMajorGroupName.GetHashCode();
                if (this.ItemSubGroup != null)
                    hashCode = hashCode * 59 + this.ItemSubGroup.GetHashCode();
                if (this.ItemSubGroupName != null)
                    hashCode = hashCode * 59 + this.ItemSubGroupName.GetHashCode();
                if (this.ItemProductCode != null)
                    hashCode = hashCode * 59 + this.ItemProductCode.GetHashCode();
                if (this.ItemProductCodeName != null)
                    hashCode = hashCode * 59 + this.ItemProductCodeName.GetHashCode();
                if (this.ItemAccountCode != null)
                    hashCode = hashCode * 59 + this.ItemAccountCode.GetHashCode();
                if (this.ItemAccountCodeName != null)
                    hashCode = hashCode * 59 + this.ItemAccountCodeName.GetHashCode();
                if (this.ItemSummaryCode != null)
                    hashCode = hashCode * 59 + this.ItemSummaryCode.GetHashCode();
                if (this.ItemSummaryCodeName != null)
                    hashCode = hashCode * 59 + this.ItemSummaryCodeName.GetHashCode();
                if (this.ItemSector != null)
                    hashCode = hashCode * 59 + this.ItemSector.GetHashCode();
                if (this.ItemCubicFeet != null)
                    hashCode = hashCode * 59 + this.ItemCubicFeet.GetHashCode();
                if (this.PoNo != null)
                    hashCode = hashCode * 59 + this.PoNo.GetHashCode();
                if (this.ReceiptDistributionDate != null)
                    hashCode = hashCode * 59 + this.ReceiptDistributionDate.GetHashCode();
                if (this.ReceiptUnitsPerWrap != null)
                    hashCode = hashCode * 59 + this.ReceiptUnitsPerWrap.GetHashCode();
                if (this.ReceiptQuantityPerInnerPack != null)
                    hashCode = hashCode * 59 + this.ReceiptQuantityPerInnerPack.GetHashCode();
                if (this.ReceiptQuantityPerCase != null)
                    hashCode = hashCode * 59 + this.ReceiptQuantityPerCase.GetHashCode();
                if (this.ReceiptQuantityPerPallet != null)
                    hashCode = hashCode * 59 + this.ReceiptQuantityPerPallet.GetHashCode();
                if (this.ReceiptRevisionDate != null)
                    hashCode = hashCode * 59 + this.ReceiptRevisionDate.GetHashCode();
                if (this.ReceiptProductionLot != null)
                    hashCode = hashCode * 59 + this.ReceiptProductionLot.GetHashCode();
                if (this.ReceiptReceiveDate != null)
                    hashCode = hashCode * 59 + this.ReceiptReceiveDate.GetHashCode();
                if (this.ReceiptStatus != null)
                    hashCode = hashCode * 59 + this.ReceiptStatus.GetHashCode();
                if (this.ReceiptStatusName != null)
                    hashCode = hashCode * 59 + this.ReceiptStatusName.GetHashCode();
                if (this.ReceiptUnitCode != null)
                    hashCode = hashCode * 59 + this.ReceiptUnitCode.GetHashCode();
                if (this.ReceiptUnitCodeText != null)
                    hashCode = hashCode * 59 + this.ReceiptUnitCodeText.GetHashCode();
                if (this.ReceiptWrapCode != null)
                    hashCode = hashCode * 59 + this.ReceiptWrapCode.GetHashCode();
                if (this.ReceiptWrapCodeText != null)
                    hashCode = hashCode * 59 + this.ReceiptWrapCodeText.GetHashCode();
                if (this.ReceiptCaseWeight != null)
                    hashCode = hashCode * 59 + this.ReceiptCaseWeight.GetHashCode();
                if (this.ReceiptProductIdTag != null)
                    hashCode = hashCode * 59 + this.ReceiptProductIdTag.GetHashCode();
                if (this.AlcoholType != null)
                    hashCode = hashCode * 59 + this.AlcoholType.GetHashCode();
                if (this.AlcoholTypeName != null)
                    hashCode = hashCode * 59 + this.AlcoholTypeName.GetHashCode();
                if (this.AlcoholContent != null)
                    hashCode = hashCode * 59 + this.AlcoholContent.GetHashCode();
                if (this.AlcoholContainer != null)
                    hashCode = hashCode * 59 + this.AlcoholContainer.GetHashCode();
                if (this.AlcoholContainerName != null)
                    hashCode = hashCode * 59 + this.AlcoholContainerName.GetHashCode();
                if (this.AlcoholContainerVolume != null)
                    hashCode = hashCode * 59 + this.AlcoholContainerVolume.GetHashCode();
                if (this.AlcoholVintageYear != null)
                    hashCode = hashCode * 59 + this.AlcoholVintageYear.GetHashCode();
                if (this.AlcoholCountry != null)
                    hashCode = hashCode * 59 + this.AlcoholCountry.GetHashCode();
                if (this.AlcoholCountryName != null)
                    hashCode = hashCode * 59 + this.AlcoholCountryName.GetHashCode();
                if (this.AlcoholState != null)
                    hashCode = hashCode * 59 + this.AlcoholState.GetHashCode();
                if (this.AlcoholRegion != null)
                    hashCode = hashCode * 59 + this.AlcoholRegion.GetHashCode();
                if (this.AlcoholBrand != null)
                    hashCode = hashCode * 59 + this.AlcoholBrand.GetHashCode();
                if (this.AlcoholUPCCode != null)
                    hashCode = hashCode * 59 + this.AlcoholUPCCode.GetHashCode();
                if (this.AlcoholNABCACode != null)
                    hashCode = hashCode * 59 + this.AlcoholNABCACode.GetHashCode();
                if (this.AlcoholUNIMERCCode != null)
                    hashCode = hashCode * 59 + this.AlcoholUNIMERCCode.GetHashCode();
                if (this.AlcoholSCCCode != null)
                    hashCode = hashCode * 59 + this.AlcoholSCCCode.GetHashCode();
                if (this.CustomFields != null)
                    hashCode = hashCode * 59 + this.CustomFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
