/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Infoplus.Client.SwaggerDateConverter;

namespace Infoplus.Model
{
    /// <summary>
    /// ItemSerial
    /// </summary>
    [DataContract]
    public partial class ItemSerial :  IEquatable<ItemSerial>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ItemSerial" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ItemSerial() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ItemSerial" /> class.
        /// </summary>
        /// <param name="ItemReceiptId">ItemReceiptId.</param>
        /// <param name="LobId">LobId (required).</param>
        /// <param name="AsnId">AsnId.</param>
        /// <param name="OrderNoId">OrderNoId.</param>
        /// <param name="Serial">Serial (required).</param>
        /// <param name="S0">S0.</param>
        /// <param name="S1">S1.</param>
        /// <param name="S2">S2.</param>
        /// <param name="S3">S3.</param>
        /// <param name="S4">S4.</param>
        /// <param name="S5">S5.</param>
        /// <param name="S6">S6.</param>
        /// <param name="S7">S7.</param>
        /// <param name="S8">S8.</param>
        /// <param name="S9">S9.</param>
        /// <param name="S10">S10.</param>
        /// <param name="S11">S11.</param>
        /// <param name="S12">S12.</param>
        /// <param name="S13">S13.</param>
        /// <param name="S14">S14.</param>
        /// <param name="S15">S15.</param>
        /// <param name="S16">S16.</param>
        /// <param name="S17">S17.</param>
        /// <param name="S18">S18.</param>
        /// <param name="S19">S19.</param>
        /// <param name="CustomFields">CustomFields.</param>
        /// <param name="Sku">Sku.</param>
        public ItemSerial(int? ItemReceiptId = default(int?), int? LobId = default(int?), int? AsnId = default(int?), decimal? OrderNoId = default(decimal?), string Serial = default(string), string S0 = default(string), string S1 = default(string), string S2 = default(string), string S3 = default(string), string S4 = default(string), string S5 = default(string), string S6 = default(string), string S7 = default(string), string S8 = default(string), string S9 = default(string), string S10 = default(string), string S11 = default(string), string S12 = default(string), string S13 = default(string), string S14 = default(string), string S15 = default(string), string S16 = default(string), string S17 = default(string), string S18 = default(string), string S19 = default(string), Dictionary<string, Object> CustomFields = default(Dictionary<string, Object>), string Sku = default(string))
        {
            // to ensure "LobId" is required (not null)
            if (LobId == null)
            {
                throw new InvalidDataException("LobId is a required property for ItemSerial and cannot be null");
            }
            else
            {
                this.LobId = LobId;
            }
            // to ensure "Serial" is required (not null)
            if (Serial == null)
            {
                throw new InvalidDataException("Serial is a required property for ItemSerial and cannot be null");
            }
            else
            {
                this.Serial = Serial;
            }
            this.ItemReceiptId = ItemReceiptId;
            this.AsnId = AsnId;
            this.OrderNoId = OrderNoId;
            this.S0 = S0;
            this.S1 = S1;
            this.S2 = S2;
            this.S3 = S3;
            this.S4 = S4;
            this.S5 = S5;
            this.S6 = S6;
            this.S7 = S7;
            this.S8 = S8;
            this.S9 = S9;
            this.S10 = S10;
            this.S11 = S11;
            this.S12 = S12;
            this.S13 = S13;
            this.S14 = S14;
            this.S15 = S15;
            this.S16 = S16;
            this.S17 = S17;
            this.S18 = S18;
            this.S19 = S19;
            this.CustomFields = CustomFields;
            this.Sku = Sku;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; private set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name="createDate", EmitDefaultValue=false)]
        public DateTime? CreateDate { get; private set; }

        /// <summary>
        /// Gets or Sets ModifyDate
        /// </summary>
        [DataMember(Name="modifyDate", EmitDefaultValue=false)]
        public DateTime? ModifyDate { get; private set; }

        /// <summary>
        /// Gets or Sets ItemReceiptId
        /// </summary>
        [DataMember(Name="itemReceiptId", EmitDefaultValue=false)]
        public int? ItemReceiptId { get; set; }

        /// <summary>
        /// Gets or Sets LobId
        /// </summary>
        [DataMember(Name="lobId", EmitDefaultValue=false)]
        public int? LobId { get; set; }

        /// <summary>
        /// Gets or Sets AsnId
        /// </summary>
        [DataMember(Name="asnId", EmitDefaultValue=false)]
        public int? AsnId { get; set; }

        /// <summary>
        /// Gets or Sets OrderNoId
        /// </summary>
        [DataMember(Name="orderNoId", EmitDefaultValue=false)]
        public decimal? OrderNoId { get; set; }

        /// <summary>
        /// Gets or Sets Serial
        /// </summary>
        [DataMember(Name="serial", EmitDefaultValue=false)]
        public string Serial { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedDate
        /// </summary>
        [DataMember(Name="receivedDate", EmitDefaultValue=false)]
        public DateTime? ReceivedDate { get; private set; }

        /// <summary>
        /// Gets or Sets ShippedDate
        /// </summary>
        [DataMember(Name="shippedDate", EmitDefaultValue=false)]
        public DateTime? ShippedDate { get; private set; }

        /// <summary>
        /// Gets or Sets InInventory
        /// </summary>
        [DataMember(Name="inInventory", EmitDefaultValue=false)]
        public bool? InInventory { get; private set; }

        /// <summary>
        /// Gets or Sets S0
        /// </summary>
        [DataMember(Name="s0", EmitDefaultValue=false)]
        public string S0 { get; set; }

        /// <summary>
        /// Gets or Sets S1
        /// </summary>
        [DataMember(Name="s1", EmitDefaultValue=false)]
        public string S1 { get; set; }

        /// <summary>
        /// Gets or Sets S2
        /// </summary>
        [DataMember(Name="s2", EmitDefaultValue=false)]
        public string S2 { get; set; }

        /// <summary>
        /// Gets or Sets S3
        /// </summary>
        [DataMember(Name="s3", EmitDefaultValue=false)]
        public string S3 { get; set; }

        /// <summary>
        /// Gets or Sets S4
        /// </summary>
        [DataMember(Name="s4", EmitDefaultValue=false)]
        public string S4 { get; set; }

        /// <summary>
        /// Gets or Sets S5
        /// </summary>
        [DataMember(Name="s5", EmitDefaultValue=false)]
        public string S5 { get; set; }

        /// <summary>
        /// Gets or Sets S6
        /// </summary>
        [DataMember(Name="s6", EmitDefaultValue=false)]
        public string S6 { get; set; }

        /// <summary>
        /// Gets or Sets S7
        /// </summary>
        [DataMember(Name="s7", EmitDefaultValue=false)]
        public string S7 { get; set; }

        /// <summary>
        /// Gets or Sets S8
        /// </summary>
        [DataMember(Name="s8", EmitDefaultValue=false)]
        public string S8 { get; set; }

        /// <summary>
        /// Gets or Sets S9
        /// </summary>
        [DataMember(Name="s9", EmitDefaultValue=false)]
        public string S9 { get; set; }

        /// <summary>
        /// Gets or Sets S10
        /// </summary>
        [DataMember(Name="s10", EmitDefaultValue=false)]
        public string S10 { get; set; }

        /// <summary>
        /// Gets or Sets S11
        /// </summary>
        [DataMember(Name="s11", EmitDefaultValue=false)]
        public string S11 { get; set; }

        /// <summary>
        /// Gets or Sets S12
        /// </summary>
        [DataMember(Name="s12", EmitDefaultValue=false)]
        public string S12 { get; set; }

        /// <summary>
        /// Gets or Sets S13
        /// </summary>
        [DataMember(Name="s13", EmitDefaultValue=false)]
        public string S13 { get; set; }

        /// <summary>
        /// Gets or Sets S14
        /// </summary>
        [DataMember(Name="s14", EmitDefaultValue=false)]
        public string S14 { get; set; }

        /// <summary>
        /// Gets or Sets S15
        /// </summary>
        [DataMember(Name="s15", EmitDefaultValue=false)]
        public string S15 { get; set; }

        /// <summary>
        /// Gets or Sets S16
        /// </summary>
        [DataMember(Name="s16", EmitDefaultValue=false)]
        public string S16 { get; set; }

        /// <summary>
        /// Gets or Sets S17
        /// </summary>
        [DataMember(Name="s17", EmitDefaultValue=false)]
        public string S17 { get; set; }

        /// <summary>
        /// Gets or Sets S18
        /// </summary>
        [DataMember(Name="s18", EmitDefaultValue=false)]
        public string S18 { get; set; }

        /// <summary>
        /// Gets or Sets S19
        /// </summary>
        [DataMember(Name="s19", EmitDefaultValue=false)]
        public string S19 { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name="customFields", EmitDefaultValue=false)]
        public Dictionary<string, Object> CustomFields { get; set; }

        /// <summary>
        /// Gets or Sets Sku
        /// </summary>
        [DataMember(Name="sku", EmitDefaultValue=false)]
        public string Sku { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ItemSerial {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  ModifyDate: ").Append(ModifyDate).Append("\n");
            sb.Append("  ItemReceiptId: ").Append(ItemReceiptId).Append("\n");
            sb.Append("  LobId: ").Append(LobId).Append("\n");
            sb.Append("  AsnId: ").Append(AsnId).Append("\n");
            sb.Append("  OrderNoId: ").Append(OrderNoId).Append("\n");
            sb.Append("  Serial: ").Append(Serial).Append("\n");
            sb.Append("  ReceivedDate: ").Append(ReceivedDate).Append("\n");
            sb.Append("  ShippedDate: ").Append(ShippedDate).Append("\n");
            sb.Append("  InInventory: ").Append(InInventory).Append("\n");
            sb.Append("  S0: ").Append(S0).Append("\n");
            sb.Append("  S1: ").Append(S1).Append("\n");
            sb.Append("  S2: ").Append(S2).Append("\n");
            sb.Append("  S3: ").Append(S3).Append("\n");
            sb.Append("  S4: ").Append(S4).Append("\n");
            sb.Append("  S5: ").Append(S5).Append("\n");
            sb.Append("  S6: ").Append(S6).Append("\n");
            sb.Append("  S7: ").Append(S7).Append("\n");
            sb.Append("  S8: ").Append(S8).Append("\n");
            sb.Append("  S9: ").Append(S9).Append("\n");
            sb.Append("  S10: ").Append(S10).Append("\n");
            sb.Append("  S11: ").Append(S11).Append("\n");
            sb.Append("  S12: ").Append(S12).Append("\n");
            sb.Append("  S13: ").Append(S13).Append("\n");
            sb.Append("  S14: ").Append(S14).Append("\n");
            sb.Append("  S15: ").Append(S15).Append("\n");
            sb.Append("  S16: ").Append(S16).Append("\n");
            sb.Append("  S17: ").Append(S17).Append("\n");
            sb.Append("  S18: ").Append(S18).Append("\n");
            sb.Append("  S19: ").Append(S19).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("  Sku: ").Append(Sku).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ItemSerial);
        }

        /// <summary>
        /// Returns true if ItemSerial instances are equal
        /// </summary>
        /// <param name="input">Instance of ItemSerial to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ItemSerial input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.CreateDate == input.CreateDate ||
                    (this.CreateDate != null &&
                    this.CreateDate.Equals(input.CreateDate))
                ) && 
                (
                    this.ModifyDate == input.ModifyDate ||
                    (this.ModifyDate != null &&
                    this.ModifyDate.Equals(input.ModifyDate))
                ) && 
                (
                    this.ItemReceiptId == input.ItemReceiptId ||
                    (this.ItemReceiptId != null &&
                    this.ItemReceiptId.Equals(input.ItemReceiptId))
                ) && 
                (
                    this.LobId == input.LobId ||
                    (this.LobId != null &&
                    this.LobId.Equals(input.LobId))
                ) && 
                (
                    this.AsnId == input.AsnId ||
                    (this.AsnId != null &&
                    this.AsnId.Equals(input.AsnId))
                ) && 
                (
                    this.OrderNoId == input.OrderNoId ||
                    (this.OrderNoId != null &&
                    this.OrderNoId.Equals(input.OrderNoId))
                ) && 
                (
                    this.Serial == input.Serial ||
                    (this.Serial != null &&
                    this.Serial.Equals(input.Serial))
                ) && 
                (
                    this.ReceivedDate == input.ReceivedDate ||
                    (this.ReceivedDate != null &&
                    this.ReceivedDate.Equals(input.ReceivedDate))
                ) && 
                (
                    this.ShippedDate == input.ShippedDate ||
                    (this.ShippedDate != null &&
                    this.ShippedDate.Equals(input.ShippedDate))
                ) && 
                (
                    this.InInventory == input.InInventory ||
                    (this.InInventory != null &&
                    this.InInventory.Equals(input.InInventory))
                ) && 
                (
                    this.S0 == input.S0 ||
                    (this.S0 != null &&
                    this.S0.Equals(input.S0))
                ) && 
                (
                    this.S1 == input.S1 ||
                    (this.S1 != null &&
                    this.S1.Equals(input.S1))
                ) && 
                (
                    this.S2 == input.S2 ||
                    (this.S2 != null &&
                    this.S2.Equals(input.S2))
                ) && 
                (
                    this.S3 == input.S3 ||
                    (this.S3 != null &&
                    this.S3.Equals(input.S3))
                ) && 
                (
                    this.S4 == input.S4 ||
                    (this.S4 != null &&
                    this.S4.Equals(input.S4))
                ) && 
                (
                    this.S5 == input.S5 ||
                    (this.S5 != null &&
                    this.S5.Equals(input.S5))
                ) && 
                (
                    this.S6 == input.S6 ||
                    (this.S6 != null &&
                    this.S6.Equals(input.S6))
                ) && 
                (
                    this.S7 == input.S7 ||
                    (this.S7 != null &&
                    this.S7.Equals(input.S7))
                ) && 
                (
                    this.S8 == input.S8 ||
                    (this.S8 != null &&
                    this.S8.Equals(input.S8))
                ) && 
                (
                    this.S9 == input.S9 ||
                    (this.S9 != null &&
                    this.S9.Equals(input.S9))
                ) && 
                (
                    this.S10 == input.S10 ||
                    (this.S10 != null &&
                    this.S10.Equals(input.S10))
                ) && 
                (
                    this.S11 == input.S11 ||
                    (this.S11 != null &&
                    this.S11.Equals(input.S11))
                ) && 
                (
                    this.S12 == input.S12 ||
                    (this.S12 != null &&
                    this.S12.Equals(input.S12))
                ) && 
                (
                    this.S13 == input.S13 ||
                    (this.S13 != null &&
                    this.S13.Equals(input.S13))
                ) && 
                (
                    this.S14 == input.S14 ||
                    (this.S14 != null &&
                    this.S14.Equals(input.S14))
                ) && 
                (
                    this.S15 == input.S15 ||
                    (this.S15 != null &&
                    this.S15.Equals(input.S15))
                ) && 
                (
                    this.S16 == input.S16 ||
                    (this.S16 != null &&
                    this.S16.Equals(input.S16))
                ) && 
                (
                    this.S17 == input.S17 ||
                    (this.S17 != null &&
                    this.S17.Equals(input.S17))
                ) && 
                (
                    this.S18 == input.S18 ||
                    (this.S18 != null &&
                    this.S18.Equals(input.S18))
                ) && 
                (
                    this.S19 == input.S19 ||
                    (this.S19 != null &&
                    this.S19.Equals(input.S19))
                ) && 
                (
                    this.CustomFields == input.CustomFields ||
                    this.CustomFields != null &&
                    this.CustomFields.SequenceEqual(input.CustomFields)
                ) && 
                (
                    this.Sku == input.Sku ||
                    (this.Sku != null &&
                    this.Sku.Equals(input.Sku))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.CreateDate != null)
                    hashCode = hashCode * 59 + this.CreateDate.GetHashCode();
                if (this.ModifyDate != null)
                    hashCode = hashCode * 59 + this.ModifyDate.GetHashCode();
                if (this.ItemReceiptId != null)
                    hashCode = hashCode * 59 + this.ItemReceiptId.GetHashCode();
                if (this.LobId != null)
                    hashCode = hashCode * 59 + this.LobId.GetHashCode();
                if (this.AsnId != null)
                    hashCode = hashCode * 59 + this.AsnId.GetHashCode();
                if (this.OrderNoId != null)
                    hashCode = hashCode * 59 + this.OrderNoId.GetHashCode();
                if (this.Serial != null)
                    hashCode = hashCode * 59 + this.Serial.GetHashCode();
                if (this.ReceivedDate != null)
                    hashCode = hashCode * 59 + this.ReceivedDate.GetHashCode();
                if (this.ShippedDate != null)
                    hashCode = hashCode * 59 + this.ShippedDate.GetHashCode();
                if (this.InInventory != null)
                    hashCode = hashCode * 59 + this.InInventory.GetHashCode();
                if (this.S0 != null)
                    hashCode = hashCode * 59 + this.S0.GetHashCode();
                if (this.S1 != null)
                    hashCode = hashCode * 59 + this.S1.GetHashCode();
                if (this.S2 != null)
                    hashCode = hashCode * 59 + this.S2.GetHashCode();
                if (this.S3 != null)
                    hashCode = hashCode * 59 + this.S3.GetHashCode();
                if (this.S4 != null)
                    hashCode = hashCode * 59 + this.S4.GetHashCode();
                if (this.S5 != null)
                    hashCode = hashCode * 59 + this.S5.GetHashCode();
                if (this.S6 != null)
                    hashCode = hashCode * 59 + this.S6.GetHashCode();
                if (this.S7 != null)
                    hashCode = hashCode * 59 + this.S7.GetHashCode();
                if (this.S8 != null)
                    hashCode = hashCode * 59 + this.S8.GetHashCode();
                if (this.S9 != null)
                    hashCode = hashCode * 59 + this.S9.GetHashCode();
                if (this.S10 != null)
                    hashCode = hashCode * 59 + this.S10.GetHashCode();
                if (this.S11 != null)
                    hashCode = hashCode * 59 + this.S11.GetHashCode();
                if (this.S12 != null)
                    hashCode = hashCode * 59 + this.S12.GetHashCode();
                if (this.S13 != null)
                    hashCode = hashCode * 59 + this.S13.GetHashCode();
                if (this.S14 != null)
                    hashCode = hashCode * 59 + this.S14.GetHashCode();
                if (this.S15 != null)
                    hashCode = hashCode * 59 + this.S15.GetHashCode();
                if (this.S16 != null)
                    hashCode = hashCode * 59 + this.S16.GetHashCode();
                if (this.S17 != null)
                    hashCode = hashCode * 59 + this.S17.GetHashCode();
                if (this.S18 != null)
                    hashCode = hashCode * 59 + this.S18.GetHashCode();
                if (this.S19 != null)
                    hashCode = hashCode * 59 + this.S19.GetHashCode();
                if (this.CustomFields != null)
                    hashCode = hashCode * 59 + this.CustomFields.GetHashCode();
                if (this.Sku != null)
                    hashCode = hashCode * 59 + this.Sku.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
