/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Infoplus.Client.SwaggerDateConverter;

namespace Infoplus.Model
{
    /// <summary>
    /// Order
    /// </summary>
    [DataContract]
    public partial class Order :  IEquatable<Order>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Order" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Order() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Order" /> class.
        /// </summary>
        /// <param name="CustomerOrderNo">CustomerOrderNo.</param>
        /// <param name="LobId">LobId (required).</param>
        /// <param name="WarehouseId">WarehouseId (required).</param>
        /// <param name="OrderDate">OrderDate.</param>
        /// <param name="CustomerNo">CustomerNo.</param>
        /// <param name="UseOrderNoRoot">UseOrderNoRoot.</param>
        /// <param name="ShippingMethod">ShippingMethod.</param>
        /// <param name="FirstShipDate">FirstShipDate.</param>
        /// <param name="LastShipDate">LastShipDate.</param>
        /// <param name="DeliverOnDate">DeliverOnDate.</param>
        /// <param name="NeedByDate">NeedByDate.</param>
        /// <param name="CarrierId">CarrierId.</param>
        /// <param name="ShipVia">ShipVia.</param>
        /// <param name="MediaCode">MediaCode.</param>
        /// <param name="LegacyRestrictionType">LegacyRestrictionType.</param>
        /// <param name="AlcoholOrderType">AlcoholOrderType.</param>
        /// <param name="AlternateUsage">AlternateUsage.</param>
        /// <param name="AuthorizedBy">AuthorizedBy.</param>
        /// <param name="BatchNo">BatchNo.</param>
        /// <param name="BillToAttention">BillToAttention.</param>
        /// <param name="BillToCompany">BillToCompany.</param>
        /// <param name="BillToStreet">BillToStreet.</param>
        /// <param name="BillToStreet2">BillToStreet2.</param>
        /// <param name="BillToStreet3">BillToStreet3.</param>
        /// <param name="BillToCity">BillToCity.</param>
        /// <param name="BillToState">BillToState.</param>
        /// <param name="BillToZip">BillToZip.</param>
        /// <param name="BillToCountry">BillToCountry.</param>
        /// <param name="BillToPhone">BillToPhone.</param>
        /// <param name="BillToEmail">BillToEmail.</param>
        /// <param name="ThirdPartyParcelAccountId">ThirdPartyParcelAccountId.</param>
        /// <param name="CostCenter">CostCenter.</param>
        /// <param name="CustomerPONo">CustomerPONo.</param>
        /// <param name="DistributionChannel">DistributionChannel.</param>
        /// <param name="Division">Division.</param>
        /// <param name="GiftMessageTo">GiftMessageTo.</param>
        /// <param name="GiftMessageFrom">GiftMessageFrom.</param>
        /// <param name="GiftMessage">GiftMessage.</param>
        /// <param name="HoldCode">HoldCode.</param>
        /// <param name="IntegrationPartnerId">IntegrationPartnerId.</param>
        /// <param name="OrderLoadProgramId">OrderLoadProgramId.</param>
        /// <param name="OrderMessage">OrderMessage.</param>
        /// <param name="OrderSourceId">OrderSourceId.</param>
        /// <param name="PackingSlipTemplateId">PackingSlipTemplateId.</param>
        /// <param name="OrderInvoiceTemplateId">OrderInvoiceTemplateId.</param>
        /// <param name="OrderEmailTemplateId">OrderEmailTemplateId.</param>
        /// <param name="ShipmentEmailTemplateId">ShipmentEmailTemplateId.</param>
        /// <param name="OutForDeliveryEmailTemplateId">OutForDeliveryEmailTemplateId.</param>
        /// <param name="DeliveredEmailTemplateId">DeliveredEmailTemplateId.</param>
        /// <param name="PriceLevel">PriceLevel.</param>
        /// <param name="PriceMode">PriceMode.</param>
        /// <param name="PriorityCode">PriorityCode.</param>
        /// <param name="ShipCode">ShipCode.</param>
        /// <param name="ShipToAttention">ShipToAttention.</param>
        /// <param name="ShipToCompany">ShipToCompany.</param>
        /// <param name="ShipToStreet">ShipToStreet.</param>
        /// <param name="ShipToStreet2">ShipToStreet2.</param>
        /// <param name="ShipToStreet3">ShipToStreet3.</param>
        /// <param name="ShipToCity">ShipToCity.</param>
        /// <param name="ShipToState">ShipToState.</param>
        /// <param name="ShipToZip">ShipToZip.</param>
        /// <param name="ShipToCountry">ShipToCountry.</param>
        /// <param name="ShipToPhone">ShipToPhone.</param>
        /// <param name="ShipToEmail">ShipToEmail.</param>
        /// <param name="ShippingCharge">ShippingCharge.</param>
        /// <param name="Subtotal">Subtotal.</param>
        /// <param name="Tax">Tax.</param>
        /// <param name="Total">Total.</param>
        /// <param name="TotalDiscount">TotalDiscount.</param>
        /// <param name="OrderAssemblyInstructions">OrderAssemblyInstructions.</param>
        /// <param name="ParcelLabelRef1">ParcelLabelRef1.</param>
        /// <param name="ParcelLabelRef2">ParcelLabelRef2.</param>
        /// <param name="ParcelLabelRef3">ParcelLabelRef3.</param>
        /// <param name="LineItems">LineItems (required).</param>
        /// <param name="RequestedParcelAccessories">RequestedParcelAccessories.</param>
        /// <param name="ExtraOrderData">ExtraOrderData.</param>
        /// <param name="ExtraLineItemData">ExtraLineItemData.</param>
        /// <param name="ServiceTypeId">ServiceTypeId.</param>
        /// <param name="WarehouseServiceTypeId">WarehouseServiceTypeId.</param>
        /// <param name="WarehouseServiceLevelId">WarehouseServiceLevelId.</param>
        /// <param name="EstimatedCartonizationPlan">EstimatedCartonizationPlan.</param>
        /// <param name="ManifestScriptId">ManifestScriptId.</param>
        /// <param name="StoreNo">StoreNo.</param>
        /// <param name="StoreName">StoreName.</param>
        /// <param name="DepartmentNo">DepartmentNo.</param>
        /// <param name="DepartmentName">DepartmentName.</param>
        /// <param name="VendorNo">VendorNo.</param>
        /// <param name="InternalUse91">InternalUse91.</param>
        /// <param name="CustomFields">CustomFields.</param>
        public Order(string CustomerOrderNo = default(string), int? LobId = default(int?), int? WarehouseId = default(int?), DateTime? OrderDate = default(DateTime?), string CustomerNo = default(string), int? UseOrderNoRoot = default(int?), string ShippingMethod = default(string), DateTime? FirstShipDate = default(DateTime?), DateTime? LastShipDate = default(DateTime?), DateTime? DeliverOnDate = default(DateTime?), DateTime? NeedByDate = default(DateTime?), int? CarrierId = default(int?), string ShipVia = default(string), string MediaCode = default(string), string LegacyRestrictionType = default(string), string AlcoholOrderType = default(string), string AlternateUsage = default(string), string AuthorizedBy = default(string), string BatchNo = default(string), string BillToAttention = default(string), string BillToCompany = default(string), string BillToStreet = default(string), string BillToStreet2 = default(string), string BillToStreet3 = default(string), string BillToCity = default(string), string BillToState = default(string), string BillToZip = default(string), string BillToCountry = default(string), string BillToPhone = default(string), string BillToEmail = default(string), int? ThirdPartyParcelAccountId = default(int?), string CostCenter = default(string), string CustomerPONo = default(string), string DistributionChannel = default(string), int? Division = default(int?), string GiftMessageTo = default(string), string GiftMessageFrom = default(string), string GiftMessage = default(string), string HoldCode = default(string), int? IntegrationPartnerId = default(int?), int? OrderLoadProgramId = default(int?), string OrderMessage = default(string), int? OrderSourceId = default(int?), int? PackingSlipTemplateId = default(int?), int? OrderInvoiceTemplateId = default(int?), int? OrderEmailTemplateId = default(int?), int? ShipmentEmailTemplateId = default(int?), int? OutForDeliveryEmailTemplateId = default(int?), int? DeliveredEmailTemplateId = default(int?), string PriceLevel = default(string), string PriceMode = default(string), int? PriorityCode = default(int?), string ShipCode = default(string), string ShipToAttention = default(string), string ShipToCompany = default(string), string ShipToStreet = default(string), string ShipToStreet2 = default(string), string ShipToStreet3 = default(string), string ShipToCity = default(string), string ShipToState = default(string), string ShipToZip = default(string), string ShipToCountry = default(string), string ShipToPhone = default(string), string ShipToEmail = default(string), decimal? ShippingCharge = default(decimal?), decimal? Subtotal = default(decimal?), decimal? Tax = default(decimal?), decimal? Total = default(decimal?), decimal? TotalDiscount = default(decimal?), string OrderAssemblyInstructions = default(string), string ParcelLabelRef1 = default(string), string ParcelLabelRef2 = default(string), string ParcelLabelRef3 = default(string), List<OrderLine> LineItems = default(List<OrderLine>), List<ReqParcelAccessoryData> RequestedParcelAccessories = default(List<ReqParcelAccessoryData>), List<OrderExtraOrderData> ExtraOrderData = default(List<OrderExtraOrderData>), List<OrderExtraLineItemData> ExtraLineItemData = default(List<OrderExtraLineItemData>), string ServiceTypeId = default(string), int? WarehouseServiceTypeId = default(int?), int? WarehouseServiceLevelId = default(int?), string EstimatedCartonizationPlan = default(string), int? ManifestScriptId = default(int?), string StoreNo = default(string), string StoreName = default(string), string DepartmentNo = default(string), string DepartmentName = default(string), string VendorNo = default(string), string InternalUse91 = default(string), Dictionary<string, Object> CustomFields = default(Dictionary<string, Object>))
        {
            // to ensure "LobId" is required (not null)
            if (LobId == null)
            {
                throw new InvalidDataException("LobId is a required property for Order and cannot be null");
            }
            else
            {
                this.LobId = LobId;
            }
            // to ensure "WarehouseId" is required (not null)
            if (WarehouseId == null)
            {
                throw new InvalidDataException("WarehouseId is a required property for Order and cannot be null");
            }
            else
            {
                this.WarehouseId = WarehouseId;
            }
            // to ensure "LineItems" is required (not null)
            if (LineItems == null)
            {
                throw new InvalidDataException("LineItems is a required property for Order and cannot be null");
            }
            else
            {
                this.LineItems = LineItems;
            }
            this.CustomerOrderNo = CustomerOrderNo;
            this.OrderDate = OrderDate;
            this.CustomerNo = CustomerNo;
            this.UseOrderNoRoot = UseOrderNoRoot;
            this.ShippingMethod = ShippingMethod;
            this.FirstShipDate = FirstShipDate;
            this.LastShipDate = LastShipDate;
            this.DeliverOnDate = DeliverOnDate;
            this.NeedByDate = NeedByDate;
            this.CarrierId = CarrierId;
            this.ShipVia = ShipVia;
            this.MediaCode = MediaCode;
            this.LegacyRestrictionType = LegacyRestrictionType;
            this.AlcoholOrderType = AlcoholOrderType;
            this.AlternateUsage = AlternateUsage;
            this.AuthorizedBy = AuthorizedBy;
            this.BatchNo = BatchNo;
            this.BillToAttention = BillToAttention;
            this.BillToCompany = BillToCompany;
            this.BillToStreet = BillToStreet;
            this.BillToStreet2 = BillToStreet2;
            this.BillToStreet3 = BillToStreet3;
            this.BillToCity = BillToCity;
            this.BillToState = BillToState;
            this.BillToZip = BillToZip;
            this.BillToCountry = BillToCountry;
            this.BillToPhone = BillToPhone;
            this.BillToEmail = BillToEmail;
            this.ThirdPartyParcelAccountId = ThirdPartyParcelAccountId;
            this.CostCenter = CostCenter;
            this.CustomerPONo = CustomerPONo;
            this.DistributionChannel = DistributionChannel;
            this.Division = Division;
            this.GiftMessageTo = GiftMessageTo;
            this.GiftMessageFrom = GiftMessageFrom;
            this.GiftMessage = GiftMessage;
            this.HoldCode = HoldCode;
            this.IntegrationPartnerId = IntegrationPartnerId;
            this.OrderLoadProgramId = OrderLoadProgramId;
            this.OrderMessage = OrderMessage;
            this.OrderSourceId = OrderSourceId;
            this.PackingSlipTemplateId = PackingSlipTemplateId;
            this.OrderInvoiceTemplateId = OrderInvoiceTemplateId;
            this.OrderEmailTemplateId = OrderEmailTemplateId;
            this.ShipmentEmailTemplateId = ShipmentEmailTemplateId;
            this.OutForDeliveryEmailTemplateId = OutForDeliveryEmailTemplateId;
            this.DeliveredEmailTemplateId = DeliveredEmailTemplateId;
            this.PriceLevel = PriceLevel;
            this.PriceMode = PriceMode;
            this.PriorityCode = PriorityCode;
            this.ShipCode = ShipCode;
            this.ShipToAttention = ShipToAttention;
            this.ShipToCompany = ShipToCompany;
            this.ShipToStreet = ShipToStreet;
            this.ShipToStreet2 = ShipToStreet2;
            this.ShipToStreet3 = ShipToStreet3;
            this.ShipToCity = ShipToCity;
            this.ShipToState = ShipToState;
            this.ShipToZip = ShipToZip;
            this.ShipToCountry = ShipToCountry;
            this.ShipToPhone = ShipToPhone;
            this.ShipToEmail = ShipToEmail;
            this.ShippingCharge = ShippingCharge;
            this.Subtotal = Subtotal;
            this.Tax = Tax;
            this.Total = Total;
            this.TotalDiscount = TotalDiscount;
            this.OrderAssemblyInstructions = OrderAssemblyInstructions;
            this.ParcelLabelRef1 = ParcelLabelRef1;
            this.ParcelLabelRef2 = ParcelLabelRef2;
            this.ParcelLabelRef3 = ParcelLabelRef3;
            this.RequestedParcelAccessories = RequestedParcelAccessories;
            this.ExtraOrderData = ExtraOrderData;
            this.ExtraLineItemData = ExtraLineItemData;
            this.ServiceTypeId = ServiceTypeId;
            this.WarehouseServiceTypeId = WarehouseServiceTypeId;
            this.WarehouseServiceLevelId = WarehouseServiceLevelId;
            this.EstimatedCartonizationPlan = EstimatedCartonizationPlan;
            this.ManifestScriptId = ManifestScriptId;
            this.StoreNo = StoreNo;
            this.StoreName = StoreName;
            this.DepartmentNo = DepartmentNo;
            this.DepartmentName = DepartmentName;
            this.VendorNo = VendorNo;
            this.InternalUse91 = InternalUse91;
            this.CustomFields = CustomFields;
        }
        
        /// <summary>
        /// Gets or Sets OrderNo
        /// </summary>
        [DataMember(Name="orderNo", EmitDefaultValue=false)]
        public decimal? OrderNo { get; private set; }

        /// <summary>
        /// Gets or Sets CustomerOrderNo
        /// </summary>
        [DataMember(Name="customerOrderNo", EmitDefaultValue=false)]
        public string CustomerOrderNo { get; set; }

        /// <summary>
        /// Gets or Sets LobId
        /// </summary>
        [DataMember(Name="lobId", EmitDefaultValue=false)]
        public int? LobId { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseId
        /// </summary>
        [DataMember(Name="warehouseId", EmitDefaultValue=false)]
        public int? WarehouseId { get; set; }

        /// <summary>
        /// Gets or Sets OrderDate
        /// </summary>
        [DataMember(Name="orderDate", EmitDefaultValue=false)]
        public DateTime? OrderDate { get; set; }

        /// <summary>
        /// Gets or Sets CustomerNo
        /// </summary>
        [DataMember(Name="customerNo", EmitDefaultValue=false)]
        public string CustomerNo { get; set; }

        /// <summary>
        /// Gets or Sets UseOrderNoRoot
        /// </summary>
        [DataMember(Name="useOrderNoRoot", EmitDefaultValue=false)]
        public int? UseOrderNoRoot { get; set; }

        /// <summary>
        /// Gets or Sets ShippingMethod
        /// </summary>
        [DataMember(Name="shippingMethod", EmitDefaultValue=false)]
        public string ShippingMethod { get; set; }

        /// <summary>
        /// Gets or Sets FirstShipDate
        /// </summary>
        [DataMember(Name="firstShipDate", EmitDefaultValue=false)]
        public DateTime? FirstShipDate { get; set; }

        /// <summary>
        /// Gets or Sets LastShipDate
        /// </summary>
        [DataMember(Name="lastShipDate", EmitDefaultValue=false)]
        public DateTime? LastShipDate { get; set; }

        /// <summary>
        /// Gets or Sets DeliverOnDate
        /// </summary>
        [DataMember(Name="deliverOnDate", EmitDefaultValue=false)]
        public DateTime? DeliverOnDate { get; set; }

        /// <summary>
        /// Gets or Sets NeedByDate
        /// </summary>
        [DataMember(Name="needByDate", EmitDefaultValue=false)]
        public DateTime? NeedByDate { get; set; }

        /// <summary>
        /// Gets or Sets CarrierId
        /// </summary>
        [DataMember(Name="carrierId", EmitDefaultValue=false)]
        public int? CarrierId { get; set; }

        /// <summary>
        /// Gets or Sets ShipVia
        /// </summary>
        [DataMember(Name="shipVia", EmitDefaultValue=false)]
        public string ShipVia { get; set; }

        /// <summary>
        /// Gets or Sets MediaCode
        /// </summary>
        [DataMember(Name="mediaCode", EmitDefaultValue=false)]
        public string MediaCode { get; set; }

        /// <summary>
        /// Gets or Sets LegacyRestrictionType
        /// </summary>
        [DataMember(Name="legacyRestrictionType", EmitDefaultValue=false)]
        public string LegacyRestrictionType { get; set; }

        /// <summary>
        /// Gets or Sets AlcoholOrderType
        /// </summary>
        [DataMember(Name="alcoholOrderType", EmitDefaultValue=false)]
        public string AlcoholOrderType { get; set; }

        /// <summary>
        /// Gets or Sets AlternateUsage
        /// </summary>
        [DataMember(Name="alternateUsage", EmitDefaultValue=false)]
        public string AlternateUsage { get; set; }

        /// <summary>
        /// Gets or Sets AuthorizationAmount
        /// </summary>
        [DataMember(Name="authorizationAmount", EmitDefaultValue=false)]
        public decimal? AuthorizationAmount { get; private set; }

        /// <summary>
        /// Gets or Sets AuthorizedBy
        /// </summary>
        [DataMember(Name="authorizedBy", EmitDefaultValue=false)]
        public string AuthorizedBy { get; set; }

        /// <summary>
        /// Gets or Sets BalanceDue
        /// </summary>
        [DataMember(Name="balanceDue", EmitDefaultValue=false)]
        public decimal? BalanceDue { get; private set; }

        /// <summary>
        /// Gets or Sets BatchNo
        /// </summary>
        [DataMember(Name="batchNo", EmitDefaultValue=false)]
        public string BatchNo { get; set; }

        /// <summary>
        /// Gets or Sets BillToAttention
        /// </summary>
        [DataMember(Name="billToAttention", EmitDefaultValue=false)]
        public string BillToAttention { get; set; }

        /// <summary>
        /// Gets or Sets BillToCompany
        /// </summary>
        [DataMember(Name="billToCompany", EmitDefaultValue=false)]
        public string BillToCompany { get; set; }

        /// <summary>
        /// Gets or Sets BillToStreet
        /// </summary>
        [DataMember(Name="billToStreet", EmitDefaultValue=false)]
        public string BillToStreet { get; set; }

        /// <summary>
        /// Gets or Sets BillToStreet2
        /// </summary>
        [DataMember(Name="billToStreet2", EmitDefaultValue=false)]
        public string BillToStreet2 { get; set; }

        /// <summary>
        /// Gets or Sets BillToStreet3
        /// </summary>
        [DataMember(Name="billToStreet3", EmitDefaultValue=false)]
        public string BillToStreet3 { get; set; }

        /// <summary>
        /// Gets or Sets BillToCity
        /// </summary>
        [DataMember(Name="billToCity", EmitDefaultValue=false)]
        public string BillToCity { get; set; }

        /// <summary>
        /// Gets or Sets BillToState
        /// </summary>
        [DataMember(Name="billToState", EmitDefaultValue=false)]
        public string BillToState { get; set; }

        /// <summary>
        /// Gets or Sets BillToZip
        /// </summary>
        [DataMember(Name="billToZip", EmitDefaultValue=false)]
        public string BillToZip { get; set; }

        /// <summary>
        /// Gets or Sets BillToCountry
        /// </summary>
        [DataMember(Name="billToCountry", EmitDefaultValue=false)]
        public string BillToCountry { get; set; }

        /// <summary>
        /// Gets or Sets BillToPhone
        /// </summary>
        [DataMember(Name="billToPhone", EmitDefaultValue=false)]
        public string BillToPhone { get; set; }

        /// <summary>
        /// Gets or Sets BillToEmail
        /// </summary>
        [DataMember(Name="billToEmail", EmitDefaultValue=false)]
        public string BillToEmail { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfCartons
        /// </summary>
        [DataMember(Name="numberOfCartons", EmitDefaultValue=false)]
        public int? NumberOfCartons { get; private set; }

        /// <summary>
        /// Gets or Sets NumberOfPallets
        /// </summary>
        [DataMember(Name="numberOfPallets", EmitDefaultValue=false)]
        public int? NumberOfPallets { get; private set; }

        /// <summary>
        /// Gets or Sets CompletionStatus
        /// </summary>
        [DataMember(Name="completionStatus", EmitDefaultValue=false)]
        public string CompletionStatus { get; private set; }

        /// <summary>
        /// Gets or Sets ParcelAccountId
        /// </summary>
        [DataMember(Name="parcelAccountId", EmitDefaultValue=false)]
        public int? ParcelAccountId { get; private set; }

        /// <summary>
        /// Gets or Sets ThirdPartyParcelAccountId
        /// </summary>
        [DataMember(Name="thirdPartyParcelAccountId", EmitDefaultValue=false)]
        public int? ThirdPartyParcelAccountId { get; set; }

        /// <summary>
        /// Gets or Sets CostCenter
        /// </summary>
        [DataMember(Name="costCenter", EmitDefaultValue=false)]
        public string CostCenter { get; set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name="createDate", EmitDefaultValue=false)]
        public DateTime? CreateDate { get; private set; }

        /// <summary>
        /// Gets or Sets CustomerPONo
        /// </summary>
        [DataMember(Name="customerPONo", EmitDefaultValue=false)]
        public string CustomerPONo { get; set; }

        /// <summary>
        /// Gets or Sets DistributionChannel
        /// </summary>
        [DataMember(Name="distributionChannel", EmitDefaultValue=false)]
        public string DistributionChannel { get; set; }

        /// <summary>
        /// Gets or Sets DistributionCharges
        /// </summary>
        [DataMember(Name="distributionCharges", EmitDefaultValue=false)]
        public decimal? DistributionCharges { get; private set; }

        /// <summary>
        /// Gets or Sets Division
        /// </summary>
        [DataMember(Name="division", EmitDefaultValue=false)]
        public int? Division { get; set; }

        /// <summary>
        /// Gets or Sets EnteredBy
        /// </summary>
        [DataMember(Name="enteredBy", EmitDefaultValue=false)]
        public string EnteredBy { get; private set; }

        /// <summary>
        /// Gets or Sets PreAllocationEstimatedWeight
        /// </summary>
        [DataMember(Name="preAllocationEstimatedWeight", EmitDefaultValue=false)]
        public decimal? PreAllocationEstimatedWeight { get; private set; }

        /// <summary>
        /// Gets or Sets EstimatedWeightLbs
        /// </summary>
        [DataMember(Name="estimatedWeightLbs", EmitDefaultValue=false)]
        public decimal? EstimatedWeightLbs { get; private set; }

        /// <summary>
        /// Gets or Sets Freight
        /// </summary>
        [DataMember(Name="freight", EmitDefaultValue=false)]
        public decimal? Freight { get; private set; }

        /// <summary>
        /// Gets or Sets FulfillabilityDetails
        /// </summary>
        [DataMember(Name="fulfillabilityDetails", EmitDefaultValue=false)]
        public string FulfillabilityDetails { get; private set; }

        /// <summary>
        /// Gets or Sets GiftMessageTo
        /// </summary>
        [DataMember(Name="giftMessageTo", EmitDefaultValue=false)]
        public string GiftMessageTo { get; set; }

        /// <summary>
        /// Gets or Sets GiftMessageFrom
        /// </summary>
        [DataMember(Name="giftMessageFrom", EmitDefaultValue=false)]
        public string GiftMessageFrom { get; set; }

        /// <summary>
        /// Gets or Sets GiftMessage
        /// </summary>
        [DataMember(Name="giftMessage", EmitDefaultValue=false)]
        public string GiftMessage { get; set; }

        /// <summary>
        /// Gets or Sets GroupOrderId
        /// </summary>
        [DataMember(Name="groupOrderId", EmitDefaultValue=false)]
        public decimal? GroupOrderId { get; private set; }

        /// <summary>
        /// Gets or Sets ParentKODOrderId
        /// </summary>
        [DataMember(Name="parentKODOrderId", EmitDefaultValue=false)]
        public decimal? ParentKODOrderId { get; private set; }

        /// <summary>
        /// Gets or Sets HoldCode
        /// </summary>
        [DataMember(Name="holdCode", EmitDefaultValue=false)]
        public string HoldCode { get; set; }

        /// <summary>
        /// Gets or Sets IntegrationPartnerId
        /// </summary>
        [DataMember(Name="integrationPartnerId", EmitDefaultValue=false)]
        public int? IntegrationPartnerId { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfLineItems
        /// </summary>
        [DataMember(Name="numberOfLineItems", EmitDefaultValue=false)]
        public int? NumberOfLineItems { get; private set; }

        /// <summary>
        /// Gets or Sets EstimatedNumberOfPicks
        /// </summary>
        [DataMember(Name="estimatedNumberOfPicks", EmitDefaultValue=false)]
        public int? EstimatedNumberOfPicks { get; private set; }

        /// <summary>
        /// Gets or Sets ModifyDate
        /// </summary>
        [DataMember(Name="modifyDate", EmitDefaultValue=false)]
        public DateTime? ModifyDate { get; private set; }

        /// <summary>
        /// Gets or Sets OmsOrderID
        /// </summary>
        [DataMember(Name="omsOrderID", EmitDefaultValue=false)]
        public int? OmsOrderID { get; private set; }

        /// <summary>
        /// Gets or Sets OmsOrderNo
        /// </summary>
        [DataMember(Name="omsOrderNo", EmitDefaultValue=false)]
        public int? OmsOrderNo { get; private set; }

        /// <summary>
        /// Gets or Sets OmsCustomerId
        /// </summary>
        [DataMember(Name="omsCustomerId", EmitDefaultValue=false)]
        public int? OmsCustomerId { get; private set; }

        /// <summary>
        /// Gets or Sets OrderLoadProgramId
        /// </summary>
        [DataMember(Name="orderLoadProgramId", EmitDefaultValue=false)]
        public int? OrderLoadProgramId { get; set; }

        /// <summary>
        /// Gets or Sets OrderMessage
        /// </summary>
        [DataMember(Name="orderMessage", EmitDefaultValue=false)]
        public string OrderMessage { get; set; }

        /// <summary>
        /// Gets or Sets OrderReason
        /// </summary>
        [DataMember(Name="orderReason", EmitDefaultValue=false)]
        public int? OrderReason { get; private set; }

        /// <summary>
        /// Gets or Sets OrderSourceId
        /// </summary>
        [DataMember(Name="orderSourceId", EmitDefaultValue=false)]
        public int? OrderSourceId { get; set; }

        /// <summary>
        /// Gets or Sets PackingSlipTemplateId
        /// </summary>
        [DataMember(Name="packingSlipTemplateId", EmitDefaultValue=false)]
        public int? PackingSlipTemplateId { get; set; }

        /// <summary>
        /// Gets or Sets OrderInvoiceTemplateId
        /// </summary>
        [DataMember(Name="orderInvoiceTemplateId", EmitDefaultValue=false)]
        public int? OrderInvoiceTemplateId { get; set; }

        /// <summary>
        /// Gets or Sets OrderEmailTemplateId
        /// </summary>
        [DataMember(Name="orderEmailTemplateId", EmitDefaultValue=false)]
        public int? OrderEmailTemplateId { get; set; }

        /// <summary>
        /// Gets or Sets ShipmentEmailTemplateId
        /// </summary>
        [DataMember(Name="shipmentEmailTemplateId", EmitDefaultValue=false)]
        public int? ShipmentEmailTemplateId { get; set; }

        /// <summary>
        /// Gets or Sets OutForDeliveryEmailTemplateId
        /// </summary>
        [DataMember(Name="outForDeliveryEmailTemplateId", EmitDefaultValue=false)]
        public int? OutForDeliveryEmailTemplateId { get; set; }

        /// <summary>
        /// Gets or Sets DeliveredEmailTemplateId
        /// </summary>
        [DataMember(Name="deliveredEmailTemplateId", EmitDefaultValue=false)]
        public int? DeliveredEmailTemplateId { get; set; }

        /// <summary>
        /// Gets or Sets PriceLevel
        /// </summary>
        [DataMember(Name="priceLevel", EmitDefaultValue=false)]
        public string PriceLevel { get; set; }

        /// <summary>
        /// Gets or Sets PriceMode
        /// </summary>
        [DataMember(Name="priceMode", EmitDefaultValue=false)]
        public string PriceMode { get; set; }

        /// <summary>
        /// Gets or Sets PriorityCode
        /// </summary>
        [DataMember(Name="priorityCode", EmitDefaultValue=false)]
        public int? PriorityCode { get; set; }

        /// <summary>
        /// Gets or Sets FulfillmentProcessId
        /// </summary>
        [DataMember(Name="fulfillmentProcessId", EmitDefaultValue=false)]
        public int? FulfillmentProcessId { get; private set; }

        /// <summary>
        /// Gets or Sets ShipBy
        /// </summary>
        [DataMember(Name="shipBy", EmitDefaultValue=false)]
        public DateTime? ShipBy { get; private set; }

        /// <summary>
        /// Gets or Sets ShipCode
        /// </summary>
        [DataMember(Name="shipCode", EmitDefaultValue=false)]
        public string ShipCode { get; set; }

        /// <summary>
        /// Gets or Sets ShipDate
        /// </summary>
        [DataMember(Name="shipDate", EmitDefaultValue=false)]
        public DateTime? ShipDate { get; private set; }

        /// <summary>
        /// Gets or Sets ShippedDate
        /// </summary>
        [DataMember(Name="shippedDate", EmitDefaultValue=false)]
        public DateTime? ShippedDate { get; private set; }

        /// <summary>
        /// Gets or Sets ShipToAttention
        /// </summary>
        [DataMember(Name="shipToAttention", EmitDefaultValue=false)]
        public string ShipToAttention { get; set; }

        /// <summary>
        /// Gets or Sets ShipToCompany
        /// </summary>
        [DataMember(Name="shipToCompany", EmitDefaultValue=false)]
        public string ShipToCompany { get; set; }

        /// <summary>
        /// Gets or Sets ShipToStreet
        /// </summary>
        [DataMember(Name="shipToStreet", EmitDefaultValue=false)]
        public string ShipToStreet { get; set; }

        /// <summary>
        /// Gets or Sets ShipToStreet2
        /// </summary>
        [DataMember(Name="shipToStreet2", EmitDefaultValue=false)]
        public string ShipToStreet2 { get; set; }

        /// <summary>
        /// Gets or Sets ShipToStreet3
        /// </summary>
        [DataMember(Name="shipToStreet3", EmitDefaultValue=false)]
        public string ShipToStreet3 { get; set; }

        /// <summary>
        /// Gets or Sets ShipToCity
        /// </summary>
        [DataMember(Name="shipToCity", EmitDefaultValue=false)]
        public string ShipToCity { get; set; }

        /// <summary>
        /// Gets or Sets ShipToState
        /// </summary>
        [DataMember(Name="shipToState", EmitDefaultValue=false)]
        public string ShipToState { get; set; }

        /// <summary>
        /// Gets or Sets ShipToZip
        /// </summary>
        [DataMember(Name="shipToZip", EmitDefaultValue=false)]
        public string ShipToZip { get; set; }

        /// <summary>
        /// Gets or Sets ShipToCountry
        /// </summary>
        [DataMember(Name="shipToCountry", EmitDefaultValue=false)]
        public string ShipToCountry { get; set; }

        /// <summary>
        /// Gets or Sets ShipToPhone
        /// </summary>
        [DataMember(Name="shipToPhone", EmitDefaultValue=false)]
        public string ShipToPhone { get; set; }

        /// <summary>
        /// Gets or Sets ShipToEmail
        /// </summary>
        [DataMember(Name="shipToEmail", EmitDefaultValue=false)]
        public string ShipToEmail { get; set; }

        /// <summary>
        /// Gets or Sets ShippingCharge
        /// </summary>
        [DataMember(Name="shippingCharge", EmitDefaultValue=false)]
        public decimal? ShippingCharge { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public string Status { get; private set; }

        /// <summary>
        /// Gets or Sets StopBackOrders
        /// </summary>
        [DataMember(Name="stopBackOrders", EmitDefaultValue=false)]
        public string StopBackOrders { get; private set; }

        /// <summary>
        /// Gets or Sets Subtotal
        /// </summary>
        [DataMember(Name="subtotal", EmitDefaultValue=false)]
        public decimal? Subtotal { get; set; }

        /// <summary>
        /// Gets or Sets Tax
        /// </summary>
        [DataMember(Name="tax", EmitDefaultValue=false)]
        public decimal? Tax { get; set; }

        /// <summary>
        /// Gets or Sets Total
        /// </summary>
        [DataMember(Name="total", EmitDefaultValue=false)]
        public decimal? Total { get; set; }

        /// <summary>
        /// Gets or Sets TotalDiscount
        /// </summary>
        [DataMember(Name="totalDiscount", EmitDefaultValue=false)]
        public decimal? TotalDiscount { get; set; }

        /// <summary>
        /// Gets or Sets TotalPaid
        /// </summary>
        [DataMember(Name="totalPaid", EmitDefaultValue=false)]
        public decimal? TotalPaid { get; private set; }

        /// <summary>
        /// Gets or Sets TotalQty
        /// </summary>
        [DataMember(Name="totalQty", EmitDefaultValue=false)]
        public int? TotalQty { get; private set; }

        /// <summary>
        /// Gets or Sets WeightLbs
        /// </summary>
        [DataMember(Name="weightLbs", EmitDefaultValue=false)]
        public decimal? WeightLbs { get; private set; }

        /// <summary>
        /// Gets or Sets OrderAssemblyInstructions
        /// </summary>
        [DataMember(Name="orderAssemblyInstructions", EmitDefaultValue=false)]
        public string OrderAssemblyInstructions { get; set; }

        /// <summary>
        /// Gets or Sets ParcelLabelRef1
        /// </summary>
        [DataMember(Name="parcelLabelRef1", EmitDefaultValue=false)]
        public string ParcelLabelRef1 { get; set; }

        /// <summary>
        /// Gets or Sets ParcelLabelRef2
        /// </summary>
        [DataMember(Name="parcelLabelRef2", EmitDefaultValue=false)]
        public string ParcelLabelRef2 { get; set; }

        /// <summary>
        /// Gets or Sets ParcelLabelRef3
        /// </summary>
        [DataMember(Name="parcelLabelRef3", EmitDefaultValue=false)]
        public string ParcelLabelRef3 { get; set; }

        /// <summary>
        /// Gets or Sets LineItems
        /// </summary>
        [DataMember(Name="lineItems", EmitDefaultValue=false)]
        public List<OrderLine> LineItems { get; set; }

        /// <summary>
        /// Gets or Sets RequestedParcelAccessories
        /// </summary>
        [DataMember(Name="requestedParcelAccessories", EmitDefaultValue=false)]
        public List<ReqParcelAccessoryData> RequestedParcelAccessories { get; set; }

        /// <summary>
        /// Gets or Sets ExtraOrderData
        /// </summary>
        [DataMember(Name="extraOrderData", EmitDefaultValue=false)]
        public List<OrderExtraOrderData> ExtraOrderData { get; set; }

        /// <summary>
        /// Gets or Sets ExtraLineItemData
        /// </summary>
        [DataMember(Name="extraLineItemData", EmitDefaultValue=false)]
        public List<OrderExtraLineItemData> ExtraLineItemData { get; set; }

        /// <summary>
        /// Gets or Sets ExternalShippingSystemId
        /// </summary>
        [DataMember(Name="externalShippingSystemId", EmitDefaultValue=false)]
        public int? ExternalShippingSystemId { get; private set; }

        /// <summary>
        /// Gets or Sets ServiceTypeId
        /// </summary>
        [DataMember(Name="serviceTypeId", EmitDefaultValue=false)]
        public string ServiceTypeId { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseServiceTypeId
        /// </summary>
        [DataMember(Name="warehouseServiceTypeId", EmitDefaultValue=false)]
        public int? WarehouseServiceTypeId { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseServiceLevelId
        /// </summary>
        [DataMember(Name="warehouseServiceLevelId", EmitDefaultValue=false)]
        public int? WarehouseServiceLevelId { get; set; }

        /// <summary>
        /// Gets or Sets SlaDate
        /// </summary>
        [DataMember(Name="slaDate", EmitDefaultValue=false)]
        public DateTime? SlaDate { get; private set; }

        /// <summary>
        /// Gets or Sets SlaStatus
        /// </summary>
        [DataMember(Name="slaStatus", EmitDefaultValue=false)]
        public string SlaStatus { get; private set; }

        /// <summary>
        /// Gets or Sets ProductionType
        /// </summary>
        [DataMember(Name="productionType", EmitDefaultValue=false)]
        public string ProductionType { get; private set; }

        /// <summary>
        /// Gets or Sets BackOrderStatus
        /// </summary>
        [DataMember(Name="backOrderStatus", EmitDefaultValue=false)]
        public string BackOrderStatus { get; private set; }

        /// <summary>
        /// Gets or Sets BackOrderReleaseDate
        /// </summary>
        [DataMember(Name="backOrderReleaseDate", EmitDefaultValue=false)]
        public DateTime? BackOrderReleaseDate { get; private set; }

        /// <summary>
        /// Gets or Sets EstimatedNumberOfCartons
        /// </summary>
        [DataMember(Name="estimatedNumberOfCartons", EmitDefaultValue=false)]
        public int? EstimatedNumberOfCartons { get; private set; }

        /// <summary>
        /// Gets or Sets EstimatedCartonizationPlan
        /// </summary>
        [DataMember(Name="estimatedCartonizationPlan", EmitDefaultValue=false)]
        public string EstimatedCartonizationPlan { get; set; }

        /// <summary>
        /// Gets or Sets ManifestScriptId
        /// </summary>
        [DataMember(Name="manifestScriptId", EmitDefaultValue=false)]
        public int? ManifestScriptId { get; set; }

        /// <summary>
        /// Gets or Sets StoreNo
        /// </summary>
        [DataMember(Name="storeNo", EmitDefaultValue=false)]
        public string StoreNo { get; set; }

        /// <summary>
        /// Gets or Sets StoreName
        /// </summary>
        [DataMember(Name="storeName", EmitDefaultValue=false)]
        public string StoreName { get; set; }

        /// <summary>
        /// Gets or Sets DepartmentNo
        /// </summary>
        [DataMember(Name="departmentNo", EmitDefaultValue=false)]
        public string DepartmentNo { get; set; }

        /// <summary>
        /// Gets or Sets DepartmentName
        /// </summary>
        [DataMember(Name="departmentName", EmitDefaultValue=false)]
        public string DepartmentName { get; set; }

        /// <summary>
        /// Gets or Sets VendorNo
        /// </summary>
        [DataMember(Name="vendorNo", EmitDefaultValue=false)]
        public string VendorNo { get; set; }

        /// <summary>
        /// Gets or Sets InternalUse91
        /// </summary>
        [DataMember(Name="internalUse91", EmitDefaultValue=false)]
        public string InternalUse91 { get; set; }

        /// <summary>
        /// Gets or Sets Fulfillability
        /// </summary>
        [DataMember(Name="fulfillability", EmitDefaultValue=false)]
        public string Fulfillability { get; private set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name="customFields", EmitDefaultValue=false)]
        public Dictionary<string, Object> CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Order {\n");
            sb.Append("  OrderNo: ").Append(OrderNo).Append("\n");
            sb.Append("  CustomerOrderNo: ").Append(CustomerOrderNo).Append("\n");
            sb.Append("  LobId: ").Append(LobId).Append("\n");
            sb.Append("  WarehouseId: ").Append(WarehouseId).Append("\n");
            sb.Append("  OrderDate: ").Append(OrderDate).Append("\n");
            sb.Append("  CustomerNo: ").Append(CustomerNo).Append("\n");
            sb.Append("  UseOrderNoRoot: ").Append(UseOrderNoRoot).Append("\n");
            sb.Append("  ShippingMethod: ").Append(ShippingMethod).Append("\n");
            sb.Append("  FirstShipDate: ").Append(FirstShipDate).Append("\n");
            sb.Append("  LastShipDate: ").Append(LastShipDate).Append("\n");
            sb.Append("  DeliverOnDate: ").Append(DeliverOnDate).Append("\n");
            sb.Append("  NeedByDate: ").Append(NeedByDate).Append("\n");
            sb.Append("  CarrierId: ").Append(CarrierId).Append("\n");
            sb.Append("  ShipVia: ").Append(ShipVia).Append("\n");
            sb.Append("  MediaCode: ").Append(MediaCode).Append("\n");
            sb.Append("  LegacyRestrictionType: ").Append(LegacyRestrictionType).Append("\n");
            sb.Append("  AlcoholOrderType: ").Append(AlcoholOrderType).Append("\n");
            sb.Append("  AlternateUsage: ").Append(AlternateUsage).Append("\n");
            sb.Append("  AuthorizationAmount: ").Append(AuthorizationAmount).Append("\n");
            sb.Append("  AuthorizedBy: ").Append(AuthorizedBy).Append("\n");
            sb.Append("  BalanceDue: ").Append(BalanceDue).Append("\n");
            sb.Append("  BatchNo: ").Append(BatchNo).Append("\n");
            sb.Append("  BillToAttention: ").Append(BillToAttention).Append("\n");
            sb.Append("  BillToCompany: ").Append(BillToCompany).Append("\n");
            sb.Append("  BillToStreet: ").Append(BillToStreet).Append("\n");
            sb.Append("  BillToStreet2: ").Append(BillToStreet2).Append("\n");
            sb.Append("  BillToStreet3: ").Append(BillToStreet3).Append("\n");
            sb.Append("  BillToCity: ").Append(BillToCity).Append("\n");
            sb.Append("  BillToState: ").Append(BillToState).Append("\n");
            sb.Append("  BillToZip: ").Append(BillToZip).Append("\n");
            sb.Append("  BillToCountry: ").Append(BillToCountry).Append("\n");
            sb.Append("  BillToPhone: ").Append(BillToPhone).Append("\n");
            sb.Append("  BillToEmail: ").Append(BillToEmail).Append("\n");
            sb.Append("  NumberOfCartons: ").Append(NumberOfCartons).Append("\n");
            sb.Append("  NumberOfPallets: ").Append(NumberOfPallets).Append("\n");
            sb.Append("  CompletionStatus: ").Append(CompletionStatus).Append("\n");
            sb.Append("  ParcelAccountId: ").Append(ParcelAccountId).Append("\n");
            sb.Append("  ThirdPartyParcelAccountId: ").Append(ThirdPartyParcelAccountId).Append("\n");
            sb.Append("  CostCenter: ").Append(CostCenter).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  CustomerPONo: ").Append(CustomerPONo).Append("\n");
            sb.Append("  DistributionChannel: ").Append(DistributionChannel).Append("\n");
            sb.Append("  DistributionCharges: ").Append(DistributionCharges).Append("\n");
            sb.Append("  Division: ").Append(Division).Append("\n");
            sb.Append("  EnteredBy: ").Append(EnteredBy).Append("\n");
            sb.Append("  PreAllocationEstimatedWeight: ").Append(PreAllocationEstimatedWeight).Append("\n");
            sb.Append("  EstimatedWeightLbs: ").Append(EstimatedWeightLbs).Append("\n");
            sb.Append("  Freight: ").Append(Freight).Append("\n");
            sb.Append("  FulfillabilityDetails: ").Append(FulfillabilityDetails).Append("\n");
            sb.Append("  GiftMessageTo: ").Append(GiftMessageTo).Append("\n");
            sb.Append("  GiftMessageFrom: ").Append(GiftMessageFrom).Append("\n");
            sb.Append("  GiftMessage: ").Append(GiftMessage).Append("\n");
            sb.Append("  GroupOrderId: ").Append(GroupOrderId).Append("\n");
            sb.Append("  ParentKODOrderId: ").Append(ParentKODOrderId).Append("\n");
            sb.Append("  HoldCode: ").Append(HoldCode).Append("\n");
            sb.Append("  IntegrationPartnerId: ").Append(IntegrationPartnerId).Append("\n");
            sb.Append("  NumberOfLineItems: ").Append(NumberOfLineItems).Append("\n");
            sb.Append("  EstimatedNumberOfPicks: ").Append(EstimatedNumberOfPicks).Append("\n");
            sb.Append("  ModifyDate: ").Append(ModifyDate).Append("\n");
            sb.Append("  OmsOrderID: ").Append(OmsOrderID).Append("\n");
            sb.Append("  OmsOrderNo: ").Append(OmsOrderNo).Append("\n");
            sb.Append("  OmsCustomerId: ").Append(OmsCustomerId).Append("\n");
            sb.Append("  OrderLoadProgramId: ").Append(OrderLoadProgramId).Append("\n");
            sb.Append("  OrderMessage: ").Append(OrderMessage).Append("\n");
            sb.Append("  OrderReason: ").Append(OrderReason).Append("\n");
            sb.Append("  OrderSourceId: ").Append(OrderSourceId).Append("\n");
            sb.Append("  PackingSlipTemplateId: ").Append(PackingSlipTemplateId).Append("\n");
            sb.Append("  OrderInvoiceTemplateId: ").Append(OrderInvoiceTemplateId).Append("\n");
            sb.Append("  OrderEmailTemplateId: ").Append(OrderEmailTemplateId).Append("\n");
            sb.Append("  ShipmentEmailTemplateId: ").Append(ShipmentEmailTemplateId).Append("\n");
            sb.Append("  OutForDeliveryEmailTemplateId: ").Append(OutForDeliveryEmailTemplateId).Append("\n");
            sb.Append("  DeliveredEmailTemplateId: ").Append(DeliveredEmailTemplateId).Append("\n");
            sb.Append("  PriceLevel: ").Append(PriceLevel).Append("\n");
            sb.Append("  PriceMode: ").Append(PriceMode).Append("\n");
            sb.Append("  PriorityCode: ").Append(PriorityCode).Append("\n");
            sb.Append("  FulfillmentProcessId: ").Append(FulfillmentProcessId).Append("\n");
            sb.Append("  ShipBy: ").Append(ShipBy).Append("\n");
            sb.Append("  ShipCode: ").Append(ShipCode).Append("\n");
            sb.Append("  ShipDate: ").Append(ShipDate).Append("\n");
            sb.Append("  ShippedDate: ").Append(ShippedDate).Append("\n");
            sb.Append("  ShipToAttention: ").Append(ShipToAttention).Append("\n");
            sb.Append("  ShipToCompany: ").Append(ShipToCompany).Append("\n");
            sb.Append("  ShipToStreet: ").Append(ShipToStreet).Append("\n");
            sb.Append("  ShipToStreet2: ").Append(ShipToStreet2).Append("\n");
            sb.Append("  ShipToStreet3: ").Append(ShipToStreet3).Append("\n");
            sb.Append("  ShipToCity: ").Append(ShipToCity).Append("\n");
            sb.Append("  ShipToState: ").Append(ShipToState).Append("\n");
            sb.Append("  ShipToZip: ").Append(ShipToZip).Append("\n");
            sb.Append("  ShipToCountry: ").Append(ShipToCountry).Append("\n");
            sb.Append("  ShipToPhone: ").Append(ShipToPhone).Append("\n");
            sb.Append("  ShipToEmail: ").Append(ShipToEmail).Append("\n");
            sb.Append("  ShippingCharge: ").Append(ShippingCharge).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  StopBackOrders: ").Append(StopBackOrders).Append("\n");
            sb.Append("  Subtotal: ").Append(Subtotal).Append("\n");
            sb.Append("  Tax: ").Append(Tax).Append("\n");
            sb.Append("  Total: ").Append(Total).Append("\n");
            sb.Append("  TotalDiscount: ").Append(TotalDiscount).Append("\n");
            sb.Append("  TotalPaid: ").Append(TotalPaid).Append("\n");
            sb.Append("  TotalQty: ").Append(TotalQty).Append("\n");
            sb.Append("  WeightLbs: ").Append(WeightLbs).Append("\n");
            sb.Append("  OrderAssemblyInstructions: ").Append(OrderAssemblyInstructions).Append("\n");
            sb.Append("  ParcelLabelRef1: ").Append(ParcelLabelRef1).Append("\n");
            sb.Append("  ParcelLabelRef2: ").Append(ParcelLabelRef2).Append("\n");
            sb.Append("  ParcelLabelRef3: ").Append(ParcelLabelRef3).Append("\n");
            sb.Append("  LineItems: ").Append(LineItems).Append("\n");
            sb.Append("  RequestedParcelAccessories: ").Append(RequestedParcelAccessories).Append("\n");
            sb.Append("  ExtraOrderData: ").Append(ExtraOrderData).Append("\n");
            sb.Append("  ExtraLineItemData: ").Append(ExtraLineItemData).Append("\n");
            sb.Append("  ExternalShippingSystemId: ").Append(ExternalShippingSystemId).Append("\n");
            sb.Append("  ServiceTypeId: ").Append(ServiceTypeId).Append("\n");
            sb.Append("  WarehouseServiceTypeId: ").Append(WarehouseServiceTypeId).Append("\n");
            sb.Append("  WarehouseServiceLevelId: ").Append(WarehouseServiceLevelId).Append("\n");
            sb.Append("  SlaDate: ").Append(SlaDate).Append("\n");
            sb.Append("  SlaStatus: ").Append(SlaStatus).Append("\n");
            sb.Append("  ProductionType: ").Append(ProductionType).Append("\n");
            sb.Append("  BackOrderStatus: ").Append(BackOrderStatus).Append("\n");
            sb.Append("  BackOrderReleaseDate: ").Append(BackOrderReleaseDate).Append("\n");
            sb.Append("  EstimatedNumberOfCartons: ").Append(EstimatedNumberOfCartons).Append("\n");
            sb.Append("  EstimatedCartonizationPlan: ").Append(EstimatedCartonizationPlan).Append("\n");
            sb.Append("  ManifestScriptId: ").Append(ManifestScriptId).Append("\n");
            sb.Append("  StoreNo: ").Append(StoreNo).Append("\n");
            sb.Append("  StoreName: ").Append(StoreName).Append("\n");
            sb.Append("  DepartmentNo: ").Append(DepartmentNo).Append("\n");
            sb.Append("  DepartmentName: ").Append(DepartmentName).Append("\n");
            sb.Append("  VendorNo: ").Append(VendorNo).Append("\n");
            sb.Append("  InternalUse91: ").Append(InternalUse91).Append("\n");
            sb.Append("  Fulfillability: ").Append(Fulfillability).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Order);
        }

        /// <summary>
        /// Returns true if Order instances are equal
        /// </summary>
        /// <param name="input">Instance of Order to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Order input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OrderNo == input.OrderNo ||
                    (this.OrderNo != null &&
                    this.OrderNo.Equals(input.OrderNo))
                ) && 
                (
                    this.CustomerOrderNo == input.CustomerOrderNo ||
                    (this.CustomerOrderNo != null &&
                    this.CustomerOrderNo.Equals(input.CustomerOrderNo))
                ) && 
                (
                    this.LobId == input.LobId ||
                    (this.LobId != null &&
                    this.LobId.Equals(input.LobId))
                ) && 
                (
                    this.WarehouseId == input.WarehouseId ||
                    (this.WarehouseId != null &&
                    this.WarehouseId.Equals(input.WarehouseId))
                ) && 
                (
                    this.OrderDate == input.OrderDate ||
                    (this.OrderDate != null &&
                    this.OrderDate.Equals(input.OrderDate))
                ) && 
                (
                    this.CustomerNo == input.CustomerNo ||
                    (this.CustomerNo != null &&
                    this.CustomerNo.Equals(input.CustomerNo))
                ) && 
                (
                    this.UseOrderNoRoot == input.UseOrderNoRoot ||
                    (this.UseOrderNoRoot != null &&
                    this.UseOrderNoRoot.Equals(input.UseOrderNoRoot))
                ) && 
                (
                    this.ShippingMethod == input.ShippingMethod ||
                    (this.ShippingMethod != null &&
                    this.ShippingMethod.Equals(input.ShippingMethod))
                ) && 
                (
                    this.FirstShipDate == input.FirstShipDate ||
                    (this.FirstShipDate != null &&
                    this.FirstShipDate.Equals(input.FirstShipDate))
                ) && 
                (
                    this.LastShipDate == input.LastShipDate ||
                    (this.LastShipDate != null &&
                    this.LastShipDate.Equals(input.LastShipDate))
                ) && 
                (
                    this.DeliverOnDate == input.DeliverOnDate ||
                    (this.DeliverOnDate != null &&
                    this.DeliverOnDate.Equals(input.DeliverOnDate))
                ) && 
                (
                    this.NeedByDate == input.NeedByDate ||
                    (this.NeedByDate != null &&
                    this.NeedByDate.Equals(input.NeedByDate))
                ) && 
                (
                    this.CarrierId == input.CarrierId ||
                    (this.CarrierId != null &&
                    this.CarrierId.Equals(input.CarrierId))
                ) && 
                (
                    this.ShipVia == input.ShipVia ||
                    (this.ShipVia != null &&
                    this.ShipVia.Equals(input.ShipVia))
                ) && 
                (
                    this.MediaCode == input.MediaCode ||
                    (this.MediaCode != null &&
                    this.MediaCode.Equals(input.MediaCode))
                ) && 
                (
                    this.LegacyRestrictionType == input.LegacyRestrictionType ||
                    (this.LegacyRestrictionType != null &&
                    this.LegacyRestrictionType.Equals(input.LegacyRestrictionType))
                ) && 
                (
                    this.AlcoholOrderType == input.AlcoholOrderType ||
                    (this.AlcoholOrderType != null &&
                    this.AlcoholOrderType.Equals(input.AlcoholOrderType))
                ) && 
                (
                    this.AlternateUsage == input.AlternateUsage ||
                    (this.AlternateUsage != null &&
                    this.AlternateUsage.Equals(input.AlternateUsage))
                ) && 
                (
                    this.AuthorizationAmount == input.AuthorizationAmount ||
                    (this.AuthorizationAmount != null &&
                    this.AuthorizationAmount.Equals(input.AuthorizationAmount))
                ) && 
                (
                    this.AuthorizedBy == input.AuthorizedBy ||
                    (this.AuthorizedBy != null &&
                    this.AuthorizedBy.Equals(input.AuthorizedBy))
                ) && 
                (
                    this.BalanceDue == input.BalanceDue ||
                    (this.BalanceDue != null &&
                    this.BalanceDue.Equals(input.BalanceDue))
                ) && 
                (
                    this.BatchNo == input.BatchNo ||
                    (this.BatchNo != null &&
                    this.BatchNo.Equals(input.BatchNo))
                ) && 
                (
                    this.BillToAttention == input.BillToAttention ||
                    (this.BillToAttention != null &&
                    this.BillToAttention.Equals(input.BillToAttention))
                ) && 
                (
                    this.BillToCompany == input.BillToCompany ||
                    (this.BillToCompany != null &&
                    this.BillToCompany.Equals(input.BillToCompany))
                ) && 
                (
                    this.BillToStreet == input.BillToStreet ||
                    (this.BillToStreet != null &&
                    this.BillToStreet.Equals(input.BillToStreet))
                ) && 
                (
                    this.BillToStreet2 == input.BillToStreet2 ||
                    (this.BillToStreet2 != null &&
                    this.BillToStreet2.Equals(input.BillToStreet2))
                ) && 
                (
                    this.BillToStreet3 == input.BillToStreet3 ||
                    (this.BillToStreet3 != null &&
                    this.BillToStreet3.Equals(input.BillToStreet3))
                ) && 
                (
                    this.BillToCity == input.BillToCity ||
                    (this.BillToCity != null &&
                    this.BillToCity.Equals(input.BillToCity))
                ) && 
                (
                    this.BillToState == input.BillToState ||
                    (this.BillToState != null &&
                    this.BillToState.Equals(input.BillToState))
                ) && 
                (
                    this.BillToZip == input.BillToZip ||
                    (this.BillToZip != null &&
                    this.BillToZip.Equals(input.BillToZip))
                ) && 
                (
                    this.BillToCountry == input.BillToCountry ||
                    (this.BillToCountry != null &&
                    this.BillToCountry.Equals(input.BillToCountry))
                ) && 
                (
                    this.BillToPhone == input.BillToPhone ||
                    (this.BillToPhone != null &&
                    this.BillToPhone.Equals(input.BillToPhone))
                ) && 
                (
                    this.BillToEmail == input.BillToEmail ||
                    (this.BillToEmail != null &&
                    this.BillToEmail.Equals(input.BillToEmail))
                ) && 
                (
                    this.NumberOfCartons == input.NumberOfCartons ||
                    (this.NumberOfCartons != null &&
                    this.NumberOfCartons.Equals(input.NumberOfCartons))
                ) && 
                (
                    this.NumberOfPallets == input.NumberOfPallets ||
                    (this.NumberOfPallets != null &&
                    this.NumberOfPallets.Equals(input.NumberOfPallets))
                ) && 
                (
                    this.CompletionStatus == input.CompletionStatus ||
                    (this.CompletionStatus != null &&
                    this.CompletionStatus.Equals(input.CompletionStatus))
                ) && 
                (
                    this.ParcelAccountId == input.ParcelAccountId ||
                    (this.ParcelAccountId != null &&
                    this.ParcelAccountId.Equals(input.ParcelAccountId))
                ) && 
                (
                    this.ThirdPartyParcelAccountId == input.ThirdPartyParcelAccountId ||
                    (this.ThirdPartyParcelAccountId != null &&
                    this.ThirdPartyParcelAccountId.Equals(input.ThirdPartyParcelAccountId))
                ) && 
                (
                    this.CostCenter == input.CostCenter ||
                    (this.CostCenter != null &&
                    this.CostCenter.Equals(input.CostCenter))
                ) && 
                (
                    this.CreateDate == input.CreateDate ||
                    (this.CreateDate != null &&
                    this.CreateDate.Equals(input.CreateDate))
                ) && 
                (
                    this.CustomerPONo == input.CustomerPONo ||
                    (this.CustomerPONo != null &&
                    this.CustomerPONo.Equals(input.CustomerPONo))
                ) && 
                (
                    this.DistributionChannel == input.DistributionChannel ||
                    (this.DistributionChannel != null &&
                    this.DistributionChannel.Equals(input.DistributionChannel))
                ) && 
                (
                    this.DistributionCharges == input.DistributionCharges ||
                    (this.DistributionCharges != null &&
                    this.DistributionCharges.Equals(input.DistributionCharges))
                ) && 
                (
                    this.Division == input.Division ||
                    (this.Division != null &&
                    this.Division.Equals(input.Division))
                ) && 
                (
                    this.EnteredBy == input.EnteredBy ||
                    (this.EnteredBy != null &&
                    this.EnteredBy.Equals(input.EnteredBy))
                ) && 
                (
                    this.PreAllocationEstimatedWeight == input.PreAllocationEstimatedWeight ||
                    (this.PreAllocationEstimatedWeight != null &&
                    this.PreAllocationEstimatedWeight.Equals(input.PreAllocationEstimatedWeight))
                ) && 
                (
                    this.EstimatedWeightLbs == input.EstimatedWeightLbs ||
                    (this.EstimatedWeightLbs != null &&
                    this.EstimatedWeightLbs.Equals(input.EstimatedWeightLbs))
                ) && 
                (
                    this.Freight == input.Freight ||
                    (this.Freight != null &&
                    this.Freight.Equals(input.Freight))
                ) && 
                (
                    this.FulfillabilityDetails == input.FulfillabilityDetails ||
                    (this.FulfillabilityDetails != null &&
                    this.FulfillabilityDetails.Equals(input.FulfillabilityDetails))
                ) && 
                (
                    this.GiftMessageTo == input.GiftMessageTo ||
                    (this.GiftMessageTo != null &&
                    this.GiftMessageTo.Equals(input.GiftMessageTo))
                ) && 
                (
                    this.GiftMessageFrom == input.GiftMessageFrom ||
                    (this.GiftMessageFrom != null &&
                    this.GiftMessageFrom.Equals(input.GiftMessageFrom))
                ) && 
                (
                    this.GiftMessage == input.GiftMessage ||
                    (this.GiftMessage != null &&
                    this.GiftMessage.Equals(input.GiftMessage))
                ) && 
                (
                    this.GroupOrderId == input.GroupOrderId ||
                    (this.GroupOrderId != null &&
                    this.GroupOrderId.Equals(input.GroupOrderId))
                ) && 
                (
                    this.ParentKODOrderId == input.ParentKODOrderId ||
                    (this.ParentKODOrderId != null &&
                    this.ParentKODOrderId.Equals(input.ParentKODOrderId))
                ) && 
                (
                    this.HoldCode == input.HoldCode ||
                    (this.HoldCode != null &&
                    this.HoldCode.Equals(input.HoldCode))
                ) && 
                (
                    this.IntegrationPartnerId == input.IntegrationPartnerId ||
                    (this.IntegrationPartnerId != null &&
                    this.IntegrationPartnerId.Equals(input.IntegrationPartnerId))
                ) && 
                (
                    this.NumberOfLineItems == input.NumberOfLineItems ||
                    (this.NumberOfLineItems != null &&
                    this.NumberOfLineItems.Equals(input.NumberOfLineItems))
                ) && 
                (
                    this.EstimatedNumberOfPicks == input.EstimatedNumberOfPicks ||
                    (this.EstimatedNumberOfPicks != null &&
                    this.EstimatedNumberOfPicks.Equals(input.EstimatedNumberOfPicks))
                ) && 
                (
                    this.ModifyDate == input.ModifyDate ||
                    (this.ModifyDate != null &&
                    this.ModifyDate.Equals(input.ModifyDate))
                ) && 
                (
                    this.OmsOrderID == input.OmsOrderID ||
                    (this.OmsOrderID != null &&
                    this.OmsOrderID.Equals(input.OmsOrderID))
                ) && 
                (
                    this.OmsOrderNo == input.OmsOrderNo ||
                    (this.OmsOrderNo != null &&
                    this.OmsOrderNo.Equals(input.OmsOrderNo))
                ) && 
                (
                    this.OmsCustomerId == input.OmsCustomerId ||
                    (this.OmsCustomerId != null &&
                    this.OmsCustomerId.Equals(input.OmsCustomerId))
                ) && 
                (
                    this.OrderLoadProgramId == input.OrderLoadProgramId ||
                    (this.OrderLoadProgramId != null &&
                    this.OrderLoadProgramId.Equals(input.OrderLoadProgramId))
                ) && 
                (
                    this.OrderMessage == input.OrderMessage ||
                    (this.OrderMessage != null &&
                    this.OrderMessage.Equals(input.OrderMessage))
                ) && 
                (
                    this.OrderReason == input.OrderReason ||
                    (this.OrderReason != null &&
                    this.OrderReason.Equals(input.OrderReason))
                ) && 
                (
                    this.OrderSourceId == input.OrderSourceId ||
                    (this.OrderSourceId != null &&
                    this.OrderSourceId.Equals(input.OrderSourceId))
                ) && 
                (
                    this.PackingSlipTemplateId == input.PackingSlipTemplateId ||
                    (this.PackingSlipTemplateId != null &&
                    this.PackingSlipTemplateId.Equals(input.PackingSlipTemplateId))
                ) && 
                (
                    this.OrderInvoiceTemplateId == input.OrderInvoiceTemplateId ||
                    (this.OrderInvoiceTemplateId != null &&
                    this.OrderInvoiceTemplateId.Equals(input.OrderInvoiceTemplateId))
                ) && 
                (
                    this.OrderEmailTemplateId == input.OrderEmailTemplateId ||
                    (this.OrderEmailTemplateId != null &&
                    this.OrderEmailTemplateId.Equals(input.OrderEmailTemplateId))
                ) && 
                (
                    this.ShipmentEmailTemplateId == input.ShipmentEmailTemplateId ||
                    (this.ShipmentEmailTemplateId != null &&
                    this.ShipmentEmailTemplateId.Equals(input.ShipmentEmailTemplateId))
                ) && 
                (
                    this.OutForDeliveryEmailTemplateId == input.OutForDeliveryEmailTemplateId ||
                    (this.OutForDeliveryEmailTemplateId != null &&
                    this.OutForDeliveryEmailTemplateId.Equals(input.OutForDeliveryEmailTemplateId))
                ) && 
                (
                    this.DeliveredEmailTemplateId == input.DeliveredEmailTemplateId ||
                    (this.DeliveredEmailTemplateId != null &&
                    this.DeliveredEmailTemplateId.Equals(input.DeliveredEmailTemplateId))
                ) && 
                (
                    this.PriceLevel == input.PriceLevel ||
                    (this.PriceLevel != null &&
                    this.PriceLevel.Equals(input.PriceLevel))
                ) && 
                (
                    this.PriceMode == input.PriceMode ||
                    (this.PriceMode != null &&
                    this.PriceMode.Equals(input.PriceMode))
                ) && 
                (
                    this.PriorityCode == input.PriorityCode ||
                    (this.PriorityCode != null &&
                    this.PriorityCode.Equals(input.PriorityCode))
                ) && 
                (
                    this.FulfillmentProcessId == input.FulfillmentProcessId ||
                    (this.FulfillmentProcessId != null &&
                    this.FulfillmentProcessId.Equals(input.FulfillmentProcessId))
                ) && 
                (
                    this.ShipBy == input.ShipBy ||
                    (this.ShipBy != null &&
                    this.ShipBy.Equals(input.ShipBy))
                ) && 
                (
                    this.ShipCode == input.ShipCode ||
                    (this.ShipCode != null &&
                    this.ShipCode.Equals(input.ShipCode))
                ) && 
                (
                    this.ShipDate == input.ShipDate ||
                    (this.ShipDate != null &&
                    this.ShipDate.Equals(input.ShipDate))
                ) && 
                (
                    this.ShippedDate == input.ShippedDate ||
                    (this.ShippedDate != null &&
                    this.ShippedDate.Equals(input.ShippedDate))
                ) && 
                (
                    this.ShipToAttention == input.ShipToAttention ||
                    (this.ShipToAttention != null &&
                    this.ShipToAttention.Equals(input.ShipToAttention))
                ) && 
                (
                    this.ShipToCompany == input.ShipToCompany ||
                    (this.ShipToCompany != null &&
                    this.ShipToCompany.Equals(input.ShipToCompany))
                ) && 
                (
                    this.ShipToStreet == input.ShipToStreet ||
                    (this.ShipToStreet != null &&
                    this.ShipToStreet.Equals(input.ShipToStreet))
                ) && 
                (
                    this.ShipToStreet2 == input.ShipToStreet2 ||
                    (this.ShipToStreet2 != null &&
                    this.ShipToStreet2.Equals(input.ShipToStreet2))
                ) && 
                (
                    this.ShipToStreet3 == input.ShipToStreet3 ||
                    (this.ShipToStreet3 != null &&
                    this.ShipToStreet3.Equals(input.ShipToStreet3))
                ) && 
                (
                    this.ShipToCity == input.ShipToCity ||
                    (this.ShipToCity != null &&
                    this.ShipToCity.Equals(input.ShipToCity))
                ) && 
                (
                    this.ShipToState == input.ShipToState ||
                    (this.ShipToState != null &&
                    this.ShipToState.Equals(input.ShipToState))
                ) && 
                (
                    this.ShipToZip == input.ShipToZip ||
                    (this.ShipToZip != null &&
                    this.ShipToZip.Equals(input.ShipToZip))
                ) && 
                (
                    this.ShipToCountry == input.ShipToCountry ||
                    (this.ShipToCountry != null &&
                    this.ShipToCountry.Equals(input.ShipToCountry))
                ) && 
                (
                    this.ShipToPhone == input.ShipToPhone ||
                    (this.ShipToPhone != null &&
                    this.ShipToPhone.Equals(input.ShipToPhone))
                ) && 
                (
                    this.ShipToEmail == input.ShipToEmail ||
                    (this.ShipToEmail != null &&
                    this.ShipToEmail.Equals(input.ShipToEmail))
                ) && 
                (
                    this.ShippingCharge == input.ShippingCharge ||
                    (this.ShippingCharge != null &&
                    this.ShippingCharge.Equals(input.ShippingCharge))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.StopBackOrders == input.StopBackOrders ||
                    (this.StopBackOrders != null &&
                    this.StopBackOrders.Equals(input.StopBackOrders))
                ) && 
                (
                    this.Subtotal == input.Subtotal ||
                    (this.Subtotal != null &&
                    this.Subtotal.Equals(input.Subtotal))
                ) && 
                (
                    this.Tax == input.Tax ||
                    (this.Tax != null &&
                    this.Tax.Equals(input.Tax))
                ) && 
                (
                    this.Total == input.Total ||
                    (this.Total != null &&
                    this.Total.Equals(input.Total))
                ) && 
                (
                    this.TotalDiscount == input.TotalDiscount ||
                    (this.TotalDiscount != null &&
                    this.TotalDiscount.Equals(input.TotalDiscount))
                ) && 
                (
                    this.TotalPaid == input.TotalPaid ||
                    (this.TotalPaid != null &&
                    this.TotalPaid.Equals(input.TotalPaid))
                ) && 
                (
                    this.TotalQty == input.TotalQty ||
                    (this.TotalQty != null &&
                    this.TotalQty.Equals(input.TotalQty))
                ) && 
                (
                    this.WeightLbs == input.WeightLbs ||
                    (this.WeightLbs != null &&
                    this.WeightLbs.Equals(input.WeightLbs))
                ) && 
                (
                    this.OrderAssemblyInstructions == input.OrderAssemblyInstructions ||
                    (this.OrderAssemblyInstructions != null &&
                    this.OrderAssemblyInstructions.Equals(input.OrderAssemblyInstructions))
                ) && 
                (
                    this.ParcelLabelRef1 == input.ParcelLabelRef1 ||
                    (this.ParcelLabelRef1 != null &&
                    this.ParcelLabelRef1.Equals(input.ParcelLabelRef1))
                ) && 
                (
                    this.ParcelLabelRef2 == input.ParcelLabelRef2 ||
                    (this.ParcelLabelRef2 != null &&
                    this.ParcelLabelRef2.Equals(input.ParcelLabelRef2))
                ) && 
                (
                    this.ParcelLabelRef3 == input.ParcelLabelRef3 ||
                    (this.ParcelLabelRef3 != null &&
                    this.ParcelLabelRef3.Equals(input.ParcelLabelRef3))
                ) && 
                (
                    this.LineItems == input.LineItems ||
                    this.LineItems != null &&
                    this.LineItems.SequenceEqual(input.LineItems)
                ) && 
                (
                    this.RequestedParcelAccessories == input.RequestedParcelAccessories ||
                    this.RequestedParcelAccessories != null &&
                    this.RequestedParcelAccessories.SequenceEqual(input.RequestedParcelAccessories)
                ) && 
                (
                    this.ExtraOrderData == input.ExtraOrderData ||
                    this.ExtraOrderData != null &&
                    this.ExtraOrderData.SequenceEqual(input.ExtraOrderData)
                ) && 
                (
                    this.ExtraLineItemData == input.ExtraLineItemData ||
                    this.ExtraLineItemData != null &&
                    this.ExtraLineItemData.SequenceEqual(input.ExtraLineItemData)
                ) && 
                (
                    this.ExternalShippingSystemId == input.ExternalShippingSystemId ||
                    (this.ExternalShippingSystemId != null &&
                    this.ExternalShippingSystemId.Equals(input.ExternalShippingSystemId))
                ) && 
                (
                    this.ServiceTypeId == input.ServiceTypeId ||
                    (this.ServiceTypeId != null &&
                    this.ServiceTypeId.Equals(input.ServiceTypeId))
                ) && 
                (
                    this.WarehouseServiceTypeId == input.WarehouseServiceTypeId ||
                    (this.WarehouseServiceTypeId != null &&
                    this.WarehouseServiceTypeId.Equals(input.WarehouseServiceTypeId))
                ) && 
                (
                    this.WarehouseServiceLevelId == input.WarehouseServiceLevelId ||
                    (this.WarehouseServiceLevelId != null &&
                    this.WarehouseServiceLevelId.Equals(input.WarehouseServiceLevelId))
                ) && 
                (
                    this.SlaDate == input.SlaDate ||
                    (this.SlaDate != null &&
                    this.SlaDate.Equals(input.SlaDate))
                ) && 
                (
                    this.SlaStatus == input.SlaStatus ||
                    (this.SlaStatus != null &&
                    this.SlaStatus.Equals(input.SlaStatus))
                ) && 
                (
                    this.ProductionType == input.ProductionType ||
                    (this.ProductionType != null &&
                    this.ProductionType.Equals(input.ProductionType))
                ) && 
                (
                    this.BackOrderStatus == input.BackOrderStatus ||
                    (this.BackOrderStatus != null &&
                    this.BackOrderStatus.Equals(input.BackOrderStatus))
                ) && 
                (
                    this.BackOrderReleaseDate == input.BackOrderReleaseDate ||
                    (this.BackOrderReleaseDate != null &&
                    this.BackOrderReleaseDate.Equals(input.BackOrderReleaseDate))
                ) && 
                (
                    this.EstimatedNumberOfCartons == input.EstimatedNumberOfCartons ||
                    (this.EstimatedNumberOfCartons != null &&
                    this.EstimatedNumberOfCartons.Equals(input.EstimatedNumberOfCartons))
                ) && 
                (
                    this.EstimatedCartonizationPlan == input.EstimatedCartonizationPlan ||
                    (this.EstimatedCartonizationPlan != null &&
                    this.EstimatedCartonizationPlan.Equals(input.EstimatedCartonizationPlan))
                ) && 
                (
                    this.ManifestScriptId == input.ManifestScriptId ||
                    (this.ManifestScriptId != null &&
                    this.ManifestScriptId.Equals(input.ManifestScriptId))
                ) && 
                (
                    this.StoreNo == input.StoreNo ||
                    (this.StoreNo != null &&
                    this.StoreNo.Equals(input.StoreNo))
                ) && 
                (
                    this.StoreName == input.StoreName ||
                    (this.StoreName != null &&
                    this.StoreName.Equals(input.StoreName))
                ) && 
                (
                    this.DepartmentNo == input.DepartmentNo ||
                    (this.DepartmentNo != null &&
                    this.DepartmentNo.Equals(input.DepartmentNo))
                ) && 
                (
                    this.DepartmentName == input.DepartmentName ||
                    (this.DepartmentName != null &&
                    this.DepartmentName.Equals(input.DepartmentName))
                ) && 
                (
                    this.VendorNo == input.VendorNo ||
                    (this.VendorNo != null &&
                    this.VendorNo.Equals(input.VendorNo))
                ) && 
                (
                    this.InternalUse91 == input.InternalUse91 ||
                    (this.InternalUse91 != null &&
                    this.InternalUse91.Equals(input.InternalUse91))
                ) && 
                (
                    this.Fulfillability == input.Fulfillability ||
                    (this.Fulfillability != null &&
                    this.Fulfillability.Equals(input.Fulfillability))
                ) && 
                (
                    this.CustomFields == input.CustomFields ||
                    this.CustomFields != null &&
                    this.CustomFields.SequenceEqual(input.CustomFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OrderNo != null)
                    hashCode = hashCode * 59 + this.OrderNo.GetHashCode();
                if (this.CustomerOrderNo != null)
                    hashCode = hashCode * 59 + this.CustomerOrderNo.GetHashCode();
                if (this.LobId != null)
                    hashCode = hashCode * 59 + this.LobId.GetHashCode();
                if (this.WarehouseId != null)
                    hashCode = hashCode * 59 + this.WarehouseId.GetHashCode();
                if (this.OrderDate != null)
                    hashCode = hashCode * 59 + this.OrderDate.GetHashCode();
                if (this.CustomerNo != null)
                    hashCode = hashCode * 59 + this.CustomerNo.GetHashCode();
                if (this.UseOrderNoRoot != null)
                    hashCode = hashCode * 59 + this.UseOrderNoRoot.GetHashCode();
                if (this.ShippingMethod != null)
                    hashCode = hashCode * 59 + this.ShippingMethod.GetHashCode();
                if (this.FirstShipDate != null)
                    hashCode = hashCode * 59 + this.FirstShipDate.GetHashCode();
                if (this.LastShipDate != null)
                    hashCode = hashCode * 59 + this.LastShipDate.GetHashCode();
                if (this.DeliverOnDate != null)
                    hashCode = hashCode * 59 + this.DeliverOnDate.GetHashCode();
                if (this.NeedByDate != null)
                    hashCode = hashCode * 59 + this.NeedByDate.GetHashCode();
                if (this.CarrierId != null)
                    hashCode = hashCode * 59 + this.CarrierId.GetHashCode();
                if (this.ShipVia != null)
                    hashCode = hashCode * 59 + this.ShipVia.GetHashCode();
                if (this.MediaCode != null)
                    hashCode = hashCode * 59 + this.MediaCode.GetHashCode();
                if (this.LegacyRestrictionType != null)
                    hashCode = hashCode * 59 + this.LegacyRestrictionType.GetHashCode();
                if (this.AlcoholOrderType != null)
                    hashCode = hashCode * 59 + this.AlcoholOrderType.GetHashCode();
                if (this.AlternateUsage != null)
                    hashCode = hashCode * 59 + this.AlternateUsage.GetHashCode();
                if (this.AuthorizationAmount != null)
                    hashCode = hashCode * 59 + this.AuthorizationAmount.GetHashCode();
                if (this.AuthorizedBy != null)
                    hashCode = hashCode * 59 + this.AuthorizedBy.GetHashCode();
                if (this.BalanceDue != null)
                    hashCode = hashCode * 59 + this.BalanceDue.GetHashCode();
                if (this.BatchNo != null)
                    hashCode = hashCode * 59 + this.BatchNo.GetHashCode();
                if (this.BillToAttention != null)
                    hashCode = hashCode * 59 + this.BillToAttention.GetHashCode();
                if (this.BillToCompany != null)
                    hashCode = hashCode * 59 + this.BillToCompany.GetHashCode();
                if (this.BillToStreet != null)
                    hashCode = hashCode * 59 + this.BillToStreet.GetHashCode();
                if (this.BillToStreet2 != null)
                    hashCode = hashCode * 59 + this.BillToStreet2.GetHashCode();
                if (this.BillToStreet3 != null)
                    hashCode = hashCode * 59 + this.BillToStreet3.GetHashCode();
                if (this.BillToCity != null)
                    hashCode = hashCode * 59 + this.BillToCity.GetHashCode();
                if (this.BillToState != null)
                    hashCode = hashCode * 59 + this.BillToState.GetHashCode();
                if (this.BillToZip != null)
                    hashCode = hashCode * 59 + this.BillToZip.GetHashCode();
                if (this.BillToCountry != null)
                    hashCode = hashCode * 59 + this.BillToCountry.GetHashCode();
                if (this.BillToPhone != null)
                    hashCode = hashCode * 59 + this.BillToPhone.GetHashCode();
                if (this.BillToEmail != null)
                    hashCode = hashCode * 59 + this.BillToEmail.GetHashCode();
                if (this.NumberOfCartons != null)
                    hashCode = hashCode * 59 + this.NumberOfCartons.GetHashCode();
                if (this.NumberOfPallets != null)
                    hashCode = hashCode * 59 + this.NumberOfPallets.GetHashCode();
                if (this.CompletionStatus != null)
                    hashCode = hashCode * 59 + this.CompletionStatus.GetHashCode();
                if (this.ParcelAccountId != null)
                    hashCode = hashCode * 59 + this.ParcelAccountId.GetHashCode();
                if (this.ThirdPartyParcelAccountId != null)
                    hashCode = hashCode * 59 + this.ThirdPartyParcelAccountId.GetHashCode();
                if (this.CostCenter != null)
                    hashCode = hashCode * 59 + this.CostCenter.GetHashCode();
                if (this.CreateDate != null)
                    hashCode = hashCode * 59 + this.CreateDate.GetHashCode();
                if (this.CustomerPONo != null)
                    hashCode = hashCode * 59 + this.CustomerPONo.GetHashCode();
                if (this.DistributionChannel != null)
                    hashCode = hashCode * 59 + this.DistributionChannel.GetHashCode();
                if (this.DistributionCharges != null)
                    hashCode = hashCode * 59 + this.DistributionCharges.GetHashCode();
                if (this.Division != null)
                    hashCode = hashCode * 59 + this.Division.GetHashCode();
                if (this.EnteredBy != null)
                    hashCode = hashCode * 59 + this.EnteredBy.GetHashCode();
                if (this.PreAllocationEstimatedWeight != null)
                    hashCode = hashCode * 59 + this.PreAllocationEstimatedWeight.GetHashCode();
                if (this.EstimatedWeightLbs != null)
                    hashCode = hashCode * 59 + this.EstimatedWeightLbs.GetHashCode();
                if (this.Freight != null)
                    hashCode = hashCode * 59 + this.Freight.GetHashCode();
                if (this.FulfillabilityDetails != null)
                    hashCode = hashCode * 59 + this.FulfillabilityDetails.GetHashCode();
                if (this.GiftMessageTo != null)
                    hashCode = hashCode * 59 + this.GiftMessageTo.GetHashCode();
                if (this.GiftMessageFrom != null)
                    hashCode = hashCode * 59 + this.GiftMessageFrom.GetHashCode();
                if (this.GiftMessage != null)
                    hashCode = hashCode * 59 + this.GiftMessage.GetHashCode();
                if (this.GroupOrderId != null)
                    hashCode = hashCode * 59 + this.GroupOrderId.GetHashCode();
                if (this.ParentKODOrderId != null)
                    hashCode = hashCode * 59 + this.ParentKODOrderId.GetHashCode();
                if (this.HoldCode != null)
                    hashCode = hashCode * 59 + this.HoldCode.GetHashCode();
                if (this.IntegrationPartnerId != null)
                    hashCode = hashCode * 59 + this.IntegrationPartnerId.GetHashCode();
                if (this.NumberOfLineItems != null)
                    hashCode = hashCode * 59 + this.NumberOfLineItems.GetHashCode();
                if (this.EstimatedNumberOfPicks != null)
                    hashCode = hashCode * 59 + this.EstimatedNumberOfPicks.GetHashCode();
                if (this.ModifyDate != null)
                    hashCode = hashCode * 59 + this.ModifyDate.GetHashCode();
                if (this.OmsOrderID != null)
                    hashCode = hashCode * 59 + this.OmsOrderID.GetHashCode();
                if (this.OmsOrderNo != null)
                    hashCode = hashCode * 59 + this.OmsOrderNo.GetHashCode();
                if (this.OmsCustomerId != null)
                    hashCode = hashCode * 59 + this.OmsCustomerId.GetHashCode();
                if (this.OrderLoadProgramId != null)
                    hashCode = hashCode * 59 + this.OrderLoadProgramId.GetHashCode();
                if (this.OrderMessage != null)
                    hashCode = hashCode * 59 + this.OrderMessage.GetHashCode();
                if (this.OrderReason != null)
                    hashCode = hashCode * 59 + this.OrderReason.GetHashCode();
                if (this.OrderSourceId != null)
                    hashCode = hashCode * 59 + this.OrderSourceId.GetHashCode();
                if (this.PackingSlipTemplateId != null)
                    hashCode = hashCode * 59 + this.PackingSlipTemplateId.GetHashCode();
                if (this.OrderInvoiceTemplateId != null)
                    hashCode = hashCode * 59 + this.OrderInvoiceTemplateId.GetHashCode();
                if (this.OrderEmailTemplateId != null)
                    hashCode = hashCode * 59 + this.OrderEmailTemplateId.GetHashCode();
                if (this.ShipmentEmailTemplateId != null)
                    hashCode = hashCode * 59 + this.ShipmentEmailTemplateId.GetHashCode();
                if (this.OutForDeliveryEmailTemplateId != null)
                    hashCode = hashCode * 59 + this.OutForDeliveryEmailTemplateId.GetHashCode();
                if (this.DeliveredEmailTemplateId != null)
                    hashCode = hashCode * 59 + this.DeliveredEmailTemplateId.GetHashCode();
                if (this.PriceLevel != null)
                    hashCode = hashCode * 59 + this.PriceLevel.GetHashCode();
                if (this.PriceMode != null)
                    hashCode = hashCode * 59 + this.PriceMode.GetHashCode();
                if (this.PriorityCode != null)
                    hashCode = hashCode * 59 + this.PriorityCode.GetHashCode();
                if (this.FulfillmentProcessId != null)
                    hashCode = hashCode * 59 + this.FulfillmentProcessId.GetHashCode();
                if (this.ShipBy != null)
                    hashCode = hashCode * 59 + this.ShipBy.GetHashCode();
                if (this.ShipCode != null)
                    hashCode = hashCode * 59 + this.ShipCode.GetHashCode();
                if (this.ShipDate != null)
                    hashCode = hashCode * 59 + this.ShipDate.GetHashCode();
                if (this.ShippedDate != null)
                    hashCode = hashCode * 59 + this.ShippedDate.GetHashCode();
                if (this.ShipToAttention != null)
                    hashCode = hashCode * 59 + this.ShipToAttention.GetHashCode();
                if (this.ShipToCompany != null)
                    hashCode = hashCode * 59 + this.ShipToCompany.GetHashCode();
                if (this.ShipToStreet != null)
                    hashCode = hashCode * 59 + this.ShipToStreet.GetHashCode();
                if (this.ShipToStreet2 != null)
                    hashCode = hashCode * 59 + this.ShipToStreet2.GetHashCode();
                if (this.ShipToStreet3 != null)
                    hashCode = hashCode * 59 + this.ShipToStreet3.GetHashCode();
                if (this.ShipToCity != null)
                    hashCode = hashCode * 59 + this.ShipToCity.GetHashCode();
                if (this.ShipToState != null)
                    hashCode = hashCode * 59 + this.ShipToState.GetHashCode();
                if (this.ShipToZip != null)
                    hashCode = hashCode * 59 + this.ShipToZip.GetHashCode();
                if (this.ShipToCountry != null)
                    hashCode = hashCode * 59 + this.ShipToCountry.GetHashCode();
                if (this.ShipToPhone != null)
                    hashCode = hashCode * 59 + this.ShipToPhone.GetHashCode();
                if (this.ShipToEmail != null)
                    hashCode = hashCode * 59 + this.ShipToEmail.GetHashCode();
                if (this.ShippingCharge != null)
                    hashCode = hashCode * 59 + this.ShippingCharge.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.StopBackOrders != null)
                    hashCode = hashCode * 59 + this.StopBackOrders.GetHashCode();
                if (this.Subtotal != null)
                    hashCode = hashCode * 59 + this.Subtotal.GetHashCode();
                if (this.Tax != null)
                    hashCode = hashCode * 59 + this.Tax.GetHashCode();
                if (this.Total != null)
                    hashCode = hashCode * 59 + this.Total.GetHashCode();
                if (this.TotalDiscount != null)
                    hashCode = hashCode * 59 + this.TotalDiscount.GetHashCode();
                if (this.TotalPaid != null)
                    hashCode = hashCode * 59 + this.TotalPaid.GetHashCode();
                if (this.TotalQty != null)
                    hashCode = hashCode * 59 + this.TotalQty.GetHashCode();
                if (this.WeightLbs != null)
                    hashCode = hashCode * 59 + this.WeightLbs.GetHashCode();
                if (this.OrderAssemblyInstructions != null)
                    hashCode = hashCode * 59 + this.OrderAssemblyInstructions.GetHashCode();
                if (this.ParcelLabelRef1 != null)
                    hashCode = hashCode * 59 + this.ParcelLabelRef1.GetHashCode();
                if (this.ParcelLabelRef2 != null)
                    hashCode = hashCode * 59 + this.ParcelLabelRef2.GetHashCode();
                if (this.ParcelLabelRef3 != null)
                    hashCode = hashCode * 59 + this.ParcelLabelRef3.GetHashCode();
                if (this.LineItems != null)
                    hashCode = hashCode * 59 + this.LineItems.GetHashCode();
                if (this.RequestedParcelAccessories != null)
                    hashCode = hashCode * 59 + this.RequestedParcelAccessories.GetHashCode();
                if (this.ExtraOrderData != null)
                    hashCode = hashCode * 59 + this.ExtraOrderData.GetHashCode();
                if (this.ExtraLineItemData != null)
                    hashCode = hashCode * 59 + this.ExtraLineItemData.GetHashCode();
                if (this.ExternalShippingSystemId != null)
                    hashCode = hashCode * 59 + this.ExternalShippingSystemId.GetHashCode();
                if (this.ServiceTypeId != null)
                    hashCode = hashCode * 59 + this.ServiceTypeId.GetHashCode();
                if (this.WarehouseServiceTypeId != null)
                    hashCode = hashCode * 59 + this.WarehouseServiceTypeId.GetHashCode();
                if (this.WarehouseServiceLevelId != null)
                    hashCode = hashCode * 59 + this.WarehouseServiceLevelId.GetHashCode();
                if (this.SlaDate != null)
                    hashCode = hashCode * 59 + this.SlaDate.GetHashCode();
                if (this.SlaStatus != null)
                    hashCode = hashCode * 59 + this.SlaStatus.GetHashCode();
                if (this.ProductionType != null)
                    hashCode = hashCode * 59 + this.ProductionType.GetHashCode();
                if (this.BackOrderStatus != null)
                    hashCode = hashCode * 59 + this.BackOrderStatus.GetHashCode();
                if (this.BackOrderReleaseDate != null)
                    hashCode = hashCode * 59 + this.BackOrderReleaseDate.GetHashCode();
                if (this.EstimatedNumberOfCartons != null)
                    hashCode = hashCode * 59 + this.EstimatedNumberOfCartons.GetHashCode();
                if (this.EstimatedCartonizationPlan != null)
                    hashCode = hashCode * 59 + this.EstimatedCartonizationPlan.GetHashCode();
                if (this.ManifestScriptId != null)
                    hashCode = hashCode * 59 + this.ManifestScriptId.GetHashCode();
                if (this.StoreNo != null)
                    hashCode = hashCode * 59 + this.StoreNo.GetHashCode();
                if (this.StoreName != null)
                    hashCode = hashCode * 59 + this.StoreName.GetHashCode();
                if (this.DepartmentNo != null)
                    hashCode = hashCode * 59 + this.DepartmentNo.GetHashCode();
                if (this.DepartmentName != null)
                    hashCode = hashCode * 59 + this.DepartmentName.GetHashCode();
                if (this.VendorNo != null)
                    hashCode = hashCode * 59 + this.VendorNo.GetHashCode();
                if (this.InternalUse91 != null)
                    hashCode = hashCode * 59 + this.InternalUse91.GetHashCode();
                if (this.Fulfillability != null)
                    hashCode = hashCode * 59 + this.Fulfillability.GetHashCode();
                if (this.CustomFields != null)
                    hashCode = hashCode * 59 + this.CustomFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
