/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Infoplus.Client.SwaggerDateConverter;

namespace Infoplus.Model
{
    /// <summary>
    /// OrderSource
    /// </summary>
    [DataContract]
    public partial class OrderSource :  IEquatable<OrderSource>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderSource" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OrderSource() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderSource" /> class.
        /// </summary>
        /// <param name="LobId">LobId (required).</param>
        /// <param name="Name">Name (required).</param>
        /// <param name="PackingNotes">PackingNotes.</param>
        /// <param name="ShippingNotes">ShippingNotes.</param>
        /// <param name="RequireCartonizedASN">RequireCartonizedASN (default to false).</param>
        /// <param name="RequireGS1128Label">RequireGS1128Label (default to false).</param>
        /// <param name="UsesReservations">UsesReservations (default to false).</param>
        /// <param name="PackingSlipId">PackingSlipId.</param>
        /// <param name="OrderInvoiceId">OrderInvoiceId.</param>
        /// <param name="OrderConfirmationEmailId">OrderConfirmationEmailId.</param>
        /// <param name="ShipmentConfirmationEmailId">ShipmentConfirmationEmailId.</param>
        /// <param name="OutForDeliveryConfirmationEmailId">OutForDeliveryConfirmationEmailId.</param>
        /// <param name="DeliveredConfirmationEmailId">DeliveredConfirmationEmailId.</param>
        /// <param name="DefaultServiceTypeId">DefaultServiceTypeId.</param>
        /// <param name="PalletGS1128TemplateId">PalletGS1128TemplateId.</param>
        /// <param name="PalletGS1128NoOfCopies">PalletGS1128NoOfCopies.</param>
        /// <param name="MasterCartonGS1128TemplateId">MasterCartonGS1128TemplateId.</param>
        /// <param name="MasterCartonGS1128NoOfCopies">MasterCartonGS1128NoOfCopies.</param>
        /// <param name="CartonGS1128TemplateId">CartonGS1128TemplateId.</param>
        /// <param name="CartonGS1128NoOfCopies">CartonGS1128NoOfCopies.</param>
        /// <param name="LineItemEachGS1128TemplateId">LineItemEachGS1128TemplateId.</param>
        /// <param name="LineItemEachGS1128NoOfCopies">LineItemEachGS1128NoOfCopies.</param>
        /// <param name="CustomFields">CustomFields.</param>
        public OrderSource(int? LobId = default(int?), string Name = default(string), string PackingNotes = default(string), string ShippingNotes = default(string), bool? RequireCartonizedASN = false, bool? RequireGS1128Label = false, bool? UsesReservations = false, int? PackingSlipId = default(int?), int? OrderInvoiceId = default(int?), int? OrderConfirmationEmailId = default(int?), int? ShipmentConfirmationEmailId = default(int?), int? OutForDeliveryConfirmationEmailId = default(int?), int? DeliveredConfirmationEmailId = default(int?), int? DefaultServiceTypeId = default(int?), int? PalletGS1128TemplateId = default(int?), int? PalletGS1128NoOfCopies = default(int?), int? MasterCartonGS1128TemplateId = default(int?), int? MasterCartonGS1128NoOfCopies = default(int?), int? CartonGS1128TemplateId = default(int?), int? CartonGS1128NoOfCopies = default(int?), int? LineItemEachGS1128TemplateId = default(int?), int? LineItemEachGS1128NoOfCopies = default(int?), Dictionary<string, Object> CustomFields = default(Dictionary<string, Object>))
        {
            // to ensure "LobId" is required (not null)
            if (LobId == null)
            {
                throw new InvalidDataException("LobId is a required property for OrderSource and cannot be null");
            }
            else
            {
                this.LobId = LobId;
            }
            // to ensure "Name" is required (not null)
            if (Name == null)
            {
                throw new InvalidDataException("Name is a required property for OrderSource and cannot be null");
            }
            else
            {
                this.Name = Name;
            }
            this.PackingNotes = PackingNotes;
            this.ShippingNotes = ShippingNotes;
            // use default value if no "RequireCartonizedASN" provided
            if (RequireCartonizedASN == null)
            {
                this.RequireCartonizedASN = false;
            }
            else
            {
                this.RequireCartonizedASN = RequireCartonizedASN;
            }
            // use default value if no "RequireGS1128Label" provided
            if (RequireGS1128Label == null)
            {
                this.RequireGS1128Label = false;
            }
            else
            {
                this.RequireGS1128Label = RequireGS1128Label;
            }
            // use default value if no "UsesReservations" provided
            if (UsesReservations == null)
            {
                this.UsesReservations = false;
            }
            else
            {
                this.UsesReservations = UsesReservations;
            }
            this.PackingSlipId = PackingSlipId;
            this.OrderInvoiceId = OrderInvoiceId;
            this.OrderConfirmationEmailId = OrderConfirmationEmailId;
            this.ShipmentConfirmationEmailId = ShipmentConfirmationEmailId;
            this.OutForDeliveryConfirmationEmailId = OutForDeliveryConfirmationEmailId;
            this.DeliveredConfirmationEmailId = DeliveredConfirmationEmailId;
            this.DefaultServiceTypeId = DefaultServiceTypeId;
            this.PalletGS1128TemplateId = PalletGS1128TemplateId;
            this.PalletGS1128NoOfCopies = PalletGS1128NoOfCopies;
            this.MasterCartonGS1128TemplateId = MasterCartonGS1128TemplateId;
            this.MasterCartonGS1128NoOfCopies = MasterCartonGS1128NoOfCopies;
            this.CartonGS1128TemplateId = CartonGS1128TemplateId;
            this.CartonGS1128NoOfCopies = CartonGS1128NoOfCopies;
            this.LineItemEachGS1128TemplateId = LineItemEachGS1128TemplateId;
            this.LineItemEachGS1128NoOfCopies = LineItemEachGS1128NoOfCopies;
            this.CustomFields = CustomFields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; private set; }

        /// <summary>
        /// Gets or Sets LobId
        /// </summary>
        [DataMember(Name="lobId", EmitDefaultValue=false)]
        public int? LobId { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name="createDate", EmitDefaultValue=false)]
        public DateTime? CreateDate { get; private set; }

        /// <summary>
        /// Gets or Sets ModifyDate
        /// </summary>
        [DataMember(Name="modifyDate", EmitDefaultValue=false)]
        public DateTime? ModifyDate { get; private set; }

        /// <summary>
        /// Gets or Sets PackingNotes
        /// </summary>
        [DataMember(Name="packingNotes", EmitDefaultValue=false)]
        public string PackingNotes { get; set; }

        /// <summary>
        /// Gets or Sets ShippingNotes
        /// </summary>
        [DataMember(Name="shippingNotes", EmitDefaultValue=false)]
        public string ShippingNotes { get; set; }

        /// <summary>
        /// Gets or Sets RequireCartonizedASN
        /// </summary>
        [DataMember(Name="requireCartonizedASN", EmitDefaultValue=false)]
        public bool? RequireCartonizedASN { get; set; }

        /// <summary>
        /// Gets or Sets RequireGS1128Label
        /// </summary>
        [DataMember(Name="requireGS1128Label", EmitDefaultValue=false)]
        public bool? RequireGS1128Label { get; set; }

        /// <summary>
        /// Gets or Sets UsesReservations
        /// </summary>
        [DataMember(Name="usesReservations", EmitDefaultValue=false)]
        public bool? UsesReservations { get; set; }

        /// <summary>
        /// Gets or Sets PackingSlipId
        /// </summary>
        [DataMember(Name="packingSlipId", EmitDefaultValue=false)]
        public int? PackingSlipId { get; set; }

        /// <summary>
        /// Gets or Sets OrderInvoiceId
        /// </summary>
        [DataMember(Name="orderInvoiceId", EmitDefaultValue=false)]
        public int? OrderInvoiceId { get; set; }

        /// <summary>
        /// Gets or Sets OrderConfirmationEmailId
        /// </summary>
        [DataMember(Name="orderConfirmationEmailId", EmitDefaultValue=false)]
        public int? OrderConfirmationEmailId { get; set; }

        /// <summary>
        /// Gets or Sets ShipmentConfirmationEmailId
        /// </summary>
        [DataMember(Name="shipmentConfirmationEmailId", EmitDefaultValue=false)]
        public int? ShipmentConfirmationEmailId { get; set; }

        /// <summary>
        /// Gets or Sets OutForDeliveryConfirmationEmailId
        /// </summary>
        [DataMember(Name="outForDeliveryConfirmationEmailId", EmitDefaultValue=false)]
        public int? OutForDeliveryConfirmationEmailId { get; set; }

        /// <summary>
        /// Gets or Sets DeliveredConfirmationEmailId
        /// </summary>
        [DataMember(Name="deliveredConfirmationEmailId", EmitDefaultValue=false)]
        public int? DeliveredConfirmationEmailId { get; set; }

        /// <summary>
        /// Gets or Sets DefaultServiceTypeId
        /// </summary>
        [DataMember(Name="defaultServiceTypeId", EmitDefaultValue=false)]
        public int? DefaultServiceTypeId { get; set; }

        /// <summary>
        /// Gets or Sets PalletGS1128TemplateId
        /// </summary>
        [DataMember(Name="palletGS1128TemplateId", EmitDefaultValue=false)]
        public int? PalletGS1128TemplateId { get; set; }

        /// <summary>
        /// Gets or Sets PalletGS1128NoOfCopies
        /// </summary>
        [DataMember(Name="palletGS1128NoOfCopies", EmitDefaultValue=false)]
        public int? PalletGS1128NoOfCopies { get; set; }

        /// <summary>
        /// Gets or Sets MasterCartonGS1128TemplateId
        /// </summary>
        [DataMember(Name="masterCartonGS1128TemplateId", EmitDefaultValue=false)]
        public int? MasterCartonGS1128TemplateId { get; set; }

        /// <summary>
        /// Gets or Sets MasterCartonGS1128NoOfCopies
        /// </summary>
        [DataMember(Name="masterCartonGS1128NoOfCopies", EmitDefaultValue=false)]
        public int? MasterCartonGS1128NoOfCopies { get; set; }

        /// <summary>
        /// Gets or Sets CartonGS1128TemplateId
        /// </summary>
        [DataMember(Name="cartonGS1128TemplateId", EmitDefaultValue=false)]
        public int? CartonGS1128TemplateId { get; set; }

        /// <summary>
        /// Gets or Sets CartonGS1128NoOfCopies
        /// </summary>
        [DataMember(Name="cartonGS1128NoOfCopies", EmitDefaultValue=false)]
        public int? CartonGS1128NoOfCopies { get; set; }

        /// <summary>
        /// Gets or Sets LineItemEachGS1128TemplateId
        /// </summary>
        [DataMember(Name="lineItemEachGS1128TemplateId", EmitDefaultValue=false)]
        public int? LineItemEachGS1128TemplateId { get; set; }

        /// <summary>
        /// Gets or Sets LineItemEachGS1128NoOfCopies
        /// </summary>
        [DataMember(Name="lineItemEachGS1128NoOfCopies", EmitDefaultValue=false)]
        public int? LineItemEachGS1128NoOfCopies { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name="customFields", EmitDefaultValue=false)]
        public Dictionary<string, Object> CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrderSource {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  LobId: ").Append(LobId).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  ModifyDate: ").Append(ModifyDate).Append("\n");
            sb.Append("  PackingNotes: ").Append(PackingNotes).Append("\n");
            sb.Append("  ShippingNotes: ").Append(ShippingNotes).Append("\n");
            sb.Append("  RequireCartonizedASN: ").Append(RequireCartonizedASN).Append("\n");
            sb.Append("  RequireGS1128Label: ").Append(RequireGS1128Label).Append("\n");
            sb.Append("  UsesReservations: ").Append(UsesReservations).Append("\n");
            sb.Append("  PackingSlipId: ").Append(PackingSlipId).Append("\n");
            sb.Append("  OrderInvoiceId: ").Append(OrderInvoiceId).Append("\n");
            sb.Append("  OrderConfirmationEmailId: ").Append(OrderConfirmationEmailId).Append("\n");
            sb.Append("  ShipmentConfirmationEmailId: ").Append(ShipmentConfirmationEmailId).Append("\n");
            sb.Append("  OutForDeliveryConfirmationEmailId: ").Append(OutForDeliveryConfirmationEmailId).Append("\n");
            sb.Append("  DeliveredConfirmationEmailId: ").Append(DeliveredConfirmationEmailId).Append("\n");
            sb.Append("  DefaultServiceTypeId: ").Append(DefaultServiceTypeId).Append("\n");
            sb.Append("  PalletGS1128TemplateId: ").Append(PalletGS1128TemplateId).Append("\n");
            sb.Append("  PalletGS1128NoOfCopies: ").Append(PalletGS1128NoOfCopies).Append("\n");
            sb.Append("  MasterCartonGS1128TemplateId: ").Append(MasterCartonGS1128TemplateId).Append("\n");
            sb.Append("  MasterCartonGS1128NoOfCopies: ").Append(MasterCartonGS1128NoOfCopies).Append("\n");
            sb.Append("  CartonGS1128TemplateId: ").Append(CartonGS1128TemplateId).Append("\n");
            sb.Append("  CartonGS1128NoOfCopies: ").Append(CartonGS1128NoOfCopies).Append("\n");
            sb.Append("  LineItemEachGS1128TemplateId: ").Append(LineItemEachGS1128TemplateId).Append("\n");
            sb.Append("  LineItemEachGS1128NoOfCopies: ").Append(LineItemEachGS1128NoOfCopies).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrderSource);
        }

        /// <summary>
        /// Returns true if OrderSource instances are equal
        /// </summary>
        /// <param name="input">Instance of OrderSource to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderSource input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.LobId == input.LobId ||
                    (this.LobId != null &&
                    this.LobId.Equals(input.LobId))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.CreateDate == input.CreateDate ||
                    (this.CreateDate != null &&
                    this.CreateDate.Equals(input.CreateDate))
                ) && 
                (
                    this.ModifyDate == input.ModifyDate ||
                    (this.ModifyDate != null &&
                    this.ModifyDate.Equals(input.ModifyDate))
                ) && 
                (
                    this.PackingNotes == input.PackingNotes ||
                    (this.PackingNotes != null &&
                    this.PackingNotes.Equals(input.PackingNotes))
                ) && 
                (
                    this.ShippingNotes == input.ShippingNotes ||
                    (this.ShippingNotes != null &&
                    this.ShippingNotes.Equals(input.ShippingNotes))
                ) && 
                (
                    this.RequireCartonizedASN == input.RequireCartonizedASN ||
                    (this.RequireCartonizedASN != null &&
                    this.RequireCartonizedASN.Equals(input.RequireCartonizedASN))
                ) && 
                (
                    this.RequireGS1128Label == input.RequireGS1128Label ||
                    (this.RequireGS1128Label != null &&
                    this.RequireGS1128Label.Equals(input.RequireGS1128Label))
                ) && 
                (
                    this.UsesReservations == input.UsesReservations ||
                    (this.UsesReservations != null &&
                    this.UsesReservations.Equals(input.UsesReservations))
                ) && 
                (
                    this.PackingSlipId == input.PackingSlipId ||
                    (this.PackingSlipId != null &&
                    this.PackingSlipId.Equals(input.PackingSlipId))
                ) && 
                (
                    this.OrderInvoiceId == input.OrderInvoiceId ||
                    (this.OrderInvoiceId != null &&
                    this.OrderInvoiceId.Equals(input.OrderInvoiceId))
                ) && 
                (
                    this.OrderConfirmationEmailId == input.OrderConfirmationEmailId ||
                    (this.OrderConfirmationEmailId != null &&
                    this.OrderConfirmationEmailId.Equals(input.OrderConfirmationEmailId))
                ) && 
                (
                    this.ShipmentConfirmationEmailId == input.ShipmentConfirmationEmailId ||
                    (this.ShipmentConfirmationEmailId != null &&
                    this.ShipmentConfirmationEmailId.Equals(input.ShipmentConfirmationEmailId))
                ) && 
                (
                    this.OutForDeliveryConfirmationEmailId == input.OutForDeliveryConfirmationEmailId ||
                    (this.OutForDeliveryConfirmationEmailId != null &&
                    this.OutForDeliveryConfirmationEmailId.Equals(input.OutForDeliveryConfirmationEmailId))
                ) && 
                (
                    this.DeliveredConfirmationEmailId == input.DeliveredConfirmationEmailId ||
                    (this.DeliveredConfirmationEmailId != null &&
                    this.DeliveredConfirmationEmailId.Equals(input.DeliveredConfirmationEmailId))
                ) && 
                (
                    this.DefaultServiceTypeId == input.DefaultServiceTypeId ||
                    (this.DefaultServiceTypeId != null &&
                    this.DefaultServiceTypeId.Equals(input.DefaultServiceTypeId))
                ) && 
                (
                    this.PalletGS1128TemplateId == input.PalletGS1128TemplateId ||
                    (this.PalletGS1128TemplateId != null &&
                    this.PalletGS1128TemplateId.Equals(input.PalletGS1128TemplateId))
                ) && 
                (
                    this.PalletGS1128NoOfCopies == input.PalletGS1128NoOfCopies ||
                    (this.PalletGS1128NoOfCopies != null &&
                    this.PalletGS1128NoOfCopies.Equals(input.PalletGS1128NoOfCopies))
                ) && 
                (
                    this.MasterCartonGS1128TemplateId == input.MasterCartonGS1128TemplateId ||
                    (this.MasterCartonGS1128TemplateId != null &&
                    this.MasterCartonGS1128TemplateId.Equals(input.MasterCartonGS1128TemplateId))
                ) && 
                (
                    this.MasterCartonGS1128NoOfCopies == input.MasterCartonGS1128NoOfCopies ||
                    (this.MasterCartonGS1128NoOfCopies != null &&
                    this.MasterCartonGS1128NoOfCopies.Equals(input.MasterCartonGS1128NoOfCopies))
                ) && 
                (
                    this.CartonGS1128TemplateId == input.CartonGS1128TemplateId ||
                    (this.CartonGS1128TemplateId != null &&
                    this.CartonGS1128TemplateId.Equals(input.CartonGS1128TemplateId))
                ) && 
                (
                    this.CartonGS1128NoOfCopies == input.CartonGS1128NoOfCopies ||
                    (this.CartonGS1128NoOfCopies != null &&
                    this.CartonGS1128NoOfCopies.Equals(input.CartonGS1128NoOfCopies))
                ) && 
                (
                    this.LineItemEachGS1128TemplateId == input.LineItemEachGS1128TemplateId ||
                    (this.LineItemEachGS1128TemplateId != null &&
                    this.LineItemEachGS1128TemplateId.Equals(input.LineItemEachGS1128TemplateId))
                ) && 
                (
                    this.LineItemEachGS1128NoOfCopies == input.LineItemEachGS1128NoOfCopies ||
                    (this.LineItemEachGS1128NoOfCopies != null &&
                    this.LineItemEachGS1128NoOfCopies.Equals(input.LineItemEachGS1128NoOfCopies))
                ) && 
                (
                    this.CustomFields == input.CustomFields ||
                    this.CustomFields != null &&
                    this.CustomFields.SequenceEqual(input.CustomFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.LobId != null)
                    hashCode = hashCode * 59 + this.LobId.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.CreateDate != null)
                    hashCode = hashCode * 59 + this.CreateDate.GetHashCode();
                if (this.ModifyDate != null)
                    hashCode = hashCode * 59 + this.ModifyDate.GetHashCode();
                if (this.PackingNotes != null)
                    hashCode = hashCode * 59 + this.PackingNotes.GetHashCode();
                if (this.ShippingNotes != null)
                    hashCode = hashCode * 59 + this.ShippingNotes.GetHashCode();
                if (this.RequireCartonizedASN != null)
                    hashCode = hashCode * 59 + this.RequireCartonizedASN.GetHashCode();
                if (this.RequireGS1128Label != null)
                    hashCode = hashCode * 59 + this.RequireGS1128Label.GetHashCode();
                if (this.UsesReservations != null)
                    hashCode = hashCode * 59 + this.UsesReservations.GetHashCode();
                if (this.PackingSlipId != null)
                    hashCode = hashCode * 59 + this.PackingSlipId.GetHashCode();
                if (this.OrderInvoiceId != null)
                    hashCode = hashCode * 59 + this.OrderInvoiceId.GetHashCode();
                if (this.OrderConfirmationEmailId != null)
                    hashCode = hashCode * 59 + this.OrderConfirmationEmailId.GetHashCode();
                if (this.ShipmentConfirmationEmailId != null)
                    hashCode = hashCode * 59 + this.ShipmentConfirmationEmailId.GetHashCode();
                if (this.OutForDeliveryConfirmationEmailId != null)
                    hashCode = hashCode * 59 + this.OutForDeliveryConfirmationEmailId.GetHashCode();
                if (this.DeliveredConfirmationEmailId != null)
                    hashCode = hashCode * 59 + this.DeliveredConfirmationEmailId.GetHashCode();
                if (this.DefaultServiceTypeId != null)
                    hashCode = hashCode * 59 + this.DefaultServiceTypeId.GetHashCode();
                if (this.PalletGS1128TemplateId != null)
                    hashCode = hashCode * 59 + this.PalletGS1128TemplateId.GetHashCode();
                if (this.PalletGS1128NoOfCopies != null)
                    hashCode = hashCode * 59 + this.PalletGS1128NoOfCopies.GetHashCode();
                if (this.MasterCartonGS1128TemplateId != null)
                    hashCode = hashCode * 59 + this.MasterCartonGS1128TemplateId.GetHashCode();
                if (this.MasterCartonGS1128NoOfCopies != null)
                    hashCode = hashCode * 59 + this.MasterCartonGS1128NoOfCopies.GetHashCode();
                if (this.CartonGS1128TemplateId != null)
                    hashCode = hashCode * 59 + this.CartonGS1128TemplateId.GetHashCode();
                if (this.CartonGS1128NoOfCopies != null)
                    hashCode = hashCode * 59 + this.CartonGS1128NoOfCopies.GetHashCode();
                if (this.LineItemEachGS1128TemplateId != null)
                    hashCode = hashCode * 59 + this.LineItemEachGS1128TemplateId.GetHashCode();
                if (this.LineItemEachGS1128NoOfCopies != null)
                    hashCode = hashCode * 59 + this.LineItemEachGS1128NoOfCopies.GetHashCode();
                if (this.CustomFields != null)
                    hashCode = hashCode * 59 + this.CustomFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
