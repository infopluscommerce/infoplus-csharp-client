/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Infoplus.Client.SwaggerDateConverter;

namespace Infoplus.Model
{
    /// <summary>
    /// OrderWarehouseFulfillmentPlanDetail
    /// </summary>
    [DataContract]
    public partial class OrderWarehouseFulfillmentPlanDetail :  IEquatable<OrderWarehouseFulfillmentPlanDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderWarehouseFulfillmentPlanDetail" /> class.
        /// </summary>
        /// <param name="WarehouseId">WarehouseId.</param>
        /// <param name="CarrierCode">CarrierCode.</param>
        /// <param name="LineItemList">LineItemList.</param>
        public OrderWarehouseFulfillmentPlanDetail(int? WarehouseId = default(int?), int? CarrierCode = default(int?), List<string> LineItemList = default(List<string>))
        {
            this.WarehouseId = WarehouseId;
            this.CarrierCode = CarrierCode;
            this.LineItemList = LineItemList;
        }
        
        /// <summary>
        /// Gets or Sets WarehouseId
        /// </summary>
        [DataMember(Name="warehouseId", EmitDefaultValue=false)]
        public int? WarehouseId { get; set; }

        /// <summary>
        /// Gets or Sets CarrierCode
        /// </summary>
        [DataMember(Name="carrierCode", EmitDefaultValue=false)]
        public int? CarrierCode { get; set; }

        /// <summary>
        /// Gets or Sets LineItemList
        /// </summary>
        [DataMember(Name="lineItemList", EmitDefaultValue=false)]
        public List<string> LineItemList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrderWarehouseFulfillmentPlanDetail {\n");
            sb.Append("  WarehouseId: ").Append(WarehouseId).Append("\n");
            sb.Append("  CarrierCode: ").Append(CarrierCode).Append("\n");
            sb.Append("  LineItemList: ").Append(LineItemList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrderWarehouseFulfillmentPlanDetail);
        }

        /// <summary>
        /// Returns true if OrderWarehouseFulfillmentPlanDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of OrderWarehouseFulfillmentPlanDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderWarehouseFulfillmentPlanDetail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.WarehouseId == input.WarehouseId ||
                    (this.WarehouseId != null &&
                    this.WarehouseId.Equals(input.WarehouseId))
                ) && 
                (
                    this.CarrierCode == input.CarrierCode ||
                    (this.CarrierCode != null &&
                    this.CarrierCode.Equals(input.CarrierCode))
                ) && 
                (
                    this.LineItemList == input.LineItemList ||
                    this.LineItemList != null &&
                    this.LineItemList.SequenceEqual(input.LineItemList)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.WarehouseId != null)
                    hashCode = hashCode * 59 + this.WarehouseId.GetHashCode();
                if (this.CarrierCode != null)
                    hashCode = hashCode * 59 + this.CarrierCode.GetHashCode();
                if (this.LineItemList != null)
                    hashCode = hashCode * 59 + this.LineItemList.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
