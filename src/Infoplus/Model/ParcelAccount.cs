/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Infoplus.Client.SwaggerDateConverter;

namespace Infoplus.Model
{
    /// <summary>
    /// ParcelAccount
    /// </summary>
    [DataContract]
    public partial class ParcelAccount :  IEquatable<ParcelAccount>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ParcelAccount" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ParcelAccount() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ParcelAccount" /> class.
        /// </summary>
        /// <param name="CarrierCompany">CarrierCompany (required).</param>
        /// <param name="AccountNo">AccountNo (required).</param>
        /// <param name="LobId">LobId.</param>
        /// <param name="OrderSourceId">OrderSourceId.</param>
        /// <param name="Name">Name (required).</param>
        /// <param name="ManifestPartnerId">ManifestPartnerId (required).</param>
        /// <param name="ManifestPartnerCredentials">ManifestPartnerCredentials (required).</param>
        /// <param name="CustomFields">CustomFields.</param>
        public ParcelAccount(string CarrierCompany = default(string), string AccountNo = default(string), int? LobId = default(int?), int? OrderSourceId = default(int?), string Name = default(string), string ManifestPartnerId = default(string), string ManifestPartnerCredentials = default(string), Dictionary<string, Object> CustomFields = default(Dictionary<string, Object>))
        {
            // to ensure "CarrierCompany" is required (not null)
            if (CarrierCompany == null)
            {
                throw new InvalidDataException("CarrierCompany is a required property for ParcelAccount and cannot be null");
            }
            else
            {
                this.CarrierCompany = CarrierCompany;
            }
            // to ensure "AccountNo" is required (not null)
            if (AccountNo == null)
            {
                throw new InvalidDataException("AccountNo is a required property for ParcelAccount and cannot be null");
            }
            else
            {
                this.AccountNo = AccountNo;
            }
            // to ensure "Name" is required (not null)
            if (Name == null)
            {
                throw new InvalidDataException("Name is a required property for ParcelAccount and cannot be null");
            }
            else
            {
                this.Name = Name;
            }
            // to ensure "ManifestPartnerId" is required (not null)
            if (ManifestPartnerId == null)
            {
                throw new InvalidDataException("ManifestPartnerId is a required property for ParcelAccount and cannot be null");
            }
            else
            {
                this.ManifestPartnerId = ManifestPartnerId;
            }
            // to ensure "ManifestPartnerCredentials" is required (not null)
            if (ManifestPartnerCredentials == null)
            {
                throw new InvalidDataException("ManifestPartnerCredentials is a required property for ParcelAccount and cannot be null");
            }
            else
            {
                this.ManifestPartnerCredentials = ManifestPartnerCredentials;
            }
            this.LobId = LobId;
            this.OrderSourceId = OrderSourceId;
            this.CustomFields = CustomFields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; private set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name="createDate", EmitDefaultValue=false)]
        public DateTime? CreateDate { get; private set; }

        /// <summary>
        /// Gets or Sets ModifyDate
        /// </summary>
        [DataMember(Name="modifyDate", EmitDefaultValue=false)]
        public DateTime? ModifyDate { get; private set; }

        /// <summary>
        /// Gets or Sets CarrierCompany
        /// </summary>
        [DataMember(Name="carrierCompany", EmitDefaultValue=false)]
        public string CarrierCompany { get; set; }

        /// <summary>
        /// Gets or Sets AccountNo
        /// </summary>
        [DataMember(Name="accountNo", EmitDefaultValue=false)]
        public string AccountNo { get; set; }

        /// <summary>
        /// Gets or Sets LobId
        /// </summary>
        [DataMember(Name="lobId", EmitDefaultValue=false)]
        public int? LobId { get; set; }

        /// <summary>
        /// Gets or Sets OrderSourceId
        /// </summary>
        [DataMember(Name="orderSourceId", EmitDefaultValue=false)]
        public int? OrderSourceId { get; set; }

        /// <summary>
        /// Gets or Sets _Client
        /// </summary>
        [DataMember(Name="client", EmitDefaultValue=false)]
        public int? _Client { get; private set; }

        /// <summary>
        /// Gets or Sets IpcDatabaseId
        /// </summary>
        [DataMember(Name="ipcDatabaseId", EmitDefaultValue=false)]
        public int? IpcDatabaseId { get; private set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets ManifestPartnerId
        /// </summary>
        [DataMember(Name="manifestPartnerId", EmitDefaultValue=false)]
        public string ManifestPartnerId { get; set; }

        /// <summary>
        /// Gets or Sets ManifestPartnerCredentials
        /// </summary>
        [DataMember(Name="manifestPartnerCredentials", EmitDefaultValue=false)]
        public string ManifestPartnerCredentials { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name="customFields", EmitDefaultValue=false)]
        public Dictionary<string, Object> CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ParcelAccount {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  ModifyDate: ").Append(ModifyDate).Append("\n");
            sb.Append("  CarrierCompany: ").Append(CarrierCompany).Append("\n");
            sb.Append("  AccountNo: ").Append(AccountNo).Append("\n");
            sb.Append("  LobId: ").Append(LobId).Append("\n");
            sb.Append("  OrderSourceId: ").Append(OrderSourceId).Append("\n");
            sb.Append("  _Client: ").Append(_Client).Append("\n");
            sb.Append("  IpcDatabaseId: ").Append(IpcDatabaseId).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ManifestPartnerId: ").Append(ManifestPartnerId).Append("\n");
            sb.Append("  ManifestPartnerCredentials: ").Append(ManifestPartnerCredentials).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ParcelAccount);
        }

        /// <summary>
        /// Returns true if ParcelAccount instances are equal
        /// </summary>
        /// <param name="input">Instance of ParcelAccount to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ParcelAccount input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.CreateDate == input.CreateDate ||
                    (this.CreateDate != null &&
                    this.CreateDate.Equals(input.CreateDate))
                ) && 
                (
                    this.ModifyDate == input.ModifyDate ||
                    (this.ModifyDate != null &&
                    this.ModifyDate.Equals(input.ModifyDate))
                ) && 
                (
                    this.CarrierCompany == input.CarrierCompany ||
                    (this.CarrierCompany != null &&
                    this.CarrierCompany.Equals(input.CarrierCompany))
                ) && 
                (
                    this.AccountNo == input.AccountNo ||
                    (this.AccountNo != null &&
                    this.AccountNo.Equals(input.AccountNo))
                ) && 
                (
                    this.LobId == input.LobId ||
                    (this.LobId != null &&
                    this.LobId.Equals(input.LobId))
                ) && 
                (
                    this.OrderSourceId == input.OrderSourceId ||
                    (this.OrderSourceId != null &&
                    this.OrderSourceId.Equals(input.OrderSourceId))
                ) && 
                (
                    this._Client == input._Client ||
                    (this._Client != null &&
                    this._Client.Equals(input._Client))
                ) && 
                (
                    this.IpcDatabaseId == input.IpcDatabaseId ||
                    (this.IpcDatabaseId != null &&
                    this.IpcDatabaseId.Equals(input.IpcDatabaseId))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.ManifestPartnerId == input.ManifestPartnerId ||
                    (this.ManifestPartnerId != null &&
                    this.ManifestPartnerId.Equals(input.ManifestPartnerId))
                ) && 
                (
                    this.ManifestPartnerCredentials == input.ManifestPartnerCredentials ||
                    (this.ManifestPartnerCredentials != null &&
                    this.ManifestPartnerCredentials.Equals(input.ManifestPartnerCredentials))
                ) && 
                (
                    this.CustomFields == input.CustomFields ||
                    this.CustomFields != null &&
                    this.CustomFields.SequenceEqual(input.CustomFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.CreateDate != null)
                    hashCode = hashCode * 59 + this.CreateDate.GetHashCode();
                if (this.ModifyDate != null)
                    hashCode = hashCode * 59 + this.ModifyDate.GetHashCode();
                if (this.CarrierCompany != null)
                    hashCode = hashCode * 59 + this.CarrierCompany.GetHashCode();
                if (this.AccountNo != null)
                    hashCode = hashCode * 59 + this.AccountNo.GetHashCode();
                if (this.LobId != null)
                    hashCode = hashCode * 59 + this.LobId.GetHashCode();
                if (this.OrderSourceId != null)
                    hashCode = hashCode * 59 + this.OrderSourceId.GetHashCode();
                if (this._Client != null)
                    hashCode = hashCode * 59 + this._Client.GetHashCode();
                if (this.IpcDatabaseId != null)
                    hashCode = hashCode * 59 + this.IpcDatabaseId.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.ManifestPartnerId != null)
                    hashCode = hashCode * 59 + this.ManifestPartnerId.GetHashCode();
                if (this.ManifestPartnerCredentials != null)
                    hashCode = hashCode * 59 + this.ManifestPartnerCredentials.GetHashCode();
                if (this.CustomFields != null)
                    hashCode = hashCode * 59 + this.CustomFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
