/* 
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Infoplus.Client.SwaggerDateConverter;

namespace Infoplus.Model
{
    /// <summary>
    /// Vendor
    /// </summary>
    [DataContract]
    public partial class Vendor :  IEquatable<Vendor>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Vendor" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Vendor() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Vendor" /> class.
        /// </summary>
        /// <param name="VendorNo">VendorNo (required).</param>
        /// <param name="LobId">LobId (required).</param>
        /// <param name="Name">Name (required).</param>
        /// <param name="Street">Street (required).</param>
        /// <param name="Street2">Street2.</param>
        /// <param name="City">City (required).</param>
        /// <param name="State">State (required).</param>
        /// <param name="Country">Country.</param>
        /// <param name="ZipCode">ZipCode (required).</param>
        /// <param name="Contact">Contact.</param>
        /// <param name="Phone">Phone.</param>
        /// <param name="Fax">Fax.</param>
        /// <param name="ExternalId">ExternalId.</param>
        /// <param name="Terms">Terms.</param>
        /// <param name="Fob">Fob.</param>
        /// <param name="ShipVia">ShipVia.</param>
        /// <param name="RequestDays">RequestDays.</param>
        /// <param name="ActualDays">ActualDays.</param>
        /// <param name="SalesTaxCode">SalesTaxCode.</param>
        /// <param name="Product1">Product1.</param>
        /// <param name="Product2">Product2.</param>
        /// <param name="Product3">Product3.</param>
        /// <param name="Product4">Product4.</param>
        /// <param name="Product5">Product5.</param>
        /// <param name="Product6">Product6.</param>
        /// <param name="Product7">Product7.</param>
        /// <param name="Product8">Product8.</param>
        /// <param name="Product9">Product9.</param>
        /// <param name="PodDays">PodDays.</param>
        /// <param name="ChargeOut">ChargeOut.</param>
        /// <param name="ArEmail">ArEmail.</param>
        /// <param name="OrderEmail">OrderEmail.</param>
        /// <param name="OrderAttach">OrderAttach.</param>
        /// <param name="SendQuantityType">SendQuantityType.</param>
        /// <param name="Minority">Minority.</param>
        /// <param name="SendOutside">SendOutside.</param>
        /// <param name="PodOrderSuffix">PodOrderSuffix.</param>
        /// <param name="PodEmail">PodEmail.</param>
        /// <param name="CreateDate">CreateDate.</param>
        /// <param name="ModifyDate">ModifyDate.</param>
        /// <param name="Inactive">Inactive (required).</param>
        /// <param name="CustomFields">CustomFields.</param>
        public Vendor(int? VendorNo = default(int?), int? LobId = default(int?), string Name = default(string), string Street = default(string), string Street2 = default(string), string City = default(string), string State = default(string), string Country = default(string), string ZipCode = default(string), string Contact = default(string), string Phone = default(string), string Fax = default(string), string ExternalId = default(string), string Terms = default(string), string Fob = default(string), int? ShipVia = default(int?), int? RequestDays = default(int?), int? ActualDays = default(int?), string SalesTaxCode = default(string), int? Product1 = default(int?), int? Product2 = default(int?), int? Product3 = default(int?), int? Product4 = default(int?), int? Product5 = default(int?), int? Product6 = default(int?), int? Product7 = default(int?), int? Product8 = default(int?), int? Product9 = default(int?), int? PodDays = default(int?), string ChargeOut = default(string), string ArEmail = default(string), string OrderEmail = default(string), string OrderAttach = default(string), string SendQuantityType = default(string), string Minority = default(string), string SendOutside = default(string), int? PodOrderSuffix = default(int?), string PodEmail = default(string), DateTime? CreateDate = default(DateTime?), DateTime? ModifyDate = default(DateTime?), string Inactive = default(string), Dictionary<string, Object> CustomFields = default(Dictionary<string, Object>))
        {
            // to ensure "VendorNo" is required (not null)
            if (VendorNo == null)
            {
                throw new InvalidDataException("VendorNo is a required property for Vendor and cannot be null");
            }
            else
            {
                this.VendorNo = VendorNo;
            }
            // to ensure "LobId" is required (not null)
            if (LobId == null)
            {
                throw new InvalidDataException("LobId is a required property for Vendor and cannot be null");
            }
            else
            {
                this.LobId = LobId;
            }
            // to ensure "Name" is required (not null)
            if (Name == null)
            {
                throw new InvalidDataException("Name is a required property for Vendor and cannot be null");
            }
            else
            {
                this.Name = Name;
            }
            // to ensure "Street" is required (not null)
            if (Street == null)
            {
                throw new InvalidDataException("Street is a required property for Vendor and cannot be null");
            }
            else
            {
                this.Street = Street;
            }
            // to ensure "City" is required (not null)
            if (City == null)
            {
                throw new InvalidDataException("City is a required property for Vendor and cannot be null");
            }
            else
            {
                this.City = City;
            }
            // to ensure "State" is required (not null)
            if (State == null)
            {
                throw new InvalidDataException("State is a required property for Vendor and cannot be null");
            }
            else
            {
                this.State = State;
            }
            // to ensure "ZipCode" is required (not null)
            if (ZipCode == null)
            {
                throw new InvalidDataException("ZipCode is a required property for Vendor and cannot be null");
            }
            else
            {
                this.ZipCode = ZipCode;
            }
            // to ensure "Inactive" is required (not null)
            if (Inactive == null)
            {
                throw new InvalidDataException("Inactive is a required property for Vendor and cannot be null");
            }
            else
            {
                this.Inactive = Inactive;
            }
            this.Street2 = Street2;
            this.Country = Country;
            this.Contact = Contact;
            this.Phone = Phone;
            this.Fax = Fax;
            this.ExternalId = ExternalId;
            this.Terms = Terms;
            this.Fob = Fob;
            this.ShipVia = ShipVia;
            this.RequestDays = RequestDays;
            this.ActualDays = ActualDays;
            this.SalesTaxCode = SalesTaxCode;
            this.Product1 = Product1;
            this.Product2 = Product2;
            this.Product3 = Product3;
            this.Product4 = Product4;
            this.Product5 = Product5;
            this.Product6 = Product6;
            this.Product7 = Product7;
            this.Product8 = Product8;
            this.Product9 = Product9;
            this.PodDays = PodDays;
            this.ChargeOut = ChargeOut;
            this.ArEmail = ArEmail;
            this.OrderEmail = OrderEmail;
            this.OrderAttach = OrderAttach;
            this.SendQuantityType = SendQuantityType;
            this.Minority = Minority;
            this.SendOutside = SendOutside;
            this.PodOrderSuffix = PodOrderSuffix;
            this.PodEmail = PodEmail;
            this.CreateDate = CreateDate;
            this.ModifyDate = ModifyDate;
            this.CustomFields = CustomFields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; private set; }

        /// <summary>
        /// Gets or Sets VendorNo
        /// </summary>
        [DataMember(Name="vendorNo", EmitDefaultValue=false)]
        public int? VendorNo { get; set; }

        /// <summary>
        /// Gets or Sets LobId
        /// </summary>
        [DataMember(Name="lobId", EmitDefaultValue=false)]
        public int? LobId { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Street
        /// </summary>
        [DataMember(Name="street", EmitDefaultValue=false)]
        public string Street { get; set; }

        /// <summary>
        /// Gets or Sets Street2
        /// </summary>
        [DataMember(Name="street2", EmitDefaultValue=false)]
        public string Street2 { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name="city", EmitDefaultValue=false)]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name="state", EmitDefaultValue=false)]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets Country
        /// </summary>
        [DataMember(Name="country", EmitDefaultValue=false)]
        public string Country { get; set; }

        /// <summary>
        /// Gets or Sets ZipCode
        /// </summary>
        [DataMember(Name="zipCode", EmitDefaultValue=false)]
        public string ZipCode { get; set; }

        /// <summary>
        /// Gets or Sets Contact
        /// </summary>
        [DataMember(Name="contact", EmitDefaultValue=false)]
        public string Contact { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name="phone", EmitDefaultValue=false)]
        public string Phone { get; set; }

        /// <summary>
        /// Gets or Sets Fax
        /// </summary>
        [DataMember(Name="fax", EmitDefaultValue=false)]
        public string Fax { get; set; }

        /// <summary>
        /// Gets or Sets ExternalId
        /// </summary>
        [DataMember(Name="externalId", EmitDefaultValue=false)]
        public string ExternalId { get; set; }

        /// <summary>
        /// Gets or Sets Terms
        /// </summary>
        [DataMember(Name="terms", EmitDefaultValue=false)]
        public string Terms { get; set; }

        /// <summary>
        /// Gets or Sets Fob
        /// </summary>
        [DataMember(Name="fob", EmitDefaultValue=false)]
        public string Fob { get; set; }

        /// <summary>
        /// Gets or Sets ShipVia
        /// </summary>
        [DataMember(Name="shipVia", EmitDefaultValue=false)]
        public int? ShipVia { get; set; }

        /// <summary>
        /// Gets or Sets RequestDays
        /// </summary>
        [DataMember(Name="requestDays", EmitDefaultValue=false)]
        public int? RequestDays { get; set; }

        /// <summary>
        /// Gets or Sets ActualDays
        /// </summary>
        [DataMember(Name="actualDays", EmitDefaultValue=false)]
        public int? ActualDays { get; set; }

        /// <summary>
        /// Gets or Sets SalesTaxCode
        /// </summary>
        [DataMember(Name="salesTaxCode", EmitDefaultValue=false)]
        public string SalesTaxCode { get; set; }

        /// <summary>
        /// Gets or Sets Product1
        /// </summary>
        [DataMember(Name="product1", EmitDefaultValue=false)]
        public int? Product1 { get; set; }

        /// <summary>
        /// Gets or Sets Product2
        /// </summary>
        [DataMember(Name="product2", EmitDefaultValue=false)]
        public int? Product2 { get; set; }

        /// <summary>
        /// Gets or Sets Product3
        /// </summary>
        [DataMember(Name="product3", EmitDefaultValue=false)]
        public int? Product3 { get; set; }

        /// <summary>
        /// Gets or Sets Product4
        /// </summary>
        [DataMember(Name="product4", EmitDefaultValue=false)]
        public int? Product4 { get; set; }

        /// <summary>
        /// Gets or Sets Product5
        /// </summary>
        [DataMember(Name="product5", EmitDefaultValue=false)]
        public int? Product5 { get; set; }

        /// <summary>
        /// Gets or Sets Product6
        /// </summary>
        [DataMember(Name="product6", EmitDefaultValue=false)]
        public int? Product6 { get; set; }

        /// <summary>
        /// Gets or Sets Product7
        /// </summary>
        [DataMember(Name="product7", EmitDefaultValue=false)]
        public int? Product7 { get; set; }

        /// <summary>
        /// Gets or Sets Product8
        /// </summary>
        [DataMember(Name="product8", EmitDefaultValue=false)]
        public int? Product8 { get; set; }

        /// <summary>
        /// Gets or Sets Product9
        /// </summary>
        [DataMember(Name="product9", EmitDefaultValue=false)]
        public int? Product9 { get; set; }

        /// <summary>
        /// Gets or Sets PodDays
        /// </summary>
        [DataMember(Name="podDays", EmitDefaultValue=false)]
        public int? PodDays { get; set; }

        /// <summary>
        /// Gets or Sets ChargeOut
        /// </summary>
        [DataMember(Name="chargeOut", EmitDefaultValue=false)]
        public string ChargeOut { get; set; }

        /// <summary>
        /// Gets or Sets ArEmail
        /// </summary>
        [DataMember(Name="arEmail", EmitDefaultValue=false)]
        public string ArEmail { get; set; }

        /// <summary>
        /// Gets or Sets OrderEmail
        /// </summary>
        [DataMember(Name="orderEmail", EmitDefaultValue=false)]
        public string OrderEmail { get; set; }

        /// <summary>
        /// Gets or Sets OrderAttach
        /// </summary>
        [DataMember(Name="orderAttach", EmitDefaultValue=false)]
        public string OrderAttach { get; set; }

        /// <summary>
        /// Gets or Sets SendQuantityType
        /// </summary>
        [DataMember(Name="sendQuantityType", EmitDefaultValue=false)]
        public string SendQuantityType { get; set; }

        /// <summary>
        /// Gets or Sets Minority
        /// </summary>
        [DataMember(Name="minority", EmitDefaultValue=false)]
        public string Minority { get; set; }

        /// <summary>
        /// Gets or Sets SendOutside
        /// </summary>
        [DataMember(Name="sendOutside", EmitDefaultValue=false)]
        public string SendOutside { get; set; }

        /// <summary>
        /// Gets or Sets PodOrderSuffix
        /// </summary>
        [DataMember(Name="podOrderSuffix", EmitDefaultValue=false)]
        public int? PodOrderSuffix { get; set; }

        /// <summary>
        /// Gets or Sets PodEmail
        /// </summary>
        [DataMember(Name="podEmail", EmitDefaultValue=false)]
        public string PodEmail { get; set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name="createDate", EmitDefaultValue=false)]
        public DateTime? CreateDate { get; set; }

        /// <summary>
        /// Gets or Sets ModifyDate
        /// </summary>
        [DataMember(Name="modifyDate", EmitDefaultValue=false)]
        public DateTime? ModifyDate { get; set; }

        /// <summary>
        /// Gets or Sets Inactive
        /// </summary>
        [DataMember(Name="inactive", EmitDefaultValue=false)]
        public string Inactive { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name="customFields", EmitDefaultValue=false)]
        public Dictionary<string, Object> CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Vendor {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  VendorNo: ").Append(VendorNo).Append("\n");
            sb.Append("  LobId: ").Append(LobId).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Street: ").Append(Street).Append("\n");
            sb.Append("  Street2: ").Append(Street2).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  ZipCode: ").Append(ZipCode).Append("\n");
            sb.Append("  Contact: ").Append(Contact).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  Fax: ").Append(Fax).Append("\n");
            sb.Append("  ExternalId: ").Append(ExternalId).Append("\n");
            sb.Append("  Terms: ").Append(Terms).Append("\n");
            sb.Append("  Fob: ").Append(Fob).Append("\n");
            sb.Append("  ShipVia: ").Append(ShipVia).Append("\n");
            sb.Append("  RequestDays: ").Append(RequestDays).Append("\n");
            sb.Append("  ActualDays: ").Append(ActualDays).Append("\n");
            sb.Append("  SalesTaxCode: ").Append(SalesTaxCode).Append("\n");
            sb.Append("  Product1: ").Append(Product1).Append("\n");
            sb.Append("  Product2: ").Append(Product2).Append("\n");
            sb.Append("  Product3: ").Append(Product3).Append("\n");
            sb.Append("  Product4: ").Append(Product4).Append("\n");
            sb.Append("  Product5: ").Append(Product5).Append("\n");
            sb.Append("  Product6: ").Append(Product6).Append("\n");
            sb.Append("  Product7: ").Append(Product7).Append("\n");
            sb.Append("  Product8: ").Append(Product8).Append("\n");
            sb.Append("  Product9: ").Append(Product9).Append("\n");
            sb.Append("  PodDays: ").Append(PodDays).Append("\n");
            sb.Append("  ChargeOut: ").Append(ChargeOut).Append("\n");
            sb.Append("  ArEmail: ").Append(ArEmail).Append("\n");
            sb.Append("  OrderEmail: ").Append(OrderEmail).Append("\n");
            sb.Append("  OrderAttach: ").Append(OrderAttach).Append("\n");
            sb.Append("  SendQuantityType: ").Append(SendQuantityType).Append("\n");
            sb.Append("  Minority: ").Append(Minority).Append("\n");
            sb.Append("  SendOutside: ").Append(SendOutside).Append("\n");
            sb.Append("  PodOrderSuffix: ").Append(PodOrderSuffix).Append("\n");
            sb.Append("  PodEmail: ").Append(PodEmail).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  ModifyDate: ").Append(ModifyDate).Append("\n");
            sb.Append("  Inactive: ").Append(Inactive).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Vendor);
        }

        /// <summary>
        /// Returns true if Vendor instances are equal
        /// </summary>
        /// <param name="input">Instance of Vendor to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Vendor input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.VendorNo == input.VendorNo ||
                    (this.VendorNo != null &&
                    this.VendorNo.Equals(input.VendorNo))
                ) && 
                (
                    this.LobId == input.LobId ||
                    (this.LobId != null &&
                    this.LobId.Equals(input.LobId))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Street == input.Street ||
                    (this.Street != null &&
                    this.Street.Equals(input.Street))
                ) && 
                (
                    this.Street2 == input.Street2 ||
                    (this.Street2 != null &&
                    this.Street2.Equals(input.Street2))
                ) && 
                (
                    this.City == input.City ||
                    (this.City != null &&
                    this.City.Equals(input.City))
                ) && 
                (
                    this.State == input.State ||
                    (this.State != null &&
                    this.State.Equals(input.State))
                ) && 
                (
                    this.Country == input.Country ||
                    (this.Country != null &&
                    this.Country.Equals(input.Country))
                ) && 
                (
                    this.ZipCode == input.ZipCode ||
                    (this.ZipCode != null &&
                    this.ZipCode.Equals(input.ZipCode))
                ) && 
                (
                    this.Contact == input.Contact ||
                    (this.Contact != null &&
                    this.Contact.Equals(input.Contact))
                ) && 
                (
                    this.Phone == input.Phone ||
                    (this.Phone != null &&
                    this.Phone.Equals(input.Phone))
                ) && 
                (
                    this.Fax == input.Fax ||
                    (this.Fax != null &&
                    this.Fax.Equals(input.Fax))
                ) && 
                (
                    this.ExternalId == input.ExternalId ||
                    (this.ExternalId != null &&
                    this.ExternalId.Equals(input.ExternalId))
                ) && 
                (
                    this.Terms == input.Terms ||
                    (this.Terms != null &&
                    this.Terms.Equals(input.Terms))
                ) && 
                (
                    this.Fob == input.Fob ||
                    (this.Fob != null &&
                    this.Fob.Equals(input.Fob))
                ) && 
                (
                    this.ShipVia == input.ShipVia ||
                    (this.ShipVia != null &&
                    this.ShipVia.Equals(input.ShipVia))
                ) && 
                (
                    this.RequestDays == input.RequestDays ||
                    (this.RequestDays != null &&
                    this.RequestDays.Equals(input.RequestDays))
                ) && 
                (
                    this.ActualDays == input.ActualDays ||
                    (this.ActualDays != null &&
                    this.ActualDays.Equals(input.ActualDays))
                ) && 
                (
                    this.SalesTaxCode == input.SalesTaxCode ||
                    (this.SalesTaxCode != null &&
                    this.SalesTaxCode.Equals(input.SalesTaxCode))
                ) && 
                (
                    this.Product1 == input.Product1 ||
                    (this.Product1 != null &&
                    this.Product1.Equals(input.Product1))
                ) && 
                (
                    this.Product2 == input.Product2 ||
                    (this.Product2 != null &&
                    this.Product2.Equals(input.Product2))
                ) && 
                (
                    this.Product3 == input.Product3 ||
                    (this.Product3 != null &&
                    this.Product3.Equals(input.Product3))
                ) && 
                (
                    this.Product4 == input.Product4 ||
                    (this.Product4 != null &&
                    this.Product4.Equals(input.Product4))
                ) && 
                (
                    this.Product5 == input.Product5 ||
                    (this.Product5 != null &&
                    this.Product5.Equals(input.Product5))
                ) && 
                (
                    this.Product6 == input.Product6 ||
                    (this.Product6 != null &&
                    this.Product6.Equals(input.Product6))
                ) && 
                (
                    this.Product7 == input.Product7 ||
                    (this.Product7 != null &&
                    this.Product7.Equals(input.Product7))
                ) && 
                (
                    this.Product8 == input.Product8 ||
                    (this.Product8 != null &&
                    this.Product8.Equals(input.Product8))
                ) && 
                (
                    this.Product9 == input.Product9 ||
                    (this.Product9 != null &&
                    this.Product9.Equals(input.Product9))
                ) && 
                (
                    this.PodDays == input.PodDays ||
                    (this.PodDays != null &&
                    this.PodDays.Equals(input.PodDays))
                ) && 
                (
                    this.ChargeOut == input.ChargeOut ||
                    (this.ChargeOut != null &&
                    this.ChargeOut.Equals(input.ChargeOut))
                ) && 
                (
                    this.ArEmail == input.ArEmail ||
                    (this.ArEmail != null &&
                    this.ArEmail.Equals(input.ArEmail))
                ) && 
                (
                    this.OrderEmail == input.OrderEmail ||
                    (this.OrderEmail != null &&
                    this.OrderEmail.Equals(input.OrderEmail))
                ) && 
                (
                    this.OrderAttach == input.OrderAttach ||
                    (this.OrderAttach != null &&
                    this.OrderAttach.Equals(input.OrderAttach))
                ) && 
                (
                    this.SendQuantityType == input.SendQuantityType ||
                    (this.SendQuantityType != null &&
                    this.SendQuantityType.Equals(input.SendQuantityType))
                ) && 
                (
                    this.Minority == input.Minority ||
                    (this.Minority != null &&
                    this.Minority.Equals(input.Minority))
                ) && 
                (
                    this.SendOutside == input.SendOutside ||
                    (this.SendOutside != null &&
                    this.SendOutside.Equals(input.SendOutside))
                ) && 
                (
                    this.PodOrderSuffix == input.PodOrderSuffix ||
                    (this.PodOrderSuffix != null &&
                    this.PodOrderSuffix.Equals(input.PodOrderSuffix))
                ) && 
                (
                    this.PodEmail == input.PodEmail ||
                    (this.PodEmail != null &&
                    this.PodEmail.Equals(input.PodEmail))
                ) && 
                (
                    this.CreateDate == input.CreateDate ||
                    (this.CreateDate != null &&
                    this.CreateDate.Equals(input.CreateDate))
                ) && 
                (
                    this.ModifyDate == input.ModifyDate ||
                    (this.ModifyDate != null &&
                    this.ModifyDate.Equals(input.ModifyDate))
                ) && 
                (
                    this.Inactive == input.Inactive ||
                    (this.Inactive != null &&
                    this.Inactive.Equals(input.Inactive))
                ) && 
                (
                    this.CustomFields == input.CustomFields ||
                    this.CustomFields != null &&
                    this.CustomFields.SequenceEqual(input.CustomFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.VendorNo != null)
                    hashCode = hashCode * 59 + this.VendorNo.GetHashCode();
                if (this.LobId != null)
                    hashCode = hashCode * 59 + this.LobId.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Street != null)
                    hashCode = hashCode * 59 + this.Street.GetHashCode();
                if (this.Street2 != null)
                    hashCode = hashCode * 59 + this.Street2.GetHashCode();
                if (this.City != null)
                    hashCode = hashCode * 59 + this.City.GetHashCode();
                if (this.State != null)
                    hashCode = hashCode * 59 + this.State.GetHashCode();
                if (this.Country != null)
                    hashCode = hashCode * 59 + this.Country.GetHashCode();
                if (this.ZipCode != null)
                    hashCode = hashCode * 59 + this.ZipCode.GetHashCode();
                if (this.Contact != null)
                    hashCode = hashCode * 59 + this.Contact.GetHashCode();
                if (this.Phone != null)
                    hashCode = hashCode * 59 + this.Phone.GetHashCode();
                if (this.Fax != null)
                    hashCode = hashCode * 59 + this.Fax.GetHashCode();
                if (this.ExternalId != null)
                    hashCode = hashCode * 59 + this.ExternalId.GetHashCode();
                if (this.Terms != null)
                    hashCode = hashCode * 59 + this.Terms.GetHashCode();
                if (this.Fob != null)
                    hashCode = hashCode * 59 + this.Fob.GetHashCode();
                if (this.ShipVia != null)
                    hashCode = hashCode * 59 + this.ShipVia.GetHashCode();
                if (this.RequestDays != null)
                    hashCode = hashCode * 59 + this.RequestDays.GetHashCode();
                if (this.ActualDays != null)
                    hashCode = hashCode * 59 + this.ActualDays.GetHashCode();
                if (this.SalesTaxCode != null)
                    hashCode = hashCode * 59 + this.SalesTaxCode.GetHashCode();
                if (this.Product1 != null)
                    hashCode = hashCode * 59 + this.Product1.GetHashCode();
                if (this.Product2 != null)
                    hashCode = hashCode * 59 + this.Product2.GetHashCode();
                if (this.Product3 != null)
                    hashCode = hashCode * 59 + this.Product3.GetHashCode();
                if (this.Product4 != null)
                    hashCode = hashCode * 59 + this.Product4.GetHashCode();
                if (this.Product5 != null)
                    hashCode = hashCode * 59 + this.Product5.GetHashCode();
                if (this.Product6 != null)
                    hashCode = hashCode * 59 + this.Product6.GetHashCode();
                if (this.Product7 != null)
                    hashCode = hashCode * 59 + this.Product7.GetHashCode();
                if (this.Product8 != null)
                    hashCode = hashCode * 59 + this.Product8.GetHashCode();
                if (this.Product9 != null)
                    hashCode = hashCode * 59 + this.Product9.GetHashCode();
                if (this.PodDays != null)
                    hashCode = hashCode * 59 + this.PodDays.GetHashCode();
                if (this.ChargeOut != null)
                    hashCode = hashCode * 59 + this.ChargeOut.GetHashCode();
                if (this.ArEmail != null)
                    hashCode = hashCode * 59 + this.ArEmail.GetHashCode();
                if (this.OrderEmail != null)
                    hashCode = hashCode * 59 + this.OrderEmail.GetHashCode();
                if (this.OrderAttach != null)
                    hashCode = hashCode * 59 + this.OrderAttach.GetHashCode();
                if (this.SendQuantityType != null)
                    hashCode = hashCode * 59 + this.SendQuantityType.GetHashCode();
                if (this.Minority != null)
                    hashCode = hashCode * 59 + this.Minority.GetHashCode();
                if (this.SendOutside != null)
                    hashCode = hashCode * 59 + this.SendOutside.GetHashCode();
                if (this.PodOrderSuffix != null)
                    hashCode = hashCode * 59 + this.PodOrderSuffix.GetHashCode();
                if (this.PodEmail != null)
                    hashCode = hashCode * 59 + this.PodEmail.GetHashCode();
                if (this.CreateDate != null)
                    hashCode = hashCode * 59 + this.CreateDate.GetHashCode();
                if (this.ModifyDate != null)
                    hashCode = hashCode * 59 + this.ModifyDate.GetHashCode();
                if (this.Inactive != null)
                    hashCode = hashCode * 59 + this.Inactive.GetHashCode();
                if (this.CustomFields != null)
                    hashCode = hashCode * 59 + this.CustomFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
